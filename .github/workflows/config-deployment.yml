name: Configuration Validation

on:
  push:
    branches: [main, develop]
    paths: &config-paths
      - 'config/**'
      - '.github/workflows/config-deployment.yml'
      - 'src/config/**'
      - 'docker-compose*.yml'
  pull_request:
    branches: [main, develop]
    paths: *config-paths
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment template to prioritise'
        required: false
        default: ''
        type: string

permissions:
  contents: read

env:
  PYTHONUNBUFFERED: 1
  PYTHONDONTWRITEBYTECODE: 1
  CONFIG_PATH_FILTER: |
    config:
      - 'config/**'
      - 'src/config/**'
      - 'docker-compose*.yml'

jobs:
  detect-config-changes:
    name: Detect configuration changes
    runs-on: ubuntu-latest
    outputs:
      config_changed: ${{ steps.filter.outputs.config }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Evaluate configuration diff
        id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          filters: ${{ env.CONFIG_PATH_FILTER }}

  validate-config:
    name: Validate configuration assets
    needs: detect-config-changes
    if: needs.detect-config-changes.outputs.config_changed == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      REQUESTED_ENVIRONMENT: ${{ github.event.inputs.environment || '' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Prepare Python toolchain
        uses: ./.github/actions/setup-environment
        with:
          python-version: '3.12'

      - name: Validate configuration files
        uses: ./.github/actions/validate-config
        with:
          environment: ${{ env.REQUESTED_ENVIRONMENT }}

      - name: Validate docker compose manifests
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v docker >/dev/null 2>&1; then
            echo "::error::Docker CLI is required for compose validation but was not found." >&2
            exit 1
          fi

          if [ -f docker-compose.yml ]; then
            docker compose -f docker-compose.yml config --quiet
          fi

          shopt -s nullglob
          for override in docker-compose.*.yml; do
            if [ "$override" = "docker-compose.yml" ]; then
              continue
            fi
            docker compose -f docker-compose.yml -f "$override" config --quiet
          done
