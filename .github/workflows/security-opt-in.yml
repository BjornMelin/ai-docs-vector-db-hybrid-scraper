name: Security Scan (On-Demand)

on:
  workflow_dispatch:
    inputs:
      include_bandit:
        description: "Run Bandit static analysis"
        required: false
        default: "true"
      include_safety:
        description: "Run Safety vulnerability check"
        required: false
        default: "true"
  pull_request:
    branches: [main, develop]
    paths:
      - "pyproject.toml"
      - "uv.lock"
      - "requirements*.txt"
      - "src/**"
      - ".github/workflows/security-opt-in.yml"

permissions:
  contents: read
  security-events: write

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: "3.12"
          cache-suffix: "-security"

      - name: Install audit tooling
        run: |
          uv tool install pip-audit
          uv tool install safety

      - name: Run pip-audit
        run: |
          set -euo pipefail
          uv tool run pip-audit --progress-spinner=off --format=json --output=pip-audit.json

      - name: Run safety
        if: github.event_name != 'workflow_dispatch' || github.event.inputs.include_safety == 'true'
        run: |
          set -euo pipefail
          uv tool run safety check --json --output=safety-report.json

      - name: Upload dependency reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dependency-security-reports
          path: |
            pip-audit.json
            safety-report.json
          if-no-files-found: ignore
          retention-days: 7

  code-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest
    needs: dependency-audit
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.include_bandit == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: "3.12"
          cache-suffix: "-bandit"
          install-dev: false

      - name: Install Bandit
        run: uv tool install bandit

      - name: Run Bandit (high severity)
        run: |
          set -euo pipefail
          uv tool run bandit -r src -lll -ii -o bandit-report.json -f json
          python3 - <<'PY'
          import json, sys
          with open('bandit-report.json', 'r', encoding='utf-8') as fh:
            data = json.load(fh)
          issues = [item for item in data.get('results', []) if item.get('issue_severity', '').lower() in {'high', 'medium'}]
          if issues:
            print(f"Found {len(issues)} potential security issues")
            sys.exit(1)
          print('No medium/high severity Bandit issues found')
          PY

      - name: Upload bandit report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bandit-report
          path: bandit-report.json
          retention-days: 7
