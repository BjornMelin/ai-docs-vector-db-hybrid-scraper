name: Core CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read

env:
  PYTHONUNBUFFERED: 1
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  UV_SYSTEM_PYTHON: 1
  UV_CACHE_COMPRESSION: 1

concurrency:
  group: core-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.filter.outputs.python }}
      tests: ${{ steps.filter.outputs.tests }}
      config: ${{ steps.filter.outputs.config }}
      docs: ${{ steps.filter.outputs.docs }}
      dependencies: ${{ steps.filter.outputs.dependencies }}
      workflows: ${{ steps.filter.outputs.workflows }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          filters: |
            python:
              - 'src/**/*.py'
              - 'scripts/**/*.py'
            tests:
              - 'tests/**/*.py'
              - 'tests/**/*.json'
              - 'tests/**/*.yml'
            config:
              - 'pyproject.toml'
              - 'uv.lock'
              - 'config/**'
            docs:
              - 'docs/**'
              - '*.md'
            dependencies:
              - 'requirements*.txt'
              - 'pyproject.toml'
              - 'uv.lock'
            workflows:
              - '.github/workflows/**'
              - '.github/actions/**'

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: detect-changes
    if: >-
      github.event_name == 'pull_request' ||
      github.event_name == 'workflow_dispatch' ||
      needs.detect-changes.outputs.python == 'true' ||
      needs.detect-changes.outputs.tests == 'true' ||
      needs.detect-changes.outputs.config == 'true' ||
      needs.detect-changes.outputs.dependencies == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: '3.12'
          cache-suffix: '-lint'

      - name: Ruff format (check)
        run: uv run ruff format --check .

      - name: Ruff lint
        run: uv run ruff check .

      - name: Pylint
        run: uv run pylint --fail-under=10 src scripts

      - name: Pyright
        run: uv run pyright

  tests:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: [detect-changes, lint]
    if: >-
      always() &&
      (needs.lint.result == 'success' || needs.lint.result == 'skipped') &&
      (
        github.event_name == 'pull_request' ||
        github.event_name == 'workflow_dispatch' ||
        needs.detect-changes.outputs.python == 'true' ||
        needs.detect-changes.outputs.tests == 'true' ||
        needs.detect-changes.outputs.config == 'true' ||
        needs.detect-changes.outputs.dependencies == 'true'
      )
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: '3.12'
          cache-suffix: '-tests'

      - name: Prepare test directories
        run: |
          mkdir -p tests/fixtures/{cache,data,logs}
          mkdir -p logs cache data

      - name: Run tests
        run: uv run python scripts/dev.py test --profile ci

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage-artifact
          path: coverage.xml
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload to Codecov
        if: success() && github.repository_owner != 'dependabot'
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: coverage.xml
          fail_ci_if_error: false

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [detect-changes, lint]
    if: >-
      needs.lint.result == 'success' &&
      (
        github.event_name == 'pull_request' ||
        github.event_name == 'workflow_dispatch' ||
        needs.detect-changes.outputs.python == 'true' ||
        needs.detect-changes.outputs.config == 'true' ||
        needs.detect-changes.outputs.dependencies == 'true'
      )
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: '3.12'
          cache-suffix: '-build'

      - name: Build distribution
        run: uv build

      - name: Check distribution metadata
        run: |
          uv tool install twine
          uv tool run twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: distribution-artifacts
          path: dist/
          retention-days: 7

  security:
    name: Dependency Audit
    runs-on: ubuntu-latest
    needs: [detect-changes, lint]
    if: >-
      needs.lint.result == 'success' &&
      (
        github.event_name == 'pull_request' ||
        github.event_name == 'workflow_dispatch' ||
        needs.detect-changes.outputs.python == 'true' ||
        needs.detect-changes.outputs.dependencies == 'true'
      )
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: '3.12'
          cache-suffix: '-security'

      - name: Install security tooling
        run: |
          set -e
          uv tool install pip-audit bandit safety

      - name: Run pip-audit
        run: uv tool run pip-audit --progress-spinner=off --format=json --output=pip-audit.json

      - name: Run safety check
        run: uv tool run safety check --json --output=safety-report.json

      - name: Run Bandit
        run: uv tool run bandit -q -r src -f json -o bandit-report.json

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: security-reports
          path: |
            pip-audit.json
            safety-report.json
            bandit-report.json
          retention-days: 7
