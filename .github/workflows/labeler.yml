name: Labeler

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  issues:
    types:
      - opened
      - reopened

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  pull-requests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Apply file based labels
        uses: actions/labeler@634933edcd8ababfe52f92936142cc22ac488b1b # v6.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
          sync-labels: true

      - name: Apply size labels
        uses: codelytv/pr-size-labeler@4ec67706cd878fbc1c8db0a5dcd28b6bb412e85a # v1.10.3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/xs'
          xs_max_size: 10
          s_label: 'size/s'
          s_max_size: 100
          m_label: 'size/m'
          m_max_size: 500
          l_label: 'size/l'
          l_max_size: 1000
          xl_label: 'size/xl'

      - name: Apply conventional labels
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            const title = context.payload.pull_request.title.toLowerCase();
            const labels = [];

            if (title.startsWith('feat:') || title.includes('feature')) {
              labels.push('enhancement');
            }
            if (title.startsWith('fix:') || title.includes('bug')) {
              labels.push('bug');
            }
            if (title.startsWith('docs:') || title.includes('docs')) {
              labels.push('documentation');
            }
            if (title.startsWith('ci:')) {
              labels.push('ci/cd');
            }
            if (title.startsWith('refactor:')) {
              labels.push('refactoring');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels,
              });
            }

      - name: Auto-assign PR
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            const author = context.payload.pull_request.user.login;
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: [author],
            });

            const maintainer = context.repo.owner;
            if (author !== maintainer) {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                reviewers: [maintainer],
              });
            }

  issues:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: Add needs-triage label
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['needs-triage']
            });

      - name: Classify issue keywords
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            const title = context.payload.issue.title.toLowerCase();
            const body = (context.payload.issue.body || '').toLowerCase();
            const content = `${title} ${body}`;
            const labels = new Set();

            if (content.includes('bug') || content.includes('error') || content.includes('regression')) {
              labels.add('bug');
            }
            if (content.includes('feature') || content.includes('enhancement')) {
              labels.add('enhancement');
            }
            if (content.includes('doc') || content.includes('readme')) {
              labels.add('documentation');
            }
            if (content.includes('question') || content.includes('how do i')) {
              labels.add('question');
            }

            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: Array.from(labels),
              });
            }
