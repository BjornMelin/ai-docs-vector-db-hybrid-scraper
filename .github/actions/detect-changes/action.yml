name: 'Detect Configuration Changes'
description: 'Detects configuration changes and determines deployment strategy'
inputs:
  github-event-name:
    description: 'GitHub event name'
    required: true
  github-ref:
    description: 'GitHub reference'
    required: true
  workflow-dispatch-environment:
    description: 'Environment from workflow dispatch'
    required: false
    default: ''
outputs:
  profiles-changed:
    description: 'Whether configuration profiles changed'
    value: ${{ steps.changes.outputs.profiles }}
  templates-changed:
    description: 'Whether configuration templates changed'
    value: ${{ steps.changes.outputs.templates }}
  monitoring-changed:
    description: 'Whether monitoring configuration changed'
    value: ${{ steps.changes.outputs.monitoring }}
  security-changed:
    description: 'Whether security configuration changed'
    value: ${{ steps.changes.outputs.security }}
  infrastructure-changed:
    description: 'Whether infrastructure configuration changed'
    value: ${{ steps.changes.outputs.infrastructure }}
  should-deploy:
    description: 'Whether deployment should proceed'
    value: ${{ steps.should-deploy.outputs.result }}
  target-environment:
    description: 'Target deployment environment'
    value: ${{ steps.environment.outputs.target }}
  deployment-strategy:
    description: 'Deployment strategy to use'
    value: ${{ steps.strategy.outputs.strategy }}

runs:
  using: "composite"
  steps:
    - name: Detect configuration changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          profiles:
            - 'config/templates/**'
            - 'config/profiles/**'
          templates:
            - 'config/templates/**'
          monitoring:
            - 'config/prometheus/**'
            - 'config/grafana/**'
            - 'config/alertmanager/**'
          security:
            - 'src/security/**'
            - 'config/**/*.json'
            - 'config/**/*.yml'
          infrastructure:
            - 'docker-compose*.yml'
            - 'config/profiles/**'

    - name: Determine target environment
      id: environment
      shell: bash
      run: |
        if [ "${{ inputs.github-event-name }}" == "workflow_dispatch" ]; then
          echo "target=${{ inputs.workflow-dispatch-environment }}" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.github-ref }}" == "refs/heads/main" ]; then
          echo "target=production" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.github-ref }}" == "refs/heads/develop" ]; then
          echo "target=staging" >> $GITHUB_OUTPUT
        else
          echo "target=development" >> $GITHUB_OUTPUT
        fi

    - name: Determine deployment strategy
      id: strategy
      shell: bash
      run: |
        TARGET_ENV="${{ steps.environment.outputs.target }}"
        if [ "$TARGET_ENV" == "production" ]; then
          echo "strategy=blue-green" >> $GITHUB_OUTPUT
        elif [ "$TARGET_ENV" == "staging" ]; then
          echo "strategy=rolling" >> $GITHUB_OUTPUT
        else
          echo "strategy=direct" >> $GITHUB_OUTPUT
        fi

    - name: Should deploy decision
      id: should-deploy
      shell: bash
      run: |
        if [ "${{ steps.changes.outputs.profiles }}" == "true" ] || \
           [ "${{ steps.changes.outputs.templates }}" == "true" ] || \
           [ "${{ steps.changes.outputs.monitoring }}" == "true" ] || \
           [ "${{ steps.changes.outputs.security }}" == "true" ] || \
           [ "${{ steps.changes.outputs.infrastructure }}" == "true" ] || \
           [ "${{ inputs.github-event-name }}" == "workflow_dispatch" ]; then
          echo "result=true" >> $GITHUB_OUTPUT
        else
          echo "result=false" >> $GITHUB_OUTPUT
        fi