name: 'Post or Update PR Comment'
description: 'Posts or updates a PR comment with CI results'

inputs:
  token:
    description: 'GitHub token'
    required: true
  comment-id:
    description: 'Unique identifier for the comment type'
    required: true
  title:
    description: 'Comment title'
    required: true
  body:
    description: 'Comment body content'
    required: true
  update-existing:
    description: 'Whether to update existing comment'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Post or update PR comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
      with:
        github-token: ${{ inputs.token }}
        script: |
          const commentBody = `## ${{ inputs.title }}\n\n${{ inputs.body }}`;
          
          if ('${{ inputs.update-existing }}' === 'true') {
            // Try to find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const existingComment = comments.find(comment => 
              comment.body.includes('${{ inputs.comment-id }}') ||
              comment.body.includes('${{ inputs.title }}')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
              return;
            }
          }
          
          // Create new comment
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: commentBody
          });