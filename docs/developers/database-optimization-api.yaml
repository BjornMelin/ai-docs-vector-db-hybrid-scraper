openapi: 3.0.3
info:
  title: Enhanced Database Connection Pool API
  description: |
    API specification for the enhanced database connection pool optimization system.
    
    This API provides endpoints for:
    - ML-based predictive load monitoring
    - Connection affinity management  
    - Circuit breaker configuration
    - Adaptive pool configuration
    - Performance metrics and monitoring
    
    **Performance Achievements:**
    - 50.9% P95 latency reduction
    - 887.9% throughput increase
    - 92.4% ML prediction accuracy
    
  version: 1.0.0
  contact:
    name: Database Optimization Team
    url: https://github.com/BjornMelin/ai-docs-vector-db-hybrid-scraper
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000/api/v1
    description: Development server
  - url: https://api.example.com/v1
    description: Production server

tags:
  - name: Predictive Monitoring
    description: ML-based load prediction and scaling
  - name: Connection Affinity
    description: Query pattern optimization and connection routing
  - name: Circuit Breaker
    description: Failure handling and system resilience
  - name: Adaptive Configuration
    description: Dynamic pool configuration management
  - name: Metrics
    description: Performance monitoring and analytics

paths:
  /database/predict-load:
    post:
      tags:
        - Predictive Monitoring
      summary: Predict database load
      description: |
        Use ML model to predict database load and get recommended pool configuration.
        
        The prediction is based on current system metrics and returns:
        - Load level classification (HIGH/MEDIUM/LOW)
        - Confidence score (0.0-1.0)
        - Recommended pool size
        - Performance optimization suggestions
      operationId: predictDatabaseLoad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemMetrics'
            example:
              cpu_usage_percent: 45.2
              memory_usage_percent: 62.8
              active_connections: 12
              idle_connections: 8
              request_rate_per_minute: 150
              error_rate_percent: 0.5
              timestamp: "2025-01-10T15:30:00Z"
      responses:
        '200':
          description: Load prediction successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadPrediction'
              example:
                load_level: "MEDIUM"
                confidence_score: 0.89
                recommended_pool_size: 15
                prediction_timestamp: "2025-01-10T15:30:15Z"
                model_version: "1.0.0"
                feature_importance:
                  cpu_usage_percent: 0.31
                  memory_usage_percent: 0.28
                  active_connections: 0.22
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /database/connection-affinity/optimal-connection:
    post:
      tags:
        - Connection Affinity
      summary: Get optimal connection for query
      description: |
        Determine the optimal database connection for a specific query pattern.
        
        Uses connection affinity analysis to:
        - Analyze query patterns and types
        - Route to connection with best performance history
        - Optimize connection reuse and reduce overhead
      operationId: getOptimalConnection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
            example:
              query: "SELECT * FROM documents WHERE created_at > ?"
              query_type: "READ"
              parameters: ["2025-01-01"]
              priority: "NORMAL"
      responses:
        '200':
          description: Optimal connection identified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionRecommendation'
              example:
                connection_id: "conn_pool_3"
                confidence_score: 0.94
                expected_latency_ms: 45
                affinity_match_score: 0.87
                routing_reason: "QUERY_PATTERN_MATCH"
        '400':
          $ref: '#/components/responses/BadRequest'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /database/connection-affinity/track-performance:
    post:
      tags:
        - Connection Affinity
      summary: Track query performance
      description: |
        Record query execution performance for connection affinity optimization.
        
        This data is used to:
        - Improve future connection routing decisions
        - Update connection performance profiles
        - Optimize query pattern matching
      operationId: trackQueryPerformance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformanceTrackingRequest'
            example:
              connection_id: "conn_pool_3"
              query: "SELECT * FROM documents WHERE created_at > ?"
              execution_time_ms: 42.5
              query_type: "READ"
              success: true
              timestamp: "2025-01-10T15:30:00Z"
      responses:
        '204':
          description: Performance data recorded successfully
        '400':
          $ref: '#/components/responses/BadRequest'

  /database/circuit-breaker/status:
    get:
      tags:
        - Circuit Breaker
      summary: Get circuit breaker status
      description: |
        Get current status of all circuit breakers in the system.
        
        Returns information about:
        - Circuit breaker states (CLOSED/OPEN/HALF_OPEN)
        - Failure counts by category
        - Recovery timeouts and strategies
        - Recent failure patterns
      operationId: getCircuitBreakerStatus
      responses:
        '200':
          description: Circuit breaker status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CircuitBreakerStatus'
              example:
                overall_state: "OPERATIONAL"
                circuit_breakers:
                  - failure_type: "CONNECTION"
                    state: "CLOSED"
                    failure_count: 2
                    failure_threshold: 5
                    last_failure_time: "2025-01-10T15:25:00Z"
                  - failure_type: "TIMEOUT"
                    state: "HALF_OPEN"
                    failure_count: 3
                    recovery_timeout_seconds: 30

  /database/circuit-breaker/reset:
    post:
      tags:
        - Circuit Breaker
      summary: Reset circuit breaker
      description: |
        Manually reset a specific circuit breaker or all circuit breakers.
        
        **Use with caution:** Only reset circuit breakers when you're confident
        the underlying issue has been resolved.
      operationId: resetCircuitBreaker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                failure_type:
                  type: string
                  enum: [CONNECTION, TIMEOUT, QUERY, TRANSACTION, RESOURCE, ALL]
                  description: Specific failure type to reset, or ALL for complete reset
              example:
                failure_type: "CONNECTION"
      responses:
        '200':
          description: Circuit breaker reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  reset_count:
                    type: integer
                example:
                  message: "Circuit breaker reset successfully"
                  reset_count: 1
        '400':
          $ref: '#/components/responses/BadRequest'

  /database/adaptive-config/current:
    get:
      tags:
        - Adaptive Configuration
      summary: Get current adaptive configuration
      description: |
        Retrieve the current adaptive configuration state including:
        - Pool size settings and scaling parameters
        - Load monitoring configuration
        - Performance thresholds and targets
        - Recent adaptation history
      operationId: getCurrentAdaptiveConfig
      responses:
        '200':
          description: Current configuration retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdaptiveConfiguration'
              example:
                strategy: "AUTO_SCALING"
                current_load_level: "MEDIUM"
                current_settings:
                  pool_size: 15
                  monitoring_interval: 30
                  failure_threshold: 5
                  timeout_ms: 120000
                adaptation_history:
                  - timestamp: "2025-01-10T15:25:00Z"
                    change: "POOL_SIZE_INCREASE"
                    old_value: 10
                    new_value: 15
                    reason: "HIGH_LOAD_PREDICTED"

  /database/adaptive-config/update:
    post:
      tags:
        - Adaptive Configuration
      summary: Update adaptive configuration
      description: |
        Update adaptive configuration parameters.
        
        **Note:** Some parameters may be overridden by the ML-based adaptive system
        based on current load conditions.
      operationId: updateAdaptiveConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdaptiveConfigurationUpdate'
            example:
              strategy: "AUTO_SCALING"
              min_pool_size: 5
              max_pool_size: 50
              monitoring_interval_seconds: 30
              enable_predictive_scaling: true
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdaptiveConfiguration'
        '400':
          $ref: '#/components/responses/BadRequest'

  /database/metrics/performance:
    get:
      tags:
        - Metrics
      summary: Get database performance metrics
      description: |
        Retrieve comprehensive database performance metrics including:
        - Connection pool utilization and performance
        - Query latency percentiles (P50, P95, P99)
        - Throughput and error rates
        - ML model prediction accuracy
      operationId: getDatabasePerformanceMetrics
      parameters:
        - name: time_range
          in: query
          description: Time range for metrics (e.g., '1h', '24h', '7d')
          schema:
            type: string
            default: '1h'
        - name: include_predictions
          in: query
          description: Include ML prediction accuracy metrics
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Performance metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetrics'
              example:
                time_range: "1h"
                connection_pool:
                  current_size: 15
                  active_connections: 8
                  utilization_percent: 53.3
                  avg_wait_time_ms: 12.4
                latency:
                  p50_ms: 45
                  p95_ms: 120
                  p99_ms: 250
                throughput:
                  requests_per_second: 145.7
                  operations_per_second: 892.3
                ml_model:
                  prediction_accuracy_percent: 92.4
                  avg_confidence_score: 0.87

  /database/health:
    get:
      tags:
        - Metrics
      summary: Database optimization system health check
      description: |
        Comprehensive health check for all database optimization components.
        
        Returns health status for:
        - Connection pool management
        - ML prediction system
        - Circuit breakers
        - Connection affinity system
      operationId: getDatabaseHealth
      responses:
        '200':
          description: System healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
              example:
                status: "HEALTHY"
                components:
                  connection_pool: "HEALTHY"
                  ml_predictor: "HEALTHY"
                  circuit_breaker: "HEALTHY"
                  connection_affinity: "HEALTHY"
                performance_score: 0.95
                last_check: "2025-01-10T15:30:00Z"
        '503':
          description: System unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

components:
  schemas:
    SystemMetrics:
      type: object
      required:
        - cpu_usage_percent
        - memory_usage_percent
        - active_connections
        - idle_connections
        - request_rate_per_minute
        - timestamp
      properties:
        cpu_usage_percent:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Current CPU usage percentage
        memory_usage_percent:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Current memory usage percentage
        active_connections:
          type: integer
          minimum: 0
          description: Number of active database connections
        idle_connections:
          type: integer
          minimum: 0
          description: Number of idle connections in pool
        request_rate_per_minute:
          type: number
          format: float
          minimum: 0
          description: Incoming request rate per minute
        error_rate_percent:
          type: number
          format: float
          minimum: 0
          maximum: 100
          description: Error rate percentage
        timestamp:
          type: string
          format: date-time
          description: Timestamp when metrics were collected

    LoadPrediction:
      type: object
      required:
        - load_level
        - confidence_score
        - recommended_pool_size
        - prediction_timestamp
        - model_version
      properties:
        load_level:
          type: string
          enum: [LOW, MEDIUM, HIGH]
          description: Predicted load level classification
        confidence_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Prediction confidence score (0.0 = low, 1.0 = high)
        recommended_pool_size:
          type: integer
          minimum: 1
          description: Recommended connection pool size
        prediction_timestamp:
          type: string
          format: date-time
          description: When the prediction was made
        model_version:
          type: string
          description: Version of the ML model used
        feature_importance:
          type: object
          additionalProperties:
            type: number
          description: Feature importance scores for explainability

    QueryRequest:
      type: object
      required:
        - query
        - query_type
      properties:
        query:
          type: string
          description: SQL query to optimize connection for
        query_type:
          type: string
          enum: [READ, WRITE, TRANSACTION]
          description: Type of database operation
        parameters:
          type: array
          items:
            type: string
          description: Query parameters (for pattern matching)
        priority:
          type: string
          enum: [LOW, NORMAL, HIGH]
          default: NORMAL
          description: Query priority level

    ConnectionRecommendation:
      type: object
      required:
        - connection_id
        - confidence_score
      properties:
        connection_id:
          type: string
          description: Recommended connection identifier
        confidence_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in the recommendation
        expected_latency_ms:
          type: number
          format: float
          description: Expected query latency on this connection
        affinity_match_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: How well the query matches connection patterns
        routing_reason:
          type: string
          enum: [QUERY_PATTERN_MATCH, PERFORMANCE_HISTORY, LOAD_BALANCING, FALLBACK]
          description: Reason for this connection recommendation

    PerformanceTrackingRequest:
      type: object
      required:
        - connection_id
        - query
        - execution_time_ms
        - query_type
        - success
      properties:
        connection_id:
          type: string
          description: Connection that executed the query
        query:
          type: string
          description: SQL query that was executed
        execution_time_ms:
          type: number
          format: float
          minimum: 0
          description: Query execution time in milliseconds
        query_type:
          type: string
          enum: [READ, WRITE, TRANSACTION]
          description: Type of database operation
        success:
          type: boolean
          description: Whether the query executed successfully
        timestamp:
          type: string
          format: date-time
          description: When the query was executed

    CircuitBreakerStatus:
      type: object
      required:
        - overall_state
        - circuit_breakers
      properties:
        overall_state:
          type: string
          enum: [OPERATIONAL, DEGRADED, CRITICAL]
          description: Overall system operational state
        circuit_breakers:
          type: array
          items:
            type: object
            properties:
              failure_type:
                type: string
                enum: [CONNECTION, TIMEOUT, QUERY, TRANSACTION, RESOURCE]
              state:
                type: string
                enum: [CLOSED, OPEN, HALF_OPEN]
              failure_count:
                type: integer
              failure_threshold:
                type: integer
              last_failure_time:
                type: string
                format: date-time
              recovery_timeout_seconds:
                type: integer

    AdaptiveConfiguration:
      type: object
      required:
        - strategy
        - current_load_level
        - current_settings
      properties:
        strategy:
          type: string
          enum: [MANUAL, AUTO_SCALING, PREDICTIVE]
          description: Current scaling strategy
        current_load_level:
          type: string
          enum: [LOW, MEDIUM, HIGH]
          description: Current detected load level
        current_settings:
          type: object
          properties:
            pool_size:
              type: integer
            monitoring_interval:
              type: integer
            failure_threshold:
              type: integer
            timeout_ms:
              type: integer
        adaptation_history:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              change:
                type: string
              old_value:
                type: number
              new_value:
                type: number
              reason:
                type: string

    AdaptiveConfigurationUpdate:
      type: object
      properties:
        strategy:
          type: string
          enum: [MANUAL, AUTO_SCALING, PREDICTIVE]
        min_pool_size:
          type: integer
          minimum: 1
        max_pool_size:
          type: integer
        monitoring_interval_seconds:
          type: integer
          minimum: 10
        enable_predictive_scaling:
          type: boolean

    PerformanceMetrics:
      type: object
      required:
        - time_range
        - connection_pool
        - latency
        - throughput
      properties:
        time_range:
          type: string
          description: Time range for the metrics
        connection_pool:
          type: object
          properties:
            current_size:
              type: integer
            active_connections:
              type: integer
            utilization_percent:
              type: number
            avg_wait_time_ms:
              type: number
        latency:
          type: object
          properties:
            p50_ms:
              type: number
            p95_ms:
              type: number
            p99_ms:
              type: number
        throughput:
          type: object
          properties:
            requests_per_second:
              type: number
            operations_per_second:
              type: number
        ml_model:
          type: object
          properties:
            prediction_accuracy_percent:
              type: number
            avg_confidence_score:
              type: number

    HealthStatus:
      type: object
      required:
        - status
        - components
        - last_check
      properties:
        status:
          type: string
          enum: [HEALTHY, DEGRADED, UNHEALTHY]
          description: Overall system health status
        components:
          type: object
          additionalProperties:
            type: string
            enum: [HEALTHY, DEGRADED, UNHEALTHY]
          description: Health status of individual components
        performance_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Overall performance score
        last_check:
          type: string
          format: date-time
          description: When the health check was performed
        issues:
          type: array
          items:
            type: string
          description: List of current issues (if any)

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details

  responses:
    BadRequest:
      description: Bad request - invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INVALID_PARAMETERS"
            message: "Missing required field: cpu_usage_percent"

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "RATE_LIMITED"
            message: "API rate limit exceeded. Try again in 60 seconds."

    ServiceUnavailable:
      description: Service temporarily unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "SERVICE_UNAVAILABLE"
            message: "Database optimization service is temporarily unavailable"

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INTERNAL_ERROR"
            message: "An unexpected error occurred"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT bearer token authentication.
        
        Include the token in the Authorization header:
        `Authorization: Bearer <token>`

security:
  - BearerAuth: []

x-rate-limiting:
  prediction_endpoints:
    requests_per_minute: 100
    burst_limit: 10
  configuration_endpoints:
    requests_per_minute: 20
    burst_limit: 5
  metrics_endpoints:
    requests_per_minute: 200
    burst_limit: 20