apiVersion: apps/v1
kind: Deployment
metadata:
  name: dragonfly
  namespace: ai-docs-system
  labels:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: ai-docs-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dragonfly
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dragonfly
        app.kubernetes.io/component: cache
    spec:
      containers:
      - name: dragonfly
        image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
        ports:
        - containerPort: 6379
          name: redis-port
        env:
        - name: DRAGONFLY_THREADS
          value: "8"
        - name: DRAGONFLY_MEMORY_LIMIT
          value: "4gb"
        - name: DRAGONFLY_SNAPSHOT_INTERVAL
          value: "3600"
        - name: DRAGONFLY_SAVE_SCHEDULE
          value: "0 */1 * * *"
        args:
        - "--logtostderr"
        - "--cache_mode"
        - "--maxmemory_policy=allkeys-lru"
        - "--compression=zstd"
        volumeMounts:
        - name: dragonfly-data
          mountPath: /data
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "6379"
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -p
            - "6379"
            - ping
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: dragonfly-data
        persistentVolumeClaim:
          claimName: dragonfly-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dragonfly-pvc
  namespace: ai-docs-system
  labels:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/component: cache
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp2  # Change to your preferred storage class

---
apiVersion: v1
kind: Service
metadata:
  name: dragonfly
  namespace: ai-docs-system
  labels:
    app.kubernetes.io/name: dragonfly
    app.kubernetes.io/component: cache
spec:
  selector:
    app.kubernetes.io/name: dragonfly
  ports:
  - name: redis-port
    port: 6379
    targetPort: 6379