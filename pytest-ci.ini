[pytest]
# CI-Specific pytest Configuration - Optimized for parallel execution

# Inherit base configuration
addopts = 
    # Base options from pytest.ini
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    -ra
    --maxfail=5  # Lower for CI
    --durations=20
    --showlocals
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=80
    # CI-optimized timeouts
    --timeout=180  # Shorter timeout for CI
    --timeout-method=thread
    -p no:randomly
    # Advanced pytest-xdist configuration for CI
    --dist=loadscope
    --numprocesses=auto
    --maxprocesses=4
    --max-worker-restart=2
    # Force clean subprocess execution
    --tx=popen//python=python
    # Better output for CI logs
    -v
    --no-header
    --tb=short
    --color=yes
    # Import optimization
    --import-mode=importlib
    # Performance reporting
    --performance-report=test-performance.json

# CI-specific test paths
testpaths = tests/unit tests/integration

# Stricter collection for CI
python_files = test_*.py
python_functions = test_*
python_classes = Test*

# CI environment variables
[pytest:ini]
env = 
    CI=true
    PYTEST_TIMEOUT=180
    PYTEST_XDIST_AUTO_NUM_WORKERS=4
    PYTHONDONTWRITEBYTECODE=1
    PYTHONUNBUFFERED=1

# Coverage settings optimized for parallel execution
[coverage:run]
source = src
parallel = true
concurrency = multiprocessing,thread
branch = true
data_file = .coverage
sigterm = true
relative_files = true

[coverage:report]
precision = 2
show_missing = true
skip_covered = true
skip_empty = true
exclude_lines = 
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract
    @abstractmethod
    assert False
    if sys.platform

[coverage:paths]
source = 
    src/
    */src

# CI-specific markers
markers =
    # CI categories
    ci_only: marks tests that should only run in CI
    ci_skip: marks tests to skip in CI environments
    ci_slow: marks tests that are slow in CI
    
    # Resource markers for CI
    high_memory: marks tests requiring > 1GB memory
    high_cpu: marks tests requiring multiple CPU cores
    
    # Flaky test management
    flaky: marks tests known to be flaky
    retry: marks tests that should be retried on failure