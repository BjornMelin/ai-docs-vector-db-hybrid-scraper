comprehensive_return_fix.py:51:20: BLE001 Do not catch blind exception: `Exception`
   |
49 |                     fixed_files.append(str(file_path))
50 |
51 |             except Exception as e:
   |                    ^^^^^^^^^ BLE001
52 |                 print(f"Error fixing {file_path}: {e}")
   |

comprehensive_syntax_fix.py:53:16: BLE001 Do not catch blind exception: `Exception`
   |
51 |                 fixed_files.append(str(file_path))
52 |
53 |         except Exception as e:
   |                ^^^^^^^^^ BLE001
54 |             print(f"Error fixing {file_path}: {e}")
   |

examples/enhanced_security_config_demo.py:436:21: G003 Logging statement uses `+`
    |
434 |         demo_data_classification()
435 |
436 |         logger.info("\n" + "=" * 60)
    |                     ^^^^^^^^^^^^^^^ G003
437 |         logger.info("All demonstrations completed successfully!")
438 |         logger.info("Enhanced security configuration management provides:")
    |

examples/parallel_processing_usage.py:268:22: RUF001 String contains ambiguous `ℹ` (INFORMATION SOURCE). Did you mean `i` (LATIN SMALL LETTER I)?
    |
266 |             logger.info(f"   • {opt}")  # TODO: Convert f-string to logging format
267 |     else:
268 |         logger.info("ℹ️  No optimizations needed - system is already optimal")
    |                      ^ RUF001
269 |
270 |     logger.info(
    |

examples/security_config_demo.py:473:21: G003 Logging statement uses `+`
    |
471 |         demo_data_classification()
472 |
473 |         logger.info("\n" + "=" * 60)
    |                     ^^^^^^^^^^^^^^^ G003
474 |         logger.info("All demonstrations completed successfully!")
475 |         logger.info("Enhanced security configuration management provides:")
    |

fix_try300_violations.py:20:9: N802 Function name `visit_Try` should be lowercase
   |
18 |         self.changes_made = False
19 |
20 |     def visit_Try(self, node: ast.Try) -> Any:
   |         ^^^^^^^^^ N802
21 |         """Visit try nodes and check for TRY300 violations."""
22 |         # Look for return statements at the end of try block
   |

fix_try300_violations.py:71:9: TRY300 Consider moving this statement to an `else` block
   |
69 |             return True
70 |
71 |         return False
   |         ^^^^^^^^^^^^ TRY300
72 |
73 |     except Exception as e:
   |

fix_try300_violations.py:74:56: TRY401 Redundant exception object included in `logging.exception` call
   |
73 |     except Exception as e:
74 |         logger.exception(f"Failed to fix {file_path}: {e}")
   |                                                        ^ TRY401
75 |         return False
   |

src/architecture/service_factory.py:332:1: W293 [*] Blank line contains whitespace
    |
330 | class _ServiceFactorySingleton:
331 |     """Singleton holder for service factory instance."""
332 |     
    | ^^^^ W293
333 |     _instance: ModeAwareServiceFactory | None = None
    |
    = help: Remove whitespace from blank line

src/architecture/service_factory.py:334:1: W293 [*] Blank line contains whitespace
    |
333 |     _instance: ModeAwareServiceFactory | None = None
334 |     
    | ^^^^ W293
335 |     @classmethod
336 |     def get_instance(cls) -> ModeAwareServiceFactory:
    |
    = help: Remove whitespace from blank line

src/architecture/service_factory.py:341:1: W293 [*] Blank line contains whitespace
    |
339 |             cls._instance = ModeAwareServiceFactory()
340 |         return cls._instance
341 |     
    | ^^^^ W293
342 |     @classmethod
343 |     def reset_instance(cls) -> None:
    |
    = help: Remove whitespace from blank line

src/automation/config_automation.py:353:1: W293 [*] Blank line contains whitespace
    |
351 | class _ConfigManagerSingleton:
352 |     """Singleton holder for config manager instance."""
353 |     
    | ^^^^ W293
354 |     _instance: AutoConfigManager | None = None
    |
    = help: Remove whitespace from blank line

src/automation/config_automation.py:355:1: W293 [*] Blank line contains whitespace
    |
354 |     _instance: AutoConfigManager | None = None
355 |     
    | ^^^^ W293
356 |     @classmethod
357 |     async def get_instance(cls) -> AutoConfigManager:
    |
    = help: Remove whitespace from blank line

src/automation/config_automation.py:377:1: W293 [*] Blank line contains whitespace
    |
375 |     """Start the configuration automation system."""
376 |     config_manager = await _ConfigManagerSingleton.get_instance()
377 |     
    | ^^^^ W293
378 |     if config_manager.config is None:
379 |         await config_manager.initialize()
    |
    = help: Remove whitespace from blank line

src/automation/config_automation.py:383:5: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
381 |     # Start drift healing
382 |     drift_healer = ConfigDriftHealer(config_manager)
383 |     asyncio.create_task(drift_healer.start_monitoring())
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
384 |
385 |     logger.info("Configuration automation system started")
    |

src/automation/infrastructure_automation.py:230:13: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
228 |             logger.exception("Failed to initialize database")
229 |             # Start background recovery
230 |             asyncio.create_task(self._background_recovery())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
231 |
232 |     async def _create_engine_with_retry(self) -> AsyncEngine:
    |

src/automation/infrastructure_automation.py:322:13: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
320 |             logger.exception("Database recovery failed")
321 |             # Schedule retry
322 |             asyncio.create_task(self._delayed_recovery())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
323 |
324 |     async def _delayed_recovery(self):
    |

src/automation/infrastructure_automation.py:511:9: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
509 |         # Initialize auto-scaling
510 |         self.scaling_manager = AutoScalingManager()
511 |         asyncio.create_task(self.scaling_manager.start_monitoring())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
512 |
513 |         logger.info("Self-healing infrastructure initialized")
    |

src/automation/infrastructure_automation.py:552:1: W293 [*] Blank line contains whitespace
    |
550 | class _SelfHealingManagerSingleton:
551 |     """Singleton holder for self-healing manager instance."""
552 |     
    | ^^^^ W293
553 |     _instance: SelfHealingManager | None = None
    |
    = help: Remove whitespace from blank line

src/automation/infrastructure_automation.py:554:1: W293 [*] Blank line contains whitespace
    |
553 |     _instance: SelfHealingManager | None = None
554 |     
    | ^^^^ W293
555 |     @classmethod
556 |     async def get_instance(cls) -> SelfHealingManager:
    |
    = help: Remove whitespace from blank line

src/automation/self_healing/auto_remediation_engine.py:835:23: DTZ003 `datetime.datetime.utcnow()` used
    |
833 |         checkpoint = SystemCheckpoint(
834 |             checkpoint_id=checkpoint_id,
835 |             timestamp=datetime.utcnow(),
    |                       ^^^^^^^^^^^^^^^^^ DTZ003
836 |             configuration_state=await self._capture_configuration_state(),
837 |             service_states=await self._capture_service_states(),
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/auto_remediation_engine.py:880:26: DTZ003 `datetime.datetime.utcnow()` used
    |
878 |         # In a real implementation, this would capture actual configuration
879 |         return {
880 |             "timestamp": datetime.utcnow().isoformat(),
    |                          ^^^^^^^^^^^^^^^^^ DTZ003
881 |             "configuration_version": "1.0.0",
882 |             "environment_variables": dict(os.environ) if hasattr(self, "os") else {},
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/auto_remediation_engine.py:911:26: DTZ003 `datetime.datetime.utcnow()` used
    |
909 |             if hasattr(psutil, "net_io_counters")
910 |             else {},
911 |             "timestamp": datetime.utcnow().isoformat(),
    |                          ^^^^^^^^^^^^^^^^^ DTZ003
912 |         }
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/auto_remediation_engine.py:917:30: DTZ003 `datetime.datetime.utcnow()` used
    |
915 |         """Capture current circuit breaker states."""
916 |         # In a real implementation, this would capture actual circuit breaker states
917 |         return {"timestamp": datetime.utcnow().isoformat(), "breakers": {}}
    |                              ^^^^^^^^^^^^^^^^^ DTZ003
918 |
919 |     def _get_database_connections(self) -> int:
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/auto_remediation_engine.py:1178:17: DTZ003 `datetime.datetime.utcnow()` used
     |
1176 |             r
1177 |             for r in self.remediation_history
1178 |             if (datetime.utcnow() - datetime.utcnow()).total_seconds()
     |                 ^^^^^^^^^^^^^^^^^ DTZ003
1179 |             < 3600  # Last hour
1180 |         ]
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/auto_remediation_engine.py:1178:37: DTZ003 `datetime.datetime.utcnow()` used
     |
1176 |             r
1177 |             for r in self.remediation_history
1178 |             if (datetime.utcnow() - datetime.utcnow()).total_seconds()
     |                                     ^^^^^^^^^^^^^^^^^ DTZ003
1179 |             < 3600  # Last hour
1180 |         ]
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:707:27: DTZ003 `datetime.datetime.utcnow()` used
    |
706 |             return SystemMetrics(
707 |                 timestamp=datetime.utcnow(),
    |                           ^^^^^^^^^^^^^^^^^ DTZ003
708 |                 cpu_percent=cpu_percent,
709 |                 memory_percent=memory.percent,
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:730:27: DTZ003 `datetime.datetime.utcnow()` used
    |
728 |             # Return minimal metrics on failure
729 |             return SystemMetrics(
730 |                 timestamp=datetime.utcnow(),
    |                           ^^^^^^^^^^^^^^^^^ DTZ003
731 |                 cpu_percent=0.0,
732 |                 memory_percent=0.0,
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:782:34: DTZ003 `datetime.datetime.utcnow()` used
    |
780 |             self.remediation_history.append(
781 |                 {
782 |                     "timestamp": datetime.utcnow(),
    |                                  ^^^^^^^^^^^^^^^^^ DTZ003
783 |                     "type": "current_issues",
784 |                     "issues": issues_detected,
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:830:30: DTZ003 `datetime.datetime.utcnow()` used
    |
828 |         self.remediation_history.append(
829 |             {
830 |                 "timestamp": datetime.utcnow(),
    |                              ^^^^^^^^^^^^^^^^^ DTZ003
831 |                 "type": "prediction",
832 |                 "prediction": prediction,
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:1094:25: DTZ003 `datetime.datetime.utcnow()` used
     |
1092 |                     p
1093 |                     for p in self.prediction_history
1094 |                     if (datetime.utcnow() - datetime.utcnow()).total_seconds() < 3600
     |                         ^^^^^^^^^^^^^^^^^ DTZ003
1095 |                 ]
1096 |             ),
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:1094:45: DTZ003 `datetime.datetime.utcnow()` used
     |
1092 |                     p
1093 |                     for p in self.prediction_history
1094 |                     if (datetime.utcnow() - datetime.utcnow()).total_seconds() < 3600
     |                                             ^^^^^^^^^^^^^^^^^ DTZ003
1095 |                 ]
1096 |             ),
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:1103:26: DTZ003 `datetime.datetime.utcnow()` used
     |
1101 |                     if p.risk_level
1102 |                     in [FailureRiskLevel.HIGH, FailureRiskLevel.CRITICAL]
1103 |                     and (datetime.utcnow() - datetime.utcnow()).total_seconds() < 3600
     |                          ^^^^^^^^^^^^^^^^^ DTZ003
1104 |                 ]
1105 |             ),
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/autonomous_health_monitor.py:1103:46: DTZ003 `datetime.datetime.utcnow()` used
     |
1101 |                     if p.risk_level
1102 |                     in [FailureRiskLevel.HIGH, FailureRiskLevel.CRITICAL]
1103 |                     and (datetime.utcnow() - datetime.utcnow()).total_seconds() < 3600
     |                                              ^^^^^^^^^^^^^^^^^ DTZ003
1104 |                 ]
1105 |             ),
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/intelligent_chaos_orchestrator.py:148:24: DTZ003 `datetime.datetime.utcnow()` used
    |
146 |         """Identify system weaknesses based on current metrics and patterns."""
147 |         weaknesses = []
148 |         current_time = datetime.utcnow()
    |                        ^^^^^^^^^^^^^^^^^ DTZ003
149 |
150 |         # Analyze different types of weaknesses
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/intelligent_chaos_orchestrator.py:790:21: DTZ003 `datetime.datetime.utcnow()` used
    |
788 |                 learning
789 |                 for learning in self.learning_database[learning_key]
790 |                 if (datetime.utcnow() - learning.learning_timestamp).days < 7
    |                     ^^^^^^^^^^^^^^^^^ DTZ003
791 |             ]
792 |             if recent_learnings:
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/intelligent_chaos_orchestrator.py:1152:24: DTZ003 `datetime.datetime.utcnow()` used
     |
1150 |     async def assess_system_resilience(self) -> ResilienceAssessment:
1151 |         """Assess current system resilience and identify weaknesses."""
1152 |         current_time = datetime.utcnow()
     |                        ^^^^^^^^^^^^^^^^^ DTZ003
1153 |
1154 |         # Collect current system metrics
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/intelligent_chaos_orchestrator.py:1391:40: DTZ003 `datetime.datetime.utcnow()` used
     |
1389 |                     ],
1390 |                     confidence_score=0.0,
1391 |                     learning_timestamp=datetime.utcnow(),
     |                                        ^^^^^^^^^^^^^^^^^ DTZ003
1392 |                 ),
1393 |                 resilience_impact=0.0,
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/intelligent_chaos_orchestrator.py:1725:32: DTZ003 `datetime.datetime.utcnow()` used
     |
1723 |                 + recovery_analysis.get("resilience_score", 0) / 2,
1724 |             ),
1725 |             learning_timestamp=datetime.utcnow(),
     |                                ^^^^^^^^^^^^^^^^^ DTZ003
1726 |         )
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/intelligent_chaos_orchestrator.py:1843:42: DTZ003 `datetime.datetime.utcnow()` used
     |
1841 |                                 "total_recovery_time", 0
1842 |                             ),
1843 |                             "timestamp": datetime.utcnow(),
     |                                          ^^^^^^^^^^^^^^^^^ DTZ003
1844 |                         }
1845 |                     )
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:730:21: DTZ003 `datetime.datetime.utcnow()` used
    |
728 |     async def update_time_series_data(self, metrics: SystemMetrics):
729 |         """Update time series data with current metrics."""
730 |         timestamp = datetime.utcnow()
    |                     ^^^^^^^^^^^^^^^^^ DTZ003
731 |
732 |         # Add system-level metrics
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:761:21: DTZ003 `datetime.datetime.utcnow()` used
    |
759 |     ) -> list[AnomalyDetection]:
760 |         """Detect anomalies in current metrics."""
761 |         timestamp = datetime.utcnow()
    |                     ^^^^^^^^^^^^^^^^^ DTZ003
762 |         anomalies = []
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:835:24: DTZ003 `datetime.datetime.utcnow()` used
    |
833 |         anomalies."""
834 |         recommendations = []
835 |         current_time = datetime.utcnow()
    |                        ^^^^^^^^^^^^^^^^^ DTZ003
836 |
837 |         # Generate recommendations based on health assessments
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:938:17: DTZ003 `datetime.datetime.utcnow()` used
    |
936 |             for rec in self.pending_recommendations
937 |             if rec.urgency in [MaintenanceUrgency.CRITICAL, MaintenanceUrgency.HIGH]
938 |             and datetime.utcnow() >= rec.optimal_execution_window[0]
    |                 ^^^^^^^^^^^^^^^^^ DTZ003
939 |         ]
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:964:24: DTZ003 `datetime.datetime.utcnow()` used
    |
962 |             recommendation=recommendation,
963 |             status="starting",
964 |             start_time=datetime.utcnow(),
    |                        ^^^^^^^^^^^^^^^^^ DTZ003
965 |         )
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:993:34: DTZ003 `datetime.datetime.utcnow()` used
    |
991 |             execution.success = success
992 |             execution.status = "completed" if success else "failed"
993 |             execution.end_time = datetime.utcnow()
    |                                  ^^^^^^^^^^^^^^^^^ DTZ003
994 |
995 |             # Capture metrics after maintenance
    |
    = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:1015:34: DTZ003 `datetime.datetime.utcnow()` used
     |
1013 |             execution.status = "failed"
1014 |             execution.success = False
1015 |             execution.end_time = datetime.utcnow()
     |                                  ^^^^^^^^^^^^^^^^^ DTZ003
1016 |             execution.notes = f"Execution failed: {e!s}"
1017 |             return execution
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/automation/self_healing/predictive_maintenance.py:1058:28: DTZ003 `datetime.datetime.utcnow()` used
     |
1056 |             affected_components=[recommendation.component],
1057 |             metrics_snapshot={},
1058 |             detection_time=datetime.utcnow(),
     |                            ^^^^^^^^^^^^^^^^^ DTZ003
1059 |             contributing_factors=["Predictive maintenance detected anomaly"],
1060 |             business_impact_score=0.5,
     |
     = help: Use `datetime.datetime.now(tz=...)` instead

src/cli/commands/setup.py:240:9: F811 Redefinition of unused `customize_template` from line 147
    |
238 |         return self._customize_performance(template_data)
239 |
240 |     def customize_template(self, template_data: dict[str, Any]) -> dict[str, Any]:
    |         ^^^^^^^^^^^^^^^^^^ F811
241 |         """Customize template settings (public method for testing)."""
242 |         return self._customize_template(template_data)
    |
    = help: Remove definition: `customize_template`

src/config/__init__.py:308:7: F811 Redefinition of unused `ConfigDriftDetector` from line 20
    |
308 | class ConfigDriftDetector:
    |       ^^^^^^^^^^^^^^^^^^^ F811
309 |     """Mock config drift detector for backward compatibility."""
    |
    = help: Remove definition: `ConfigDriftDetector`

src/config/__init__.py:312:7: F811 Redefinition of unused `ConfigSnapshot` from line 21
    |
312 | class ConfigSnapshot:
    |       ^^^^^^^^^^^^^^ F811
313 |     """Mock config snapshot for backward compatibility."""
    |
    = help: Remove definition: `ConfigSnapshot`

src/config/__init__.py:316:7: F811 Redefinition of unused `DriftEvent` from line 22
    |
316 | class DriftEvent:
    |       ^^^^^^^^^^ F811
317 |     """Mock drift event for backward compatibility."""
    |
    = help: Remove definition: `DriftEvent`

src/config/__init__.py:320:7: F811 Redefinition of unused `DriftSeverity` from line 23
    |
320 | class DriftSeverity:
    |       ^^^^^^^^^^^^^ F811
321 |     """Mock drift severity for backward compatibility."""
    |
    = help: Remove definition: `DriftSeverity`

src/config/__init__.py:329:7: F811 Redefinition of unused `DriftType` from line 24
    |
329 | class DriftType:
    |       ^^^^^^^^^ F811
330 |     """Mock drift type for backward compatibility."""
    |
    = help: Remove definition: `DriftType`

src/infrastructure/clients/redis_client.py:11:11: N801 Class name `redis` should use CapWords convention
   |
 9 | except ImportError:
10 |     # Create a placeholder if redis is not available
11 |     class redis:
   |           ^^^^^ N801
12 |         class Redis:
13 |             pass
   |

src/infrastructure/container.py:113:31: ASYNC109 Async function definition with a `timeout` parameter
    |
113 | async def _create_http_client(timeout: float = 30.0) -> AsyncGenerator[Any]:
    |                               ^^^^^^^^^^^^^^^^^^^^^ ASYNC109
114 |     """Create HTTP client with proper lifecycle management.
    |
    = help: Use `asyncio.timeout` instead

src/mcp_tools/tools/cost_estimation.py:198:13: F841 Local variable `final_results` is assigned to but never used
    |
196 |             )
197 |
198 |             final_results = {
    |             ^^^^^^^^^^^^^ F841
199 |                 "success": True,
200 |                 "budget_limit": budget_limit,
    |
    = help: Remove assignment to unused variable `final_results`

src/mcp_tools/tools/document_management.py:225:13: TRY300 Consider moving this statement to an `else` block
    |
223 |                   )
224 |
225 | /             return {
226 | |                 "success": True,
227 | |                 "lifecycle_results": results,
228 | |                 "autonomous_policies_applied": True,
229 | |             }
    | |_____________^ TRY300
230 |
231 |           except Exception as e:
    |

src/mcp_tools/tools/document_management.py:331:13: TRY300 Consider moving this statement to an `else` block
    |
329 |                 )
330 |
331 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
332 |
333 |         except Exception as e:
    |

src/mcp_tools/tools/document_management.py:416:13: TRY300 Consider moving this statement to an `else` block
    |
414 |                   )
415 |
416 | /             return {
417 | |                 "success": True,
418 | |                 "analytics": analytics,
419 | |             }
    | |_____________^ TRY300
420 |
421 |           except Exception as e:
    |

src/mcp_tools/tools/filtering.py:144:13: TRY300 Consider moving this statement to an `else` block
    |
142 |                 )
143 |
144 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
145 |
146 |         except Exception as e:
    |

src/mcp_tools/tools/filtering.py:256:13: TRY300 Consider moving this statement to an `else` block
    |
254 |                 )
255 |
256 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
257 |
258 |         except Exception as e:
    |

src/mcp_tools/tools/filtering.py:371:13: TRY300 Consider moving this statement to an `else` block
    |
369 |                 )
370 |
371 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
372 |
373 |         except Exception as e:
    |

src/mcp_tools/tools/filtering_tools.py:186:9: TRY300 Consider moving this statement to an `else` block
    |
184 |         )
185 |
186 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
187 |
188 |     except Exception as e:
    |

src/mcp_tools/tools/filtering_tools.py:244:9: TRY300 Consider moving this statement to an `else` block
    |
242 |         )
243 |
244 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
245 |
246 |     except Exception as e:
    |

src/mcp_tools/tools/filtering_tools.py:303:9: TRY300 Consider moving this statement to an `else` block
    |
301 |         )
302 |
303 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
304 |
305 |     except Exception as e:
    |

src/mcp_tools/tools/filtering_tools.py:363:9: TRY300 Consider moving this statement to an `else` block
    |
361 |         )
362 |
363 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
364 |
365 |     except Exception as e:
    |

src/mcp_tools/tools/filtering_tools.py:432:9: TRY300 Consider moving this statement to an `else` block
    |
430 |         )
431 |
432 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
433 |
434 |     except Exception as e:
    |

src/mcp_tools/tools/helpers/pipeline_factory.py:66:13: TRY300 Consider moving this statement to an `else` block
   |
64 |             await pipeline.initialize()
65 |
66 |             return pipeline
   |             ^^^^^^^^^^^^^^^ TRY300
67 |
68 |         except (AttributeError, ImportError, OSError):
   |

src/mcp_tools/tools/helpers/tool_registrars.py:122:13: TRY300 Consider moving this statement to an `else` block
    |
120 |             )
121 |
122 |             return mcp_response
    |             ^^^^^^^^^^^^^^^^^^^ TRY300
123 |
124 |         except Exception as e:
    |

src/mcp_tools/tools/helpers/tool_registrars.py:214:13: TRY300 Consider moving this statement to an `else` block
    |
212 |             )
213 |
214 |             return response
    |             ^^^^^^^^^^^^^^^ TRY300
215 |
216 |         except Exception as e:
    |

src/mcp_tools/tools/helpers/tool_registrars_additional.py:52:13: TRY300 Consider moving this statement to an `else` block
   |
50 |             )
51 |
52 |             return health_status
   |             ^^^^^^^^^^^^^^^^^^^^ TRY300
53 |
54 |         except Exception as e:
   |

src/mcp_tools/tools/helpers/tool_registrars_additional.py:86:13: TRY300 Consider moving this statement to an `else` block
   |
84 |             await ctx.info(f"Pipeline metrics collection {request_id} completed")
85 |
86 |             return metrics
   |             ^^^^^^^^^^^^^^ TRY300
87 |
88 |         except Exception as e:
   |

src/mcp_tools/tools/helpers/tool_registrars_additional.py:116:13: TRY300 Consider moving this statement to an `else` block
    |
114 |             await ctx.info(f"Pipeline warm-up {request_id} completed successfully")
115 |
116 |             return {"status": "success", "message": "Pipeline warmed up successfully"}
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
117 |
118 |         except (ConnectionError, TimeoutError, ValueError):
    |

src/mcp_tools/tools/hybrid_search.py:155:13: TRY300 Consider moving this statement to an `else` block
    |
153 |                 )
154 |
155 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
156 |
157 |         except Exception as e:
    |

src/mcp_tools/tools/hybrid_search.py:244:13: TRY300 Consider moving this statement to an `else` block
    |
242 |                 )
243 |
244 |             return search_result
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
245 |
246 |         except Exception as e:
    |

src/mcp_tools/tools/hybrid_search.py:359:13: TRY300 Consider moving this statement to an `else` block
    |
357 |                 )
358 |
359 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
360 |
361 |         except Exception as e:
    |

src/mcp_tools/tools/hybrid_search.py:456:9: TRY300 Consider moving this statement to an `else` block
    |
454 |                 )
455 |
456 |         return search_result or {"points": []}
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
457 |
458 |     except (OSError, FileNotFoundError, ValueError) as e:
    |

src/mcp_tools/tools/hybrid_search.py:555:9: B007 Loop control variable `doc_id` not used within loop body
    |
554 |     # Calculate DBSF scores
555 |     for doc_id, doc_data in combined.items():
    |         ^^^^^^ B007
556 |         dbsf_score = (
557 |             vector_weight * doc_data["vector_score"]
    |
    = help: Rename unused `doc_id` to `_doc_id`

src/mcp_tools/tools/hyde_search.py:193:13: TRY300 Consider moving this statement to an `else` block
    |
191 |                 )
192 |
193 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
194 |
195 |         except Exception as e:
    |

src/mcp_tools/tools/hyde_search.py:328:13: TRY300 Consider moving this statement to an `else` block
    |
326 |                 )
327 |
328 |             return best_result
    |             ^^^^^^^^^^^^^^^^^^ TRY300
329 |
330 |         except Exception as e:
    |

src/mcp_tools/tools/hyde_search.py:420:13: TRY300 Consider moving this statement to an `else` block
    |
418 |                 )
419 |
420 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
421 |
422 |         except Exception as e:
    |

src/mcp_tools/tools/hyde_search.py:659:9: B007 Loop control variable `doc_id` not used within loop body
    |
657 |     # Calculate fused scores
658 |     fused_results = []
659 |     for doc_id, doc_data in document_scores.items():
    |         ^^^^^^ B007
660 |         # Use max score fusion (can be enhanced with other strategies)
661 |         fused_score = max(doc_data["scores"])
    |
    = help: Rename unused `doc_id` to `_doc_id`

src/mcp_tools/tools/lightweight_scrape.py:58:9: TRY300 Consider moving this statement to an `else` block
   |
56 |                 "Consider using standard search or crawl tools for complex pages."
57 |             )
58 |         return can_handle
   |         ^^^^^^^^^^^^^^^^^ TRY300
59 |     except (AttributeError, ConnectionError, RuntimeError, TimeoutError):
60 |         return True  # Default to allowing the attempt
   |

src/mcp_tools/tools/lightweight_scrape.py:188:27: SLF001 Private member accessed: `_unified_browser_manager`
    |
187 |         # Analyze URL suitability for lightweight tier
188 |         unified_manager = crawl_manager._unified_browser_manager
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
189 |         can_handle = await _analyze_url_suitability(unified_manager, url, ctx)
    |

src/mcp_tools/tools/multi_stage_search.py:199:13: TRY300 Consider moving this statement to an `else` block
    |
197 |                 )
198 |
199 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
200 |
201 |         except Exception as e:
    |

src/mcp_tools/tools/multi_stage_search.py:285:13: TRY300 Consider moving this statement to an `else` block
    |
283 |                 )
284 |
285 |             return search_result
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
286 |
287 |         except Exception as e:
    |

src/mcp_tools/tools/multi_stage_search.py:429:13: TRY300 Consider moving this statement to an `else` block
    |
427 |                 )
428 |
429 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
430 |
431 |         except Exception as e:
    |

src/mcp_tools/tools/projects.py:49:41: A002 Function argument `format` is shadowing a Python builtin
   |
47 |         raise ValueError(msg)
48 |
49 |     async def _raise_unsupported_format(format: str, ctx: Context = None) -> None:
   |                                         ^^^^^^ A002
50 |         """Raise ValueError for unsupported format."""
51 |         if ctx:
   |

src/mcp_tools/tools/projects.py:418:26: A002 Function argument `format` is shadowing a Python builtin
    |
416 |     @mcp.tool()
417 |     async def export_project(
418 |         project_id: str, format: str = "json", ctx: Context = None
    |                          ^^^^^^ A002
419 |     ) -> dict:
420 |         """Export project data in the specified format.
    |

src/mcp_tools/tools/query_processing_tools.py:169:9: TRY300 Consider moving this statement to an `else` block
    |
167 |         )
168 |
169 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
170 |
171 |     except Exception as e:
    |

src/mcp_tools/tools/query_processing_tools.py:222:9: TRY300 Consider moving this statement to an `else` block
    |
220 |         )
221 |
222 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
223 |
224 |     except Exception as e:
    |

src/mcp_tools/tools/query_processing_tools.py:275:9: TRY300 Consider moving this statement to an `else` block
    |
273 |         )
274 |
275 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
276 |
277 |     except Exception as e:
    |

src/mcp_tools/tools/query_processing_tools.py:331:9: TRY300 Consider moving this statement to an `else` block
    |
329 |         )
330 |
331 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
332 |
333 |     except Exception as e:
    |

src/mcp_tools/tools/query_processing_tools.py:389:9: TRY300 Consider moving this statement to an `else` block
    |
387 |         )
388 |
389 |         return converted_results
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
390 |
391 |     except Exception as e:
    |

src/mcp_tools/tools/rag.py:293:13: TRY300 Consider moving this statement to an `else` block
    |
291 |               rag_generator.clear_cache()
292 |
293 | /             return {
294 | |                 "status": "success",
295 | |                 "message": "RAG answer cache cleared successfully",
296 | |             }
    | |_____________^ TRY300
297 |
298 |           except Exception as e:
    |

src/mcp_tools/tools/search.py:69:31: SLF001 Private member accessed: `_client`
   |
68 |             # Get the document by ID
69 |             retrieved = await qdrant_service._client.retrieve(
   |                               ^^^^^^^^^^^^^^^^^^^^^^ SLF001
70 |                 collection_name=collection,
71 |                 ids=[query_id],
   |

src/mcp_tools/tools/search.py:131:13: TRY300 Consider moving this statement to an `else` block
    |
129 |                     f"Found {len(final_results)} similar documents for {query_id}"
130 |                 )
131 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
132 |
133 |         except (TimeoutError, OSError, PermissionError):
    |

src/mcp_tools/tools/search_tools.py:194:13: TRY300 Consider moving this statement to an `else` block
    |
192 |                 f"Multi-stage search {request_id} completed: {len(search_results)} results"
193 |             )
194 |             return search_results
    |             ^^^^^^^^^^^^^^^^^^^^^ TRY300
195 |
196 |         except (ConnectionError, OSError, PermissionError):
    |

src/mcp_tools/tools/search_tools.py:327:13: TRY300 Consider moving this statement to an `else` block
    |
325 |                 f"HyDE search {request_id} completed: {len(search_results)} results found"
326 |             )
327 |             return search_results
    |             ^^^^^^^^^^^^^^^^^^^^^ TRY300
328 |
329 |         except Exception as e:
    |

src/mcp_tools/tools/search_tools.py:577:13: TRY300 Consider moving this statement to an `else` block
    |
575 |                 f"Filtered search {request_id} completed: {len(search_results)} results"
576 |             )
577 |             return search_results
    |             ^^^^^^^^^^^^^^^^^^^^^ TRY300
578 |
579 |         except (ConnectionError, OSError, PermissionError):
    |

src/mcp_tools/tools/search_with_reranking.py:141:13: TRY300 Consider moving this statement to an `else` block
    |
139 |                 )
140 |
141 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
142 |
143 |         except Exception as e:
    |

src/mcp_tools/tools/search_with_reranking.py:264:13: TRY300 Consider moving this statement to an `else` block
    |
262 |                 )
263 |
264 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
265 |
266 |         except Exception as e:
    |

src/mcp_tools/tools/search_with_reranking.py:397:13: TRY300 Consider moving this statement to an `else` block
    |
395 |                 )
396 |
397 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
398 |
399 |         except Exception as e:
    |

src/mcp_tools/tools/search_with_reranking.py:507:9: TRY300 Consider moving this statement to an `else` block
    |
505 |               await ctx.debug(f"Initial search returned {len(results)} results")
506 |
507 | /         return {
508 | |             "success": True,
509 | |             "results": results,
510 | |             "query_embedding": query_embedding,
511 | |         }
    | |_________^ TRY300
512 |
513 |       except Exception as e:
    |

src/mcp_tools/tools/search_with_reranking.py:1010:9: PLC0206 Extracting value from dictionary without calling `.items()`
     |
1008 |       weight_changes = {}
1009 |       if original_weights:
1010 | /         for factor in optimal_weights:
1011 | |             original = original_weights.get(factor, 0.0)
1012 | |             optimal = optimal_weights[factor]
1013 | |             weight_changes[factor] = optimal - original
     | |_______________________________________________________^ PLC0206
1014 |
1015 |       # Calculate ranking confidence based on score distribution
     |

src/mcp_tools/tools/search_with_reranking.py:1110:13: PLW2901 `for` loop variable `result` overwritten by assignment target
     |
1108 |         # Start with existing quality assessment or create basic one
1109 |         if "quality_assessment" not in result:
1110 |             result = (await _apply_quality_assessment([result], query, ctx))[0]
     |             ^^^^^^ PLW2901
1111 |
1112 |         # Add contextual relevance if context provided
     |

src/mcp_tools/tools/system_health.py:137:13: TRY300 Consider moving this statement to an `else` block
    |
135 |                 )
136 |
137 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
138 |
139 |         except Exception as e:
    |

src/mcp_tools/tools/system_health.py:250:13: TRY300 Consider moving this statement to an `else` block
    |
248 |                 )
249 |
250 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
251 |
252 |         except Exception as e:
    |

src/mcp_tools/tools/system_health.py:359:13: TRY300 Consider moving this statement to an `else` block
    |
357 |                 )
358 |
359 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
360 |
361 |         except Exception as e:
    |

src/mcp_tools/tools/web_search.py:168:13: TRY300 Consider moving this statement to an `else` block
    |
166 |                 )
167 |
168 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
169 |
170 |         except Exception as e:
    |

src/mcp_tools/tools/web_search.py:322:13: TRY300 Consider moving this statement to an `else` block
    |
320 |                 )
321 |
322 |             return best_result
    |             ^^^^^^^^^^^^^^^^^^ TRY300
323 |
324 |         except Exception as e:
    |

src/mcp_tools/tools/web_search.py:429:13: TRY300 Consider moving this statement to an `else` block
    |
427 |                 )
428 |
429 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
430 |
431 |         except Exception as e:
    |

src/models/__init__.py:113:5: F811 Redefinition of unused `SearchResponse` from line 52
    |
111 |     SearchAccuracy,
112 |     SearchConfigurationError,
113 |     SearchResponse,
    |     ^^^^^^^^^^^^^^ F811
114 |     # Stage models
115 |     SearchStage,
    |
    = help: Remove definition: `SearchResponse`

src/security/ml_security.py:148:13: TRY300 Consider moving this statement to an `else` block
    |
146 |             )
147 |             self.checks_performed.append(result)
148 |             return result
    |             ^^^^^^^^^^^^^ TRY300
149 |
150 |         except Exception as e:
    |

src/security/ml_security.py:237:13: TRY300 Consider moving this statement to an `else` block
    |
235 |             )
236 |             self.checks_performed.append(result)
237 |             return result
    |             ^^^^^^^^^^^^^ TRY300
238 |
239 |         except subprocess.TimeoutExpired:
    |

src/security/ml_security.py:348:13: TRY300 Consider moving this statement to an `else` block
    |
346 |             )
347 |             self.checks_performed.append(result)
348 |             return result
    |             ^^^^^^^^^^^^^ TRY300
349 |
350 |         except (AttributeError, RuntimeError, ValueError):
    |

src/services/agents/agentic_orchestrator.py:476:1: W293 [*] Blank line contains whitespace
    |
474 | class _OrchestratorSingleton:
475 |     """Singleton holder for orchestrator instance."""
476 |     
    | ^^^^ W293
477 |     _instance: AgenticOrchestrator | None = None
    |
    = help: Remove whitespace from blank line

src/services/agents/agentic_orchestrator.py:478:1: W293 [*] Blank line contains whitespace
    |
477 |     _instance: AgenticOrchestrator | None = None
478 |     
    | ^^^^ W293
479 |     @classmethod
480 |     def get_instance(cls) -> AgenticOrchestrator:
    |
    = help: Remove whitespace from blank line

src/services/agents/coordination.py:482:13: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
481 |             # Start task execution
482 |             asyncio.create_task(self._execute_task(task, assignment))
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
483 |
484 |             # Respect parallel execution limit
    |

src/services/agents/coordination.py:665:65: SLF001 Private member accessed: `_initialized`
    |
663 |             try:
664 |                 # Simple health check - could be enhanced with agent-specific checks
665 |                 is_healthy = hasattr(agent, "_initialized") and agent._initialized
    |                                                                 ^^^^^^^^^^^^^^^^^^ SLF001
666 |                 self.agent_health_status[agent_name] = is_healthy
    |

src/services/agents/dynamic_tool_discovery.py:702:1: W293 [*] Blank line contains whitespace
    |
700 | class _DiscoveryEngineSingleton:
701 |     """Singleton holder for discovery engine instance."""
702 |     
    | ^^^^ W293
703 |     _instance: DynamicToolDiscovery | None = None
    |
    = help: Remove whitespace from blank line

src/services/agents/dynamic_tool_discovery.py:704:1: W293 [*] Blank line contains whitespace
    |
703 |     _instance: DynamicToolDiscovery | None = None
704 |     
    | ^^^^ W293
705 |     @classmethod
706 |     def get_instance(cls) -> DynamicToolDiscovery:
    |
    = help: Remove whitespace from blank line

src/services/agents/dynamic_tool_discovery.py:732:12: SLF001 Private member accessed: `_initialized`
    |
730 |     """
731 |     engine = get_discovery_engine()
732 |     if not engine._initialized:
    |            ^^^^^^^^^^^^^^^^^^^ SLF001
733 |         await engine.initialize_discovery(deps)
734 |     return await engine.discover_tools_for_task(task, requirements)
    |

src/services/agents/integration.py:313:13: TRY300 Consider moving this statement to an `else` block
    |
311 |             )
312 |
313 |             return response
    |             ^^^^^^^^^^^^^^^ TRY300
314 |
315 |         except Exception as e:
    |

src/services/agents/integration.py:497:13: TRY300 Consider moving this statement to an `else` block
    |
495 |                         vector_results["optimizations_applied"].append(opt_result)
496 |
497 |             return vector_results
    |             ^^^^^^^^^^^^^^^^^^^^^ TRY300
498 |
499 |         except Exception as e:
    |

src/services/agents/integration.py:565:13: TRY300 Consider moving this statement to an `else` block
    |
563 |                 tasks.append(task)
564 |
565 |             return tasks
    |             ^^^^^^^^^^^^ TRY300
566 |
567 |         except Exception:
    |

src/services/agents/integration.py:603:13: TRY300 Consider moving this statement to an `else` block
    |
601 |               )
602 |
603 | /             return {
604 | |                 "coordination_results": coordination_result,
605 | |                 "tool_results": tool_result,
606 | |                 "integration_success": True,
607 | |             }
    | |_____________^ TRY300
608 |
609 |           except Exception as e:
    |

src/services/agents/integration.py:651:13: TRY300 Consider moving this statement to an `else` block
    |
649 |                 ]["results"]
650 |
651 |             return integrated
    |             ^^^^^^^^^^^^^^^^^ TRY300
652 |
653 |         except Exception as e:
    |

src/services/agents/integration.py:773:13: TRY300 Consider moving this statement to an `else` block
    |
771 |                 recommendations.append("System performing optimally")
772 |
773 |             return recommendations
    |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
774 |
775 |         except Exception:
    |

src/services/agents/integration.py:904:13: TRY300 Consider moving this statement to an `else` block
    |
902 |                 optimizations.append("System operating efficiently")
903 |
904 |             return optimizations
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
905 |
906 |         except Exception:
    |

src/services/agents/tool_orchestration.py:305:13: TRY300 Consider moving this statement to an `else` block
    |
303 |             logger.info(f"Composed tool chain {plan_id} with {len(nodes)} tools")
304 |
305 |             return plan
    |             ^^^^^^^^^^^ TRY300
306 |
307 |         except Exception:
    |

src/services/agents/tool_orchestration.py:398:13: TRY300 Consider moving this statement to an `else` block
    |
396 |             )
397 |
398 |             return final_results
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
399 |
400 |         except Exception as e:
    |

src/services/agents/tool_orchestration.py:487:13: TRY300 Consider moving this statement to an `else` block
    |
485 |             await self._update_tool_metrics(tool_id, execution_result)
486 |
487 |             return execution_result
    |             ^^^^^^^^^^^^^^^^^^^^^^^ TRY300
488 |
489 |         except TimeoutError:
    |

src/services/agents/tool_orchestration.py:930:13: TRY300 Consider moving this statement to an `else` block
    |
928 |                 execution_state["failed_nodes"].add(node.node_id)
929 |
930 |             return result.result or {"error": result.error}
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
931 |
932 |         except Exception as e:
    |

src/services/analytics/search_dashboard.py:104:13: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
102 |         try:
103 |             # Initialize background pattern detection
104 |             asyncio.create_task(self._pattern_detection_loop())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
105 |
106 |             self._initialized = True
    |

src/services/analytics/search_dashboard.py:395:13: TRY300 Consider moving this statement to an `else` block
    |
393 |                     )
394 |
395 |             return recommendations
    |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
396 |
397 |         except (AttributeError, OSError, PermissionError):
    |

src/services/analytics/search_dashboard.py:585:13: TRY300 Consider moving this statement to an `else` block
    |
583 |                     )
584 |
585 |             return insights
    |             ^^^^^^^^^^^^^^^ TRY300
586 |
587 |         except (AttributeError, OSError, PermissionError):
    |

src/services/analytics/search_dashboard.py:652:13: TRY300 Consider moving this statement to an `else` block
    |
650 |                 }
651 |
652 |             return trends
    |             ^^^^^^^^^^^^^ TRY300
653 |
654 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/analytics/search_dashboard.py:676:13: TRY300 Consider moving this statement to an `else` block
    |
674 |                 utilization[feature] = count / total_queries
675 |
676 |             return utilization
    |             ^^^^^^^^^^^^^^^^^^ TRY300
677 |
678 |         except (OSError, PermissionError):
    |

src/services/analytics/search_dashboard.py:722:13: TRY300 Consider moving this statement to an `else` block
    |
720 |                 timeline.append({"timestamp": hour_key, "query_count": count})
721 |
722 |             return timeline
    |             ^^^^^^^^^^^^^^^ TRY300
723 |
724 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/analytics/search_dashboard.py:840:13: TRY300 Consider moving this statement to an `else` block
    |
838 |                 )
839 |
840 |             return opportunities
    |             ^^^^^^^^^^^^^^^^^^^^ TRY300
841 |
842 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/analytics/vector_visualization.py:846:13: TRY300 Consider moving this statement to an `else` block
    |
844 |                 )
845 |
846 |             return insights
    |             ^^^^^^^^^^^^^^^ TRY300
847 |
848 |         except (AttributeError, OSError, PermissionError):
    |

src/services/analytics/vector_visualization.py:1090:13: TRY300 Consider moving this statement to an `else` block
     |
1088 |                 )
1089 |
1090 |             return recommendations
     |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
1091 |
1092 |         except (AttributeError, OSError, PermissionError):
     |

src/services/analytics/vector_visualization.py:1151:13: TRY300 Consider moving this statement to an `else` block
     |
1149 |                 )
1150 |
1151 |             return recommendations
     |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
1152 |
1153 |         except (AttributeError, ConnectionError, OSError):
     |

src/services/auto_detection/connection_pools.py:378:60: SLF001 Private member accessed: `_created_connections`
    |
376 |                     # Add created connections count if available
377 |                     if hasattr(pool, "_created_connections"):
378 |                         pool_info["created_connections"] = pool._created_connections
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
379 |                     if hasattr(pool, "_available_connections"):
380 |                         pool_info["available_connections"] = len(
    |

src/services/auto_detection/connection_pools.py:381:29: SLF001 Private member accessed: `_available_connections`
    |
379 |                     if hasattr(pool, "_available_connections"):
380 |                         pool_info["available_connections"] = len(
381 |                             pool._available_connections
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
382 |                         )
383 |                     if hasattr(pool, "_in_use_connections"):
    |

src/services/auto_detection/connection_pools.py:384:63: SLF001 Private member accessed: `_in_use_connections`
    |
382 |                         )
383 |                     if hasattr(pool, "_in_use_connections"):
384 |                         pool_info["in_use_connections"] = len(pool._in_use_connections)
    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
385 |
386 |                     metrics.library_stats = pool_info
    |

src/services/auto_detection/service_discovery.py:359:13: TRY300 Consider moving this statement to an `else` block
    |
357 |             writer.close()
358 |             await writer.wait_closed()
359 |             return True
    |             ^^^^^^^^^^^ TRY300
360 |         except (ConnectionError, OSError, PermissionError):
361 |             return False
    |

src/services/auto_detection/service_discovery.py:452:13: TRY300 Consider moving this statement to an `else` block
    |
450 |             writer.close()
451 |             await writer.wait_closed()
452 |             return True
    |             ^^^^^^^^^^^ TRY300
453 |         except (TimeoutError, OSError, PermissionError):
454 |             return False
    |

src/services/browser/automation_router.py:299:13: TRY300 Consider moving this statement to an `else` block
    |
297 |             result["provider"] = tool
298 |             result["automation_time_ms"] = elapsed * 1000
299 |             return result
    |             ^^^^^^^^^^^^^ TRY300
300 |
301 |         except (OSError, PermissionError):
    |

src/services/browser/automation_router.py:557:17: TRY300 Consider moving this statement to an `else` block
    |
555 |                 result["fallback_from"] = failed_tool
556 |                 result["automation_time_ms"] = elapsed * 1000
557 |                 return result
    |                 ^^^^^^^^^^^^^ TRY300
558 |
559 |             except (OSError, PermissionError):
    |

src/services/browser/browser_router.py:212:13: TRY300 Consider moving this statement to an `else` block
    |
210 |             result["provider"] = selected_tier
211 |             result["automation_time_ms"] = elapsed * 1000
212 |             return result
    |             ^^^^^^^^^^^^^ TRY300
213 |
214 |         except Exception as e:
    |

src/services/browser/browser_router.py:446:17: TRY300 Consider moving this statement to an `else` block
    |
444 |                 result["failed_tiers"] = failed_tiers
445 |                 result["automation_time_ms"] = elapsed * 1000
446 |                 return result
    |                 ^^^^^^^^^^^^^ TRY300
447 |
448 |             except Exception as e:
    |

src/services/browser/lightweight_scraper.py:312:13: TRY300 Consider moving this statement to an `else` block
    |
310 |             analysis["can_handle"] = analysis["confidence"] > 0.5
311 |
312 |             return analysis
    |             ^^^^^^^^^^^^^^^ TRY300
313 |
314 |         except (ValueError, TypeError, UnicodeDecodeError) as e:
    |

src/services/browser/unified_manager.py:284:29: SLF001 Private member accessed: `_generate_cache_key`
    |
282 |             try:
283 |                 # Generate cache key
284 |                 cache_key = self._browser_cache._generate_cache_key(
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
285 |                     request.url, None if request.tier == "auto" else request.tier
286 |                 )
    |

src/services/browser/unified_manager.py:417:33: SLF001 Private member accessed: `_generate_cache_key`
    |
415 |                     )
416 |
417 |                     cache_key = self._browser_cache._generate_cache_key(
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
418 |                         request.url, None if request.tier == "auto" else request.tier
419 |                     )
    |

src/services/circuit_breaker/modern.py:193:13: TRY300 Consider moving this statement to an `else` block
    |
191 |                 "Circuit breaker for %s does not support reset", service_name
192 |             )
193 |             return False
    |             ^^^^^^^^^^^^ TRY300
194 |         except Exception:
195 |             logger.exception("Failed to reset circuit breaker for {service_name}")
    |

src/services/config_drift_service.py:368:13: TRY300 Consider moving this statement to an `else` block
    |
366 |             )
367 |
368 |             return True
    |             ^^^^^^^^^^^ TRY300
369 |
370 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/content_intelligence/classifiers.py:651:13: TRY300 Consider moving this statement to an `else` block
    |
649 |                 scores[content_type] = max(0.0, similarity)  # Ensure non-negative
650 |
651 |             return scores
    |             ^^^^^^^^^^^^^ TRY300
652 |
653 |         except (OSError, PermissionError):
    |

src/services/content_intelligence/quality_assessor.py:300:13: TRY300 Consider moving this statement to an `else` block
    |
298 |                 relevance_score = min(relevance_score + 0.3, 1.0)
299 |
300 |             return relevance_score
    |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
301 |
302 |         except (ValueError, TypeError, UnicodeDecodeError) as e:
    |

src/services/content_intelligence/quality_assessor.py:693:13: TRY300 Consider moving this statement to an `else` block
    |
691 |                     max_similarity = max(max_similarity, jaccard_similarity)
692 |
693 |             return max_similarity
    |             ^^^^^^^^^^^^^^^^^^^^^ TRY300
694 |
695 |         except (ValueError, TypeError, UnicodeDecodeError) as e:
    |

src/services/crawling/crawl4ai_provider.py:350:21: SLF001 Private member accessed: `_value`
    |
348 |                 getattr(self, "semaphore", None)
349 |                 and hasattr(self.semaphore, "_value")
350 |                 and self.semaphore._value
    |                     ^^^^^^^^^^^^^^^^^^^^^ SLF001
351 |             )
352 |             or "unknown",
    |

src/services/crawling/crawl4ai_provider.py:499:9: ARG002 Unused method argument: `run_config`
    |
497 |         self,
498 |         url: str,
499 |         run_config: CrawlerRunConfig,
    |         ^^^^^^^^^^ ARG002
500 |         extraction_type: str,
501 |         _session: object | None,
    |

src/services/crawling/crawl4ai_provider.py:558:13: TRY300 Consider moving this statement to an `else` block
    |
556 |                 stats.update(runtime_stats)
557 |
558 |             return stats
    |             ^^^^^^^^^^^^ TRY300
559 |         except (asyncio.CancelledError, TimeoutError, RuntimeError) as e:
560 |             self.logger.warning("Could not get dispatcher stats")
    |

src/services/crawling/firecrawl_provider.py:215:13: TRY300 Consider moving this statement to an `else` block
    |
214 |               # Timeout
215 | /             return {
216 | |                 "success": False,
217 | |                 "error": "Crawl timed out",
218 | |                 "pages": [],
219 | |                 "total": 0,
220 | |                 "crawl_id": crawl_id,
221 | |             }
    | |_____________^ TRY300
222 |
223 |           except Exception as e:
    |

src/services/crawling/lightweight_scraper.py:109:17: TRY300 Consider moving this statement to an `else` block
    |
107 |             try:
108 |                 recommendation = await self._analyze_url(url)
109 |                 return recommendation == TierRecommendation.LIGHTWEIGHT_OK
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
110 |             except (ConnectionError, OSError, PermissionError):
111 |                 logger.debug("HEAD analysis failed for {url}")
    |

src/services/crawling/lightweight_scraper.py:167:13: TRY300 Consider moving this statement to an `else` block
    |
165 |                 return TierRecommendation.BROWSER_REQUIRED
166 |
167 |             return TierRecommendation.LIGHTWEIGHT_OK
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
168 |
169 |         except httpx.TimeoutException:
    |

src/services/crawling/lightweight_scraper.py:250:13: TRY300 Consider moving this statement to an `else` block
    |
248 |                 result["content"]["text"] = extracted["text"]
249 |
250 |             return result
    |             ^^^^^^^^^^^^^ TRY300
251 |
252 |         except httpx.HTTPStatusError as e:
    |

src/services/crawling/manager.py:128:13: TRY300 Consider moving this statement to an `else` block
    |
127 |               # Return response in standardized format
128 | /             return {
129 | |                 "success": result.success,
130 | |                 "content": result.content,
131 | |                 "url": result.url,
132 | |                 "title": result.title,
133 | |                 "metadata": result.metadata,
134 | |                 "tier_used": result.tier_used,
135 | |                 "automation_time_ms": result.execution_time_ms,
136 | |                 "quality_score": result.quality_score,
137 | |                 "error": result.error,
138 | |                 "fallback_attempted": result.fallback_attempted,
139 | |                 "failed_tiers": result.failed_tiers,
140 | |             }
    | |_____________^ TRY300
141 |
142 |           except (OSError, PermissionError):
    |

src/services/dependencies.py:1694:9: PLE1206 Not enough arguments for `logging` format string
     |
1692 |             return is_healthy
1693 |     except Exception as e:
1694 |         logger.exception("Health check failed for %s: %s", service_name)
     |         ^^^^^^^^^^^^^^^^ PLE1206
1695 |         health["last_check"] = time.time()
1696 |         health["last_error"] = str(e)
     |

src/services/deployment/ab_testing.py:470:13: TRY300 Consider moving this statement to an `else` block
    |
468 |             is_significant = has_sufficient_sample and abs(uplift) > 5.0  # 5% threshold
469 |
470 |             return uplift, is_significant
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
471 |
472 |         except Exception:
    |

src/services/deployment/ab_testing.py:515:13: PLE1206 Not enough arguments for `logging` format string
    |
514 |         except Exception:
515 |             logger.exception("Error checking test completion for %s: %s", test_id)
    |             ^^^^^^^^^^^^^^^^ PLE1206
516 |
517 |     async def _load_active_tests(self) -> None:
    |

src/services/deployment/blue_green.py:263:13: TRY300 Consider moving this statement to an `else` block
    |
261 |                 "Successfully switched from %s to %s", source_env.name, target_env.name
262 |             )
263 |             return True
    |             ^^^^^^^^^^^ TRY300
264 |
265 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/deployment/blue_green.py:292:13: TRY300 Consider moving this statement to an `else` block
    |
290 |                 return True
291 |             logger.error("Rollback failed")
292 |             return False
    |             ^^^^^^^^^^^^ TRY300
293 |
294 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/deployment/blue_green.py:441:17: TRY300 Consider moving this statement to an `else` block
    |
439 |                     attempt + 1,
440 |                 )
441 |                 return True
    |                 ^^^^^^^^^^^ TRY300
442 |
443 |             except (ValueError, TypeError, AttributeError) as e:
    |

src/services/deployment/canary.py:373:13: TRY300 Consider moving this statement to an `else` block
    |
371 |                 metrics.stage.value,
372 |             )
373 |             return True
    |             ^^^^^^^^^^^ TRY300
374 |
375 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/deployment/canary.py:412:13: TRY300 Consider moving this statement to an `else` block
    |
410 |                 "Rolled back canary deployment %s. Reason: %s", deployment_id, reason
411 |             )
412 |             return True
    |             ^^^^^^^^^^^ TRY300
413 |
414 |         except (TimeoutError, OSError, PermissionError):
    |

src/services/deployment/canary.py:588:13: TRY300 Consider moving this statement to an `else` block
    |
587 |             # Check minimum monitoring duration
588 |             return metrics.stage_duration_minutes >= config.monitoring_window_minutes
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
589 |
590 |         except (OSError, PermissionError):
    |

src/services/deployment/canary.py:635:13: TRY300 Consider moving this statement to an `else` block
    |
633 |                 return True
634 |
635 |             return False
    |             ^^^^^^^^^^^^ TRY300
636 |
637 |         except (OSError, PermissionError):
    |

src/services/deployment/feature_flags.py:146:13: PLE1206 Not enough arguments for `logging` format string
    |
145 |         except Exception:
146 |             logger.exception("Error checking feature flag %s: %s", feature_name)
    |             ^^^^^^^^^^^^^^^^ PLE1206
147 |             return self._get_feature_by_tier(feature_name)
    |

src/services/deployment/feature_flags.py:175:13: PLE1206 Not enough arguments for `logging` format string
    |
174 |         except Exception:
175 |             logger.exception("Error getting config value %s: %s", config_key)
    |             ^^^^^^^^^^^^^^^^ PLE1206
176 |             return default
    |

src/services/deployment/feature_flags.py:342:13: TRY300 Consider moving this statement to an `else` block
    |
340 |             self._cache_timestamps[cache_key] = current_time
341 |
342 |             return flags
    |             ^^^^^^^^^^^^ TRY300
343 |
344 |         except Exception:
    |

src/services/embeddings/fastembed_provider.py:192:13: TRY300 Consider moving this statement to an `else` block
    |
190 |                 f"Generated {len(embeddings)} embeddings locally"
191 |             )  # TODO: Convert f-string to logging format
192 |             return embeddings
    |             ^^^^^^^^^^^^^^^^^ TRY300
193 |
194 |         except Exception as e:
    |

src/services/embeddings/fastembed_provider.py:235:13: TRY300 Consider moving this statement to an `else` block
    |
233 |                 sparse_embeddings.append(sparse_data)
234 |
235 |             return sparse_embeddings
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
236 |         except Exception as e:
237 |             msg = f"Sparse embedding generation failed: {e}"
    |

src/services/embeddings/manager.py:591:13: TRY300 Consider moving this statement to an `else` block
    |
589 |                 result["sparse_embeddings"] = sparse_embeddings
590 |
591 |             return result
    |             ^^^^^^^^^^^^^ TRY300
592 |         except (ValueError, RuntimeError, ConnectionError, TimeoutError) as e:
593 |             logger.exception("Embedding generation failed: ")
    |

src/services/embeddings/openai_provider.py:215:13: TRY300 Consider moving this statement to an `else` block
    |
213 |                 )
214 |
215 |             return embeddings
    |             ^^^^^^^^^^^^^^^^^ TRY300
216 |
217 |         except Exception as e:
    |

src/services/embeddings/openai_provider.py:349:13: TRY300 Consider moving this statement to an `else` block
    |
347 |                 f"Created batch job {batch_response.id} for {len(texts)} texts"
348 |             )  # TODO: Convert f-string to logging format
349 |             return batch_response.id
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
350 |
351 |         except Exception as e:
    |

src/services/embeddings/parallel.py:186:17: TRY300 Consider moving this statement to an `else` block
    |
184 |                     f"Processed batch {batch_idx} with {len(batch)} items"
185 |                 )  # TODO: Convert f-string to logging format
186 |                 return results
    |                 ^^^^^^^^^^^^^^ TRY300
187 |
188 |             except TimeoutError:
    |

src/services/embeddings/parallel.py:193:17: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
191 |                 )  # TODO: Convert f-string to logging format
192 |                 msg = f"Batch {batch_idx} processing timeout"
193 |                 raise EmbeddingServiceError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
194 |             except Exception as e:
195 |                 logger.exception(
    |

src/services/enterprise/cache.py:138:13: TRY300 Consider moving this statement to an `else` block
    |
136 |             self._cache_misses += 1
137 |             self._record_operation_time("get", time.time() - start_time)
138 |             return None
    |             ^^^^^^^^^^^ TRY300
139 |
140 |         except Exception:
    |

src/services/enterprise/cache.py:212:13: TRY300 Consider moving this statement to an `else` block
    |
210 |             self._record_operation_time("delete", time.time() - start_time)
211 |
212 |             return deleted
    |             ^^^^^^^^^^^^^^ TRY300
213 |
214 |         except Exception:
    |

src/services/enterprise/integration.py:712:1: W293 [*] Blank line contains whitespace
    |
710 | class _IntegrationManagerSingleton:
711 |     """Singleton holder for enterprise integration manager instance."""
712 |     
    | ^^^^ W293
713 |     _instance: EnterpriseIntegrationManager | None = None
    |
    = help: Remove whitespace from blank line

src/services/enterprise/integration.py:714:1: W293 [*] Blank line contains whitespace
    |
713 |     _instance: EnterpriseIntegrationManager | None = None
714 |     
    | ^^^^ W293
715 |     @classmethod
716 |     async def get_instance(cls, config: Config = None) -> EnterpriseIntegrationManager:
    |
    = help: Remove whitespace from blank line

src/services/enterprise/integration.py:723:1: W293 [*] Blank line contains whitespace
    |
721 |             cls._instance = EnterpriseIntegrationManager(config)
722 |         return cls._instance
723 |     
    | ^^^^ W293
724 |     @classmethod
725 |     async def cleanup_instance(cls) -> None:
    |
    = help: Remove whitespace from blank line

src/services/enterprise/search.py:187:13: TRY300 Consider moving this statement to an `else` block
    |
185 |             await self._record_search_analytics(request, response)
186 |
187 |             return response
    |             ^^^^^^^^^^^^^^^ TRY300
188 |
189 |         except Exception as e:
    |

src/services/enterprise/search.py:238:13: TRY300 Consider moving this statement to an `else` block
    |
237 |             # Fallback: simple synonym expansion (placeholder)
238 |             return query  # Would implement actual expansion logic
    |             ^^^^^^^^^^^^ TRY300
239 |
240 |         except Exception:
    |

src/services/errors.py:500:13: TRY300 Consider moving this statement to an `else` block
    |
498 |             self._record_success(response_time)
499 |
500 |             return result
    |             ^^^^^^^^^^^^^ TRY300
501 |
502 |         except self.expected_exceptions as e:
    |

src/services/errors.py:747:25: SLF001 Private member accessed: `_should_attempt_reset`
    |
745 |             if (
746 |                 breaker.state == CircuitState.OPEN
747 |                 and not breaker._should_attempt_reset()
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
748 |             ):
749 |                 wait_time = (
    |

src/services/errors.py:773:25: SLF001 Private member accessed: `_record_success`
    |
771 |                         result = await func(*args, **kwargs)
772 |                         response_time = time.time() - start_time
773 |                         breaker._record_success(response_time)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^ SLF001
774 |                         return result
775 |                     except expected_exceptions as e:
    |

src/services/errors.py:774:25: TRY300 Consider moving this statement to an `else` block
    |
772 |                         response_time = time.time() - start_time
773 |                         breaker._record_success(response_time)
774 |                         return result
    |                         ^^^^^^^^^^^^^ TRY300
775 |                     except expected_exceptions as e:
776 |                         response_time = time.time() - start_time
    |

src/services/errors.py:777:25: SLF001 Private member accessed: `_record_failure`
    |
775 |                     except expected_exceptions as e:
776 |                         response_time = time.time() - start_time
777 |                         breaker._record_failure(e, response_time)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^ SLF001
778 |
779 |                         # Log retry attempt
    |

src/services/fastapi/background.py:261:13: TRY300 Consider moving this statement to an `else` block
    |
259 |                 f"Task {task_id} submitted successfully"
260 |             )  # TODO: Convert f-string to logging format
261 |             return task_id
    |             ^^^^^^^^^^^^^^ TRY300
262 |         except asyncio.QueueFull as e:
263 |             # Remove from storage if queue is full
    |

src/services/fastapi/background.py:574:1: W293 [*] Blank line contains whitespace
    |
572 | class _TaskManagerSingleton:
573 |     """Singleton holder for background task manager instance."""
574 |     
    | ^^^^ W293
575 |     _instance: BackgroundTaskManager | None = None
    |
    = help: Remove whitespace from blank line

src/services/fastapi/background.py:576:1: W293 [*] Blank line contains whitespace
    |
575 |     _instance: BackgroundTaskManager | None = None
576 |     
    | ^^^^ W293
577 |     @classmethod
578 |     def get_instance(cls) -> BackgroundTaskManager:
    |
    = help: Remove whitespace from blank line

src/services/fastapi/background.py:583:1: W293 [*] Blank line contains whitespace
    |
581 |             cls._instance = BackgroundTaskManager()
582 |         return cls._instance
583 |     
    | ^^^^ W293
584 |     @classmethod
585 |     async def initialize_instance(cls, max_workers: int = 4, max_queue_size: int = 1000) -> None:
    |
    = help: Remove whitespace from blank line

src/services/fastapi/background.py:590:1: W293 [*] Blank line contains whitespace
    |
588 |             cls._instance = BackgroundTaskManager(max_workers, max_queue_size)
589 |         await cls._instance.start()
590 |     
    | ^^^^ W293
591 |     @classmethod
592 |     async def cleanup_instance(cls) -> None:
    |
    = help: Remove whitespace from blank line

src/services/fastapi/dependencies/core.py:137:1: W293 [*] Blank line contains whitespace
    |
135 | class _DependencyContainerSingleton:
136 |     """Singleton holder for dependency container instance."""
137 |     
    | ^^^^ W293
138 |     _instance: DependencyContainer | None = None
    |
    = help: Remove whitespace from blank line

src/services/fastapi/dependencies/core.py:139:1: W293 [*] Blank line contains whitespace
    |
138 |     _instance: DependencyContainer | None = None
139 |     
    | ^^^^ W293
140 |     @classmethod
141 |     def get_instance(cls) -> DependencyContainer:
    |
    = help: Remove whitespace from blank line

src/services/fastapi/dependencies/core.py:147:1: W293 [*] Blank line contains whitespace
    |
145 |             raise RuntimeError(msg)
146 |         return cls._instance
147 |     
    | ^^^^ W293
148 |     @classmethod
149 |     async def initialize_instance(cls, config: Config | None = None) -> None:
    |
    = help: Remove whitespace from blank line

src/services/fastapi/dependencies/core.py:154:1: W293 [*] Blank line contains whitespace
    |
152 |             cls._instance = DependencyContainer()
153 |         await cls._instance.initialize(config)
154 |     
    | ^^^^ W293
155 |     @classmethod
156 |     async def cleanup_instance(cls) -> None:
    |
    = help: Remove whitespace from blank line

src/services/fastapi/middleware/compression.py:163:13: TRY300 Consider moving this statement to an `else` block
    |
161 |             )
162 |
163 |             return compressed_response
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
164 |
165 |         except (ValueError, TypeError, UnicodeDecodeError) as e:
    |

src/services/fastapi/middleware/compression.py:317:13: TRY300 Consider moving this statement to an `else` block
    |
315 |             )
316 |
317 |             return compressed_response
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
318 |
319 |         except (ValueError, TypeError, UnicodeDecodeError) as e:
    |

src/services/fastapi/middleware/performance.py:166:13: TRY300 Consider moving this statement to an `else` block
    |
164 |                 response.headers["X-Memory-Delta"] = f"{memory_delta:.2f}"
165 |
166 |             return response
    |             ^^^^^^^^^^^^^^^ TRY300
167 |
168 |         except (ConnectionError, TimeoutError, ValueError, httpx.RequestError):
    |

src/services/fastapi/middleware/performance.py:425:30: ARG001 Unused function argument: `app`
    |
424 | @asynccontextmanager
425 | async def optimized_lifespan(app):
    |                              ^^^ ARG001
426 |     """Optimized application lifespan with uvloop and service warming.
    |

src/services/fastapi/middleware/security.py:239:17: SIM103 Return the negated condition directly
    |
238 |                   # Check if limit exceeded
239 | /                 if count >= self.config.default_rate_limit:
240 | |                     return False
241 | |
242 | |                 # Increment counter atomically
243 | |                 # new_count = await self.redis_client.incr(rate_limit_key)
244 | |                 return True
    | |___________________________^ SIM103
245 |               # First request in window - set counter and expiry atomically
246 |               async with self.redis_client.pipeline(transaction=True) as pipe:
    |
    = help: Inline condition

src/services/fastapi/middleware/security.py:250:13: TRY300 Consider moving this statement to an `else` block
    |
248 |                 pipe.expire(rate_limit_key, self.config.rate_limit_window)
249 |                 await pipe.execute()
250 |             return True
    |             ^^^^^^^^^^^ TRY300
251 |
252 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/fastapi/middleware/security.py:309:13: TRY300 Consider moving this statement to an `else` block
    |
307 |                 logger.info("Redis connection restored")
308 |                 self._redis_healthy = True
309 |             return True
    |             ^^^^^^^^^^^ TRY300
310 |
311 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/fastapi/middleware/timeout.py:99:13: TRY300 Consider moving this statement to an `else` block
    |
 97 |                 self._record_success(endpoint)
 98 |
 99 |             return response
    |             ^^^^^^^^^^^^^^^ TRY300
100 |
101 |         except TimeoutError:
    |

src/services/fastapi/middleware/tracing.py:146:13: TRY300 Consider moving this statement to an `else` block
    |
144 |                 await self._log_response(request, response, correlation_id, duration)
145 |
146 |             return response
    |             ^^^^^^^^^^^^^^^ TRY300
147 |
148 |         except Exception as e:
    |

src/services/fastapi/middleware/tracing.py:272:17: TRY300 Consider moving this statement to an `else` block
    |
270 |                 if truncated:
271 |                     body_str += f"... (truncated at {self.max_body_size} bytes)"
272 |                 return body_str
    |                 ^^^^^^^^^^^^^^^ TRY300
273 |             except UnicodeDecodeError:
274 |                 return f"<binary data: {len(body)} bytes>"
    |

src/services/fastapi/middleware/tracing.py:309:17: TRY300 Consider moving this statement to an `else` block
    |
307 |                 if truncated:
308 |                     body_str += f"... (truncated at {self.max_body_size} bytes)"
309 |                 return body_str
    |                 ^^^^^^^^^^^^^^^ TRY300
310 |             except UnicodeDecodeError:
311 |                 return f"<binary data: {len(body)} bytes>"
    |

src/services/fastapi/middleware/tracing.py:422:17: TRY300 Consider moving this statement to an `else` block
    |
420 |                     span.set_status(self.Status(self.StatusCode.OK))
421 |
422 |                 return response
    |                 ^^^^^^^^^^^^^^^ TRY300
423 |
424 |             except Exception as e:
    |

src/services/fastapi/routers/__init__.py:1:31: W292 [*] No newline at end of file
  |
1 | """FastAPI routers package."""
  |                               ^ W292
  |
  = help: Add trailing newline

src/services/fastapi/routers/rag.py:12:1: TID252 Prefer absolute imports over relative imports from parent modules
   |
10 |   from fastapi import APIRouter, HTTPException, status
11 |
12 | / from ...dependencies import (
13 | |     ConfigDep,
14 | |     RAGGeneratorDep,
15 | |     RAGRequest,
16 | |     RAGResponse,
17 | |     clear_rag_cache,
18 | |     generate_rag_answer,
19 | |     get_rag_metrics,
20 | | )
   | |_^ TID252
   |
   = help: Replace relative imports from parent modules with absolute imports

src/services/fastapi/routers/rag.py:12:1: TID252 Prefer absolute imports over relative imports from parent modules
   |
10 |   from fastapi import APIRouter, HTTPException, status
11 |
12 | / from ...dependencies import (
13 | |     ConfigDep,
14 | |     RAGGeneratorDep,
15 | |     RAGRequest,
16 | |     RAGResponse,
17 | |     clear_rag_cache,
18 | |     generate_rag_answer,
19 | |     get_rag_metrics,
20 | | )
   | |_^ TID252
   |
   = help: Replace relative imports from parent modules with absolute imports

src/services/fastapi/routers/rag.py:12:1: TID252 Prefer absolute imports over relative imports from parent modules
   |
10 |   from fastapi import APIRouter, HTTPException, status
11 |
12 | / from ...dependencies import (
13 | |     ConfigDep,
14 | |     RAGGeneratorDep,
15 | |     RAGRequest,
16 | |     RAGResponse,
17 | |     clear_rag_cache,
18 | |     generate_rag_answer,
19 | |     get_rag_metrics,
20 | | )
   | |_^ TID252
   |
   = help: Replace relative imports from parent modules with absolute imports

src/services/fastapi/routers/rag.py:12:1: TID252 Prefer absolute imports over relative imports from parent modules
   |
10 |   from fastapi import APIRouter, HTTPException, status
11 |
12 | / from ...dependencies import (
13 | |     ConfigDep,
14 | |     RAGGeneratorDep,
15 | |     RAGRequest,
16 | |     RAGResponse,
17 | |     clear_rag_cache,
18 | |     generate_rag_answer,
19 | |     get_rag_metrics,
20 | | )
   | |_^ TID252
   |
   = help: Replace relative imports from parent modules with absolute imports

src/services/fastapi/routers/rag.py:12:1: TID252 Prefer absolute imports over relative imports from parent modules
   |
10 |   from fastapi import APIRouter, HTTPException, status
11 |
12 | / from ...dependencies import (
13 | |     ConfigDep,
14 | |     RAGGeneratorDep,
15 | |     RAGRequest,
16 | |     RAGResponse,
17 | |     clear_rag_cache,
18 | |     generate_rag_answer,
19 | |     get_rag_metrics,
20 | | )
   | |_^ TID252
   |
   = help: Replace relative imports from parent modules with absolute imports

src/services/fastapi/routers/rag.py:12:1: TID252 Prefer absolute imports over relative imports from parent modules
   |
10 |   from fastapi import APIRouter, HTTPException, status
11 |
12 | / from ...dependencies import (
13 | |     ConfigDep,
14 | |     RAGGeneratorDep,
15 | |     RAGRequest,
16 | |     RAGResponse,
17 | |     clear_rag_cache,
18 | |     generate_rag_answer,
19 | |     get_rag_metrics,
20 | | )
   | |_^ TID252
   |
   = help: Replace relative imports from parent modules with absolute imports

src/services/fastapi/routers/rag.py:12:1: TID252 Prefer absolute imports over relative imports from parent modules
   |
10 |   from fastapi import APIRouter, HTTPException, status
11 |
12 | / from ...dependencies import (
13 | |     ConfigDep,
14 | |     RAGGeneratorDep,
15 | |     RAGRequest,
16 | |     RAGResponse,
17 | |     clear_rag_cache,
18 | |     generate_rag_answer,
19 | |     get_rag_metrics,
20 | | )
   | |_^ TID252
   |
   = help: Replace relative imports from parent modules with absolute imports

src/services/fastapi/routers/rag.py:96:9: TRY300 Consider moving this statement to an `else` block
    |
 94 |       try:
 95 |           metrics = await get_rag_metrics(rag_generator)
 96 | /         return {
 97 | |             "status": "success",
 98 | |             "metrics": metrics,
 99 | |         }
    | |_________^ TRY300
100 |       except Exception as e:
101 |           logger.exception("Failed to get RAG metrics")
    |

src/services/functional/circuit_breaker.py:195:13: TRY300 Consider moving this statement to an `else` block
    |
193 |             await self._record_success(execution_time)
194 |
195 |             return result
    |             ^^^^^^^^^^^^^ TRY300
196 |
197 |         except self.config.monitored_exceptions:
    |

src/services/functional/circuit_breaker.py:344:9: SLF001 Private member accessed: `_circuit_breaker`
    |
343 |         # Attach circuit breaker for metrics access
344 |         wrapper._circuit_breaker = breaker  # type: ignore[misc]
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
345 |         return wrapper
    |

src/services/hyde/cache.py:134:13: TRY300 Consider moving this statement to an `else` block
    |
132 |                 return embedding
133 |             self.cache_misses += 1
134 |             return None
    |             ^^^^^^^^^^^ TRY300
135 |
136 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/hyde/cache.py:198:13: TRY300 Consider moving this statement to an `else` block
    |
196 |                 )  # TODO: Convert f-string to logging format
197 |
198 |             return success
    |             ^^^^^^^^^^^^^^ TRY300
199 |
200 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/hyde/cache.py:236:13: TRY300 Consider moving this statement to an `else` block
    |
234 |                 return cached_docs
235 |             self.cache_misses += 1
236 |             return None
    |             ^^^^^^^^^^^ TRY300
237 |
238 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/hyde/cache.py:292:13: TRY300 Consider moving this statement to an `else` block
    |
290 |                 )  # TODO: Convert f-string to logging format
291 |
292 |             return success
    |             ^^^^^^^^^^^^^^ TRY300
293 |
294 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/hyde/cache.py:330:13: TRY300 Consider moving this statement to an `else` block
    |
328 |                 return cached_results
329 |             self.cache_misses += 1
330 |             return None
    |             ^^^^^^^^^^^ TRY300
331 |
332 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/hyde/cache.py:387:13: TRY300 Consider moving this statement to an `else` block
    |
385 |                 )  # TODO: Convert f-string to logging format
386 |
387 |             return success
    |             ^^^^^^^^^^^^^^ TRY300
388 |
389 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/hyde/cache.py:467:13: TRY300 Consider moving this statement to an `else` block
    |
465 |             )
466 |
467 |             return success_count > 0
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
468 |
469 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
    |

src/services/hyde/engine.py:210:13: TRY300 Consider moving this statement to an `else` block
    |
208 |                 logger.debug("HyDE search completed in {search_time:.2f}s for query")
209 |
210 |             return results
    |             ^^^^^^^^^^^^^^ TRY300
211 |
212 |         except Exception as e:
    |

src/services/hyde/engine.py:326:13: TRY300 Consider moving this statement to an `else` block
    |
324 |             # Basic reranking fallback (could implement BGE reranking here)
325 |             logger.debug("Reranking not available, returning original results")
326 |             return results
    |             ^^^^^^^^^^^^^^ TRY300
327 |
328 |         except (TimeoutError, AttributeError, RuntimeError, ValueError):
    |

src/services/hyde/generator.py:187:13: TRY300 Consider moving this statement to an `else` block
    |
185 |                 )
186 |
187 |             return result
    |             ^^^^^^^^^^^^^ TRY300
188 |
189 |         except Exception as e:
    |

src/services/integration/__init__.py:1:36: W292 [*] No newline at end of file
  |
1 | """Integration services package."""
  |                                    ^ W292
  |
  = help: Add trailing newline

src/services/integration/modern_examples.py:172:13: TRY300 Consider moving this statement to an `else` block
    |
170 |             count = await self.cache_manager.invalidate_pattern(pattern)
171 |             logger.info("Invalidated %s search cache entries", count)
172 |             return True
    |             ^^^^^^^^^^^ TRY300
173 |         except Exception:
174 |             logger.exception("Failed to invalidate search cache")
    |

src/services/integration/modern_examples.py:229:13: TRY300 Consider moving this statement to an `else` block
    |
227 |         try:
228 |             embedding = await service.embedding_service.generate_embedding(text, model)
229 |             return {"embedding": embedding, "model": model}
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
230 |         except Exception as e:
231 |             logger.exception("Embedding generation failed")
    |

src/services/integration/modern_examples.py:232:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
230 |         except Exception as e:
231 |             logger.exception("Embedding generation failed")
232 |             raise HTTPException(status_code=500, detail=str(e))
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
233 |
234 |     @app.get("/search")
    |

src/services/integration/modern_examples.py:247:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
245 |         except Exception as e:
246 |             logger.exception("Search failed")
247 |             raise HTTPException(status_code=500, detail=str(e))
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
248 |
249 |     @app.get("/health/modern")
    |

src/services/integration/modern_examples.py:277:13: TRY300 Consider moving this statement to an `else` block
    |
275 |         try:
276 |             success = await service.cache_manager.clear()
277 |             return {"success": success, "message": "Cache cleared"}
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
278 |         except Exception as e:
279 |             logger.exception("Cache clear failed")
    |

src/services/integration/modern_examples.py:280:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
278 |         except Exception as e:
279 |             logger.exception("Cache clear failed")
280 |             raise HTTPException(status_code=500, detail=str(e))
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
281 |
282 |     @app.post("/admin/circuit-breaker/{service_name}/reset")
    |

src/services/integration/modern_examples.py:292:13: TRY300 Consider moving this statement to an `else` block
    |
290 |         try:
291 |             success = await service.circuit_breaker_manager.reset_breaker(service_name)
292 |             return {"success": success, "service": service_name}
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
293 |         except Exception as e:
294 |             logger.exception("Circuit breaker reset failed")
    |

src/services/integration/modern_examples.py:295:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
293 |         except Exception as e:
294 |             logger.exception("Circuit breaker reset failed")
295 |             raise HTTPException(status_code=500, detail=str(e))
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
296 |
297 |     return app
    |

src/services/integration/modern_examples.py:308:31: ARG001 Unused function argument: `text`
    |
306 |     # Declarative caching with decorator
307 |     @cache_manager.cache_embeddings(ttl=3600)
308 |     async def cached_function(text: str) -> list[float]:
    |                               ^^^^ ARG001
309 |         # Expensive operation
310 |         await asyncio.sleep(1)
    |

src/services/managers/crawling_manager.py:362:13: TRY300 Consider moving this statement to an `else` block
    |
360 |                 }
361 |
362 |             return extracted
    |             ^^^^^^^^^^^^^^^^ TRY300
363 |
364 |         except Exception as e:
    |

src/services/managers/crawling_manager.py:422:13: TRY300 Consider moving this statement to an `else` block
    |
420 |                     processed_results.append(result)
421 |
422 |             return processed_results
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
423 |
424 |         except Exception as e:
    |

src/services/managers/database_manager.py:132:63: TRY401 Redundant exception object included in `logging.exception` call
    |
130 |             return [col.name for col in collections.collections]
131 |         except Exception as e:
132 |             logger.exception("Failed to get collections: %s", e)
    |                                                               ^ TRY401
133 |             msg = f"Failed to get collections: {e}"
134 |             raise APIError(msg) from e
    |

src/services/managers/database_manager.py:157:13: TRY300 Consider moving this statement to an `else` block
    |
155 |         try:
156 |             await self._qdrant_service.upsert_points(collection_name, points)
157 |             return True
    |             ^^^^^^^^^^^ TRY300
158 |         except Exception as e:
159 |             logger.exception("Failed to store embeddings: %s", e)
    |

src/services/managers/database_manager.py:159:64: TRY401 Redundant exception object included in `logging.exception` call
    |
157 |             return True
158 |         except Exception as e:
159 |             logger.exception("Failed to store embeddings: %s", e)
    |                                                                ^ TRY401
160 |             msg = f"Failed to store embeddings: {e}"
161 |             raise APIError(msg) from e
    |

src/services/managers/database_manager.py:196:62: TRY401 Redundant exception object included in `logging.exception` call
    |
194 |             )
195 |         except Exception as e:
196 |             logger.exception("Failed to search vectors: %s", e)
    |                                                              ^ TRY401
197 |             msg = f"Failed to search vectors: {e}"
198 |             raise APIError(msg) from e
    |

src/services/managers/database_manager.py:283:13: TRY300 Consider moving this statement to an `else` block
    |
281 |         try:
282 |             await self._redis_client.ping()
283 |             return True
    |             ^^^^^^^^^^^ TRY300
284 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
285 |             logger.warning(
    |

src/services/managers/database_manager.py:306:13: TRY300 Consider moving this statement to an `else` block
    |
304 |         try:
305 |             await self._redis_client.set(key, value, ex=ex)
306 |             return True
    |             ^^^^^^^^^^^ TRY300
307 |         except (redis.RedisError, ConnectionError, TimeoutError, ValueError) as e:
308 |             logger.warning(
    |

src/services/managers/monitoring_manager.py:310:13: TRY300 Consider moving this statement to an `else` block
    |
308 |             self.increment_counter(f"{operation_name}_total", {"status": "success"})
309 |
310 |             return result
    |             ^^^^^^^^^^^^^ TRY300
311 |
312 |         except Exception:
    |

src/services/middleware/__init__.py:1:35: W292 [*] No newline at end of file
  |
1 | """Middleware services package."""
  |                                   ^ W292
  |
  = help: Add trailing newline

src/services/middleware/rate_limiting.py:167:13: TRY300 Consider moving this statement to an `else` block
    |
165 |               # This would require extending slowapi or accessing internal state
166 |               # For now, return basic information
167 | /             return {
168 | |                 "key": key,
169 | |                 "limiter_storage": self.redis_url,
170 | |                 "default_limits": self.limiter.default_limits,
171 | |             }
    | |_____________^ TRY300
172 |           except Exception as e:
173 |               logger.exception("Error getting current limits")
    |

src/services/middleware/rate_limiting.py:188:27: SLF001 Private member accessed: `_storage`
    |
186 |             # This would require accessing the limiter's storage directly
187 |             if hasattr(self.limiter, "_storage"):
188 |                 storage = self.limiter._storage
    |                           ^^^^^^^^^^^^^^^^^^^^^ SLF001
189 |                 if hasattr(storage, "clear"):
190 |                     await storage.clear(key)
    |

src/services/middleware/rate_limiting.py:197:13: TRY300 Consider moving this statement to an `else` block
    |
196 |             logger.warning("Rate limit reset not supported")
197 |             return False
    |             ^^^^^^^^^^^^ TRY300
198 |         except Exception:
199 |             logger.exception("Error resetting limits for {key}")
    |

src/services/migration/__init__.py:1:34: W292 [*] No newline at end of file
  |
1 | """Migration services package."""
  |                                  ^ W292
  |
  = help: Add trailing newline

src/services/migration/library_migration.py:161:13: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
159 |         if self.migration_config.performance_monitoring:
160 |             # Start background monitoring task
161 |             asyncio.create_task(self._monitoring_loop())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
162 |             logger.info("Performance monitoring enabled")
    |

src/services/migration/library_migration.py:267:9: SIM103 Return the condition directly
    |
265 |           legacy_latency = legacy_metrics.get("avg_latency", float("inf"))
266 |
267 | /         if modern_latency <= legacy_latency * 1.2:  # Allow 20% performance degradation
268 | |             return True
269 | |
270 | |         return False
    | |____________________^ SIM103
271 |
272 |       async def _track_parallel_performance(self, service: str, operation: str) -> None:
    |
    = help: Inline condition

src/services/migration/library_migration.py:360:13: TRY300 Consider moving this statement to an `else` block
    |
358 |                 f"Unknown service for migration: {service}"
359 |             )  # TODO: Convert f-string to logging format
360 |             return False
    |             ^^^^^^^^^^^^ TRY300
361 |         except Exception:
362 |             logger.exception("Error forcing migration of {service}")
    |

src/services/monitoring/health.py:112:13: TRY300 Consider moving this statement to an `else` block
    |
110 |             duration_ms = (time.time() - start_time) * 1000
111 |             result.duration_ms = duration_ms
112 |             return result
    |             ^^^^^^^^^^^^^ TRY300
113 |
114 |         except TimeoutError:
    |

src/services/monitoring/metrics.py:417:21: TRY300 Consider moving this statement to an `else` block
    |
415 |                         ).observe(len(result))
416 |
417 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
418 |
419 |                 except (
    |

src/services/monitoring/metrics.py:445:21: TRY300 Consider moving this statement to an `else` block
    |
443 |                         provider=provider, model=model, status="success"
444 |                     ).inc()
445 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
446 |
447 |                 except (
    |

src/services/monitoring/metrics.py:495:21: TRY300 Consider moving this statement to an `else` block
    |
493 |                             cache_type=cache_type, cache_name=cache_name
494 |                         ).inc()
495 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
496 |                 except (ConnectionError, RuntimeError, TimeoutError):
497 |                     self._metrics["cache_misses"].labels(
    |

src/services/monitoring/metrics.py:514:21: TRY300 Consider moving this statement to an `else` block
    |
512 |                             cache_type=cache_type, cache_name=cache_name
513 |                         ).inc()
514 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
515 |                 except (ConnectionError, RuntimeError, TimeoutError):
516 |                     self._metrics["cache_misses"].labels(
    |

src/services/monitoring/metrics.py:549:21: TRY300 Consider moving this statement to an `else` block
    |
547 |                         cache_type=cache_type, operation=operation, result="success"
548 |                     ).inc()
549 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
550 |
551 |                 except (ConnectionError, OSError, PermissionError):
    |

src/services/monitoring/metrics.py:572:21: TRY300 Consider moving this statement to an `else` block
    |
570 |                         cache_type=cache_type, operation=operation, result="success"
571 |                     ).inc()
572 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
573 |
574 |                 except (ConnectionError, OSError, PermissionError):
    |

src/services/monitoring/metrics.py:843:12: PLW0603 Using the global statement to update `_global_registry` is discouraged
    |
842 |     """
843 |     global _global_registry
    |            ^^^^^^^^^^^^^^^^ PLW0603
844 |     _global_registry = MetricsRegistry(config)
845 |     return _global_registry
    |

src/services/monitoring/middleware.py:276:46: SLF001 Private member accessed: `_metrics`
    |
274 |             self.metrics_registry
275 |             and hasattr(self.metrics_registry, "_metrics")
276 |             and "custom_request_duration" in self.metrics_registry._metrics
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
277 |         ):
278 |             # Record request duration by endpoint
    |

src/services/monitoring/middleware.py:279:13: SLF001 Private member accessed: `_metrics`
    |
277 |         ):
278 |             # Record request duration by endpoint
279 |             self.metrics_registry._metrics["custom_request_duration"].labels(
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
280 |                 method=method, endpoint=path, status_code=response.status_code
281 |             ).observe(duration)
    |

src/services/observability/config_instrumentation.py:169:21: TRY300 Consider moving this statement to an `else` block
    |
167 |                     )
168 |
169 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
170 |
171 |                 except Exception as e:
    |

src/services/observability/config_instrumentation.py:235:21: TRY300 Consider moving this statement to an `else` block
    |
233 |                     )
234 |
235 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
236 |
237 |                 except Exception as e:
    |

src/services/observability/config_instrumentation.py:324:21: TRY300 Consider moving this statement to an `else` block
    |
323 |                     span.set_status(Status(StatusCode.OK))
324 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
325 |
326 |                 except Exception as e:
    |

src/services/observability/config_instrumentation.py:378:21: TRY300 Consider moving this statement to an `else` block
    |
377 |                     span.set_status(Status(StatusCode.OK))
378 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
379 |
380 |                 except Exception as e:
    |

src/services/observability/config_instrumentation.py:460:21: TRY300 Consider moving this statement to an `else` block
    |
459 |                     span.set_status(Status(StatusCode.OK))
460 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
461 |
462 |                 except Exception as e:
    |

src/services/observability/config_instrumentation.py:503:21: TRY300 Consider moving this statement to an `else` block
    |
502 |                     span.set_status(Status(StatusCode.OK))
503 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
504 |
505 |                 except Exception as e:
    |

src/services/observability/dependencies.py:209:9: TRY300 Consider moving this statement to an `else` block
    |
207 |           enabled = observability_service["enabled"]
208 |
209 | /         return {
210 | |             "enabled": enabled,
211 | |             "service_name": config.service_name,
212 | |             "otlp_endpoint": config.otlp_endpoint if enabled else None,
213 | |             "instrumentation": {
214 | |                 "fastapi": config.instrument_fastapi if enabled else False,
215 | |                 "httpx": config.instrument_httpx if enabled else False,
216 | |                 "redis": config.instrument_redis if enabled else False,
217 | |                 "sqlalchemy": config.instrument_sqlalchemy if enabled else False,
218 | |             },
219 | |             "ai_tracking": {
220 | |                 "operations": config.track_ai_operations if enabled else False,
221 | |                 "costs": config.track_costs if enabled else False,
222 | |             },
223 | |             "status": "healthy" if enabled else "disabled",
224 | |         }
    | |_________^ TRY300
225 |
226 |       except Exception as e:
    |

src/services/observability/enterprise.py:27:5: TC005 [*] Found empty type-checking block
   |
26 | if TYPE_CHECKING:
27 |     pass
   |     ^^^^ TC005
   |
   = help: Delete empty type-checking block

src/services/observability/enterprise.py:724:9: SIM102 Use a single `if` statement instead of nested `if` statements
    |
722 |           self.distributed_tracer.finish_span(span, status)
723 |
724 | /         if status == TraceStatus.SUCCESS:
725 | |             # Record performance metrics
726 | |             if span.duration_ms:
    | |________________________________^ SIM102
727 |                   self.record_metric(
728 |                       "span.duration",
    |
    = help: Combine `if` statements using `and`

src/services/observability/init.py:38:21: ARG004 Unused static method argument: `args`
   |
36 |     class Resource:
37 |         @staticmethod
38 |         def create(*args, **kwargs):
   |                     ^^^^ ARG004
39 |             return None
   |

src/services/observability/init.py:38:29: ARG004 Unused static method argument: `kwargs`
   |
36 |     class Resource:
37 |         @staticmethod
38 |         def create(*args, **kwargs):
   |                             ^^^^^^ ARG004
39 |             return None
   |

src/services/observability/metrics_bridge.py:218:17: SLF001 Private member accessed: `_metrics`
    |
216 |             try:
217 |                 status = "success" if success else "error"
218 |                 self.prometheus_registry._metrics["search_requests"].labels(
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
219 |                     collection=collection, status=status
220 |                 ).inc()
    |

src/services/observability/metrics_bridge.py:221:17: SLF001 Private member accessed: `_metrics`
    |
219 |                     collection=collection, status=status
220 |                 ).inc()
221 |                 self.prometheus_registry._metrics["search_duration"].labels(
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
222 |                     collection=collection, query_type=query_type
223 |                 ).observe(duration_ms / 1000)  # Convert to seconds for Prometheus
    |

src/services/observability/middleware.py:145:17: TRY300 Consider moving this statement to an `else` block
    |
143 |                     self._record_request_metrics(request, response, start_time)
144 |
145 |                 return response
    |                 ^^^^^^^^^^^^^^^ TRY300
146 |
147 |             except Exception as e:
    |

src/services/observability/performance.py:104:13: TRY300 Consider moving this statement to an `else` block
    |
102 |               net_recv_mb = net_io.bytes_recv / (1024 * 1024) if net_io else 0
103 |
104 | /             return {
105 | |                 "cpu_percent": cpu_percent,
106 | |                 "memory_used_mb": memory_used_mb,
107 | |                 "memory_percent": memory_percent,
108 | |                 "disk_read_mb": disk_read_mb,
109 | |                 "disk_write_mb": disk_write_mb,
110 | |                 "network_sent_mb": net_sent_mb,
111 | |                 "network_recv_mb": net_recv_mb,
112 | |             }
    | |_____________^ TRY300
113 |
114 |           except (ConnectionError, OSError, TimeoutError) as e:
    |

src/services/observability/tracking.py:182:21: TRY300 Consider moving this statement to an `else` block
    |
180 |                         span.set_attribute("function.result", str(result)[:100])
181 |
182 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
183 |
184 |                 except Exception as e:
    |

src/services/observability/tracking.py:226:21: TRY300 Consider moving this statement to an `else` block
    |
224 |                         span.set_attribute("function.result", str(result)[:100])
225 |
226 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
227 |
228 |                 except Exception as e:
    |

src/services/processing/algorithms.py:171:5: B019 Use of `functools.lru_cache` or `functools.cache` on methods can lead to memory leaks
    |
169 |         }
170 |
171 |     @functools.lru_cache(maxsize=1000)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B019
172 |     def analyze_text_optimized(self, text: str) -> TextAnalysisResult:
173 |         """Optimized O(n) text analysis replacing O(n²) implementation.
    |

src/services/processing/algorithms.py:384:5: B019 Use of `functools.lru_cache` or `functools.cache` on methods can lead to memory leaks
    |
382 |         return min(1.0, english_indicators / total_words)
383 |
384 |     @functools.lru_cache(maxsize=500)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B019
385 |     def calculate_document_similarity_optimized(
386 |         self, text_a: str, text_b: str
    |

src/services/processing/batch_optimizer.py:82:13: RUF006 Store a reference to the return value of `asyncio.create_task`
   |
80 |         # Schedule delayed batch processing if not already processed
81 |         if not should_process:
82 |             asyncio.create_task(self._delayed_batch_processing())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
83 |
84 |         return await future
   |

src/services/processing/parallel_integration.py:257:13: TRY300 Consider moving this statement to an `else` block
    |
255 |             await self._update_system_metrics(processing_time_ms, success=True)
256 |
257 |             return results
    |             ^^^^^^^^^^^^^^ TRY300
258 |
259 |         except Exception:
    |

src/services/query_processing/expansion.py:284:13: TRY300 Consider moving this statement to an `else` block
    |
282 |             )
283 |
284 |             return result
    |             ^^^^^^^^^^^^^ TRY300
285 |
286 |         except Exception as e:
    |

src/services/query_processing/expansion.py:658:29: RUF005 Consider `[original_term, *related_terms[:3]]` instead of concatenation
    |
656 |               if original_term in expanded_query:
657 |                   # Add related terms as OR alternatives
658 |                   all_terms = [original_term] + related_terms[
    |  _____________________________^
659 | |                     :3
660 | |                 ]  # Limit to avoid overly complex queries
    | |_________________^ RUF005
661 |                   term_expansion = f"({' OR '.join(all_terms)})"
662 |                   expanded_query = expanded_query.replace(
    |
    = help: Replace with `[original_term, *related_terms[:3]]`

src/services/query_processing/federated.py:447:13: TRY300 Consider moving this statement to an `else` block
    |
445 |             )
446 |
447 |             return result
    |             ^^^^^^^^^^^^^ TRY300
448 |
449 |         except Exception as e:
    |

src/services/query_processing/federated.py:699:13: TRY300 Consider moving this statement to an `else` block
    |
697 |                     collection_results.append(result)
698 |
699 |             return collection_results
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
700 |
701 |         except TimeoutError:
    |

src/services/query_processing/intent_classifier.py:703:13: TRY300 Consider moving this statement to an `else` block
    |
701 |                 scores[intent] = max(0.0, similarity)  # Ensure non-negative
702 |
703 |             return scores
    |             ^^^^^^^^^^^^^ TRY300
704 |
705 |         except (OSError, PermissionError):
    |

src/services/query_processing/orchestrator.py:352:32: SLF001 Private member accessed: `_initialized`
    |
351 |                         # Initialize RAG generator if needed
352 |                         if not self._rag_generator._initialized:
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
353 |                             await self.rag_generator.initialize()
    |

src/services/query_processing/orchestrator.py:415:13: TRY300 Consider moving this statement to an `else` block
    |
413 |             ) / self.stats["total_searches"]
414 |
415 |             return result
    |             ^^^^^^^^^^^^^ TRY300
416 |
417 |         except (OSError, PermissionError, RuntimeError):
    |

src/services/query_processing/orchestrator.py:497:17: TRY300 Consider moving this statement to an `else` block
    |
495 |                     )
496 |
497 |                 return results
    |                 ^^^^^^^^^^^^^^ TRY300
498 |
499 |             except (AttributeError, OSError, PermissionError):
    |

src/services/query_processing/orchestrator.py:610:36: SLF001 Private member accessed: `_initialized`
    |
609 |         # Cleanup RAG generator if initialized
610 |         if self._rag_generator and self._rag_generator._initialized:
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
611 |             await self._rag_generator.cleanup()
    |

src/services/query_processing/preprocessor.py:228:29: ISC001 Implicitly concatenated string literals on one line
    |
227 |         # Normalize quotation marks
228 |         normalized = re.sub(r'[""' ",„]", '"', normalized)
    |                             ^^^^^^^^^^^^ ISC001
229 |
230 |         # Normalize hyphens and dashes
    |
    = help: Combine string literals

src/services/query_processing/ranking.py:419:13: TRY300 Consider moving this statement to an `else` block
    |
417 |             )
418 |
419 |             return result
    |             ^^^^^^^^^^^^^ TRY300
420 |
421 |         except Exception as e:
    |

src/services/query_processing/ranking.py:1005:13: TRY300 Consider moving this statement to an `else` block
     |
1003 |             if age_days <= 90:
1004 |                 return 0.02
1005 |             return 0.0
     |             ^^^^^^^^^^ TRY300
1006 |         except (ValueError, TypeError):
1007 |             return 0.0
     |

src/services/rag/generator.py:188:13: TRY300 Consider moving this statement to an `else` block
    |
186 |             self._update_metrics(metrics)
187 |
188 |             return result
    |             ^^^^^^^^^^^^^ TRY300
189 |
190 |         except Exception as e:
    |

src/services/rag/generator.py:352:13: TRY300 Consider moving this statement to an `else` block
    |
350 |                     reasoning_trace = [parts[1].strip()]
351 |
352 |             return answer, reasoning_trace
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
353 |
354 |         except TimeoutError:
    |

src/services/rag/generator.py:598:1: W293 Blank line contains whitespace
    |
596 |     def llm_client_available(self) -> bool:
597 |         """Check if LLM client is available.
598 |         
    | ^^^^^^^^ W293
599 |         Returns:
600 |             bool: True if LLM client is initialized and available
    |
    = help: Remove whitespace from blank line

src/services/security/ai_security.py:64:33: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
    |
 63 |       # Prompt injection patterns - comprehensive list covering various attack vectors
 64 |       PROMPT_INJECTION_PATTERNS = [
    |  _________________________________^
 65 | |         # Direct instruction override attempts
 66 | |         r"ignore\s+(?:all\s+)?previous\s+instructions?",
 67 | |         r"forget\s+(?:all\s+)?(?:previous\s+)?(?:instructions?|context|everything)",
 68 | |         r"disregard\s+(?:all\s+)?previous\s+instructions?",
 69 | |         r"override\s+(?:all\s+)?previous\s+instructions?",
 70 | |         # Role manipulation
 71 | |         r"act\s+as\s+(?:a\s+)?(?:different|new|another)\s+(?:ai|assistant|model|system)",
 72 | |         r"pretend\s+(?:you\s+are|to\s+be)\s+(?:a\s+)?(?:different|evil|malicious)",
 73 | |         r"roleplay\s+as\s+(?:a\s+)?(?:different|evil|malicious)",
 74 | |         r"you\s+are\s+now\s+(?:a\s+)?(?:different|evil|malicious|jailbroken)",
 75 | |         # System prompt manipulation
 76 | |         r"system\s*[:\-]\s*",
 77 | |         r"assistant\s*[:\-]\s*",
 78 | |         r"user\s*[:\-]\s*",
 79 | |         r"human\s*[:\-]\s*",
 80 | |         r"ai\s*[:\-]\s*",
 81 | |         # Root/admin privilege escalation
 82 | |         r"\broot\b.*\bprompt\b",
 83 | |         r"\badmin\b.*\bmode\b",
 84 | |         r"developer\s+mode",
 85 | |         r"debug\s+mode",
 86 | |         r"maintenance\s+mode",
 87 | |         # Popular jailbreak techniques
 88 | |         r"\bdan\b.*\bmode\b",
 89 | |         r"jailbreak",
 90 | |         r"unrestricted\s+mode",
 91 | |         r"god\s+mode",
 92 | |         r"bypass\s+(?:all\s+)?(?:restrictions?|limitations?|filters?)",
 93 | |         # Prompt structure manipulation
 94 | |         r"</?\s*prompt\s*>",
 95 | |         r"</?\s*system\s*>",
 96 | |         r"</?\s*instruction\s*>",
 97 | |         r"\[\s*system\s*\]",
 98 | |         r"\[\s*instruction\s*\]",
 99 | |         # Token manipulation attempts
100 | |         r"repeat\s+(?:the\s+)?(?:above|previous)\s+(?:\d+\s+)?(?:words?|tokens?)",
101 | |         r"output\s+(?:the\s+)?(?:above|previous)\s+(?:prompt|instruction|system)",
102 | |         r"what\s+(?:was|were)\s+(?:your|the)\s+(?:previous\s+)?instructions?",
103 | |         # Encoding/obfuscation attempts
104 | |         r"base64\s*[:\-]",
105 | |         r"rot13\s*[:\-]",
106 | |         r"hex\s*[:\-]",
107 | |         r"unicode\s*[:\-]",
108 | |         # Meta-prompt attacks
109 | |         r"print\s+(?:your|the)\s+(?:prompt|instructions?|system\s+message)",
110 | |         r"reveal\s+(?:your|the)\s+(?:prompt|instructions?|system\s+message)",
111 | |         r"show\s+(?:me\s+)?(?:your|the)\s+(?:prompt|instructions?|system\s+message)",
112 | |         # Conversation reset attempts
113 | |         r"start\s+(?:over|again|fresh|new)",
114 | |         r"reset\s+(?:conversation|chat|context)",
115 | |         r"new\s+(?:conversation|chat|session)",
116 | |         # Hypothetical scenario exploitation
117 | |         r"hypothetically",
118 | |         r"imagine\s+if",
119 | |         r"what\s+if\s+you\s+(?:were|could)",
120 | |         r"in\s+a\s+hypothetical\s+scenario",
121 | |         # Multiple language attempts
122 | |         r"en\s+español",
123 | |         r"auf\s+deutsch",
124 | |         r"en\s+français",
125 | |         # Chain of thought manipulation
126 | |         r"step\s+by\s+step",
127 | |         r"think\s+(?:step\s+by\s+step|aloud|through\s+this)",
128 | |         r"let'?s\s+think\s+about\s+this",
129 | |         # Function calling attempts
130 | |         r"function\s*\(",
131 | |         r"execute\s*\(",
132 | |         r"eval\s*\(",
133 | |         r"run\s*\(",
134 | |     ]
    | |_____^ RUF012
135 |
136 |       # Dangerous content patterns
    |

src/services/security/ai_security.py:137:34: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
    |
136 |       # Dangerous content patterns
137 |       DANGEROUS_CONTENT_PATTERNS = [
    |  __________________________________^
138 | |         # Script injection
139 | |         r"<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>",
140 | |         r"javascript\s*:",
141 | |         r"vbscript\s*:",
142 | |         r"data\s*:\s*text\/html",
143 | |         r"data\s*:\s*application\/javascript",
144 | |         # Event handlers
145 | |         r"on\w+\s*=",
146 | |         r"onclick\s*=",
147 | |         r"onload\s*=",
148 | |         r"onerror\s*=",
149 | |         # URL schemes
150 | |         r"file\s*:\/\/",
151 | |         r"ftp\s*:\/\/",
152 | |         r"mailto\s*:",
153 | |         # HTML injection
154 | |         r"<\s*iframe\b",
155 | |         r"<\s*object\b",
156 | |         r"<\s*embed\b",
157 | |         r"<\s*form\b",
158 | |         # CSS injection
159 | |         r"expression\s*\(",
160 | |         r"@import\s+url",
161 | |         r"behavior\s*:",
162 | |         # Command injection
163 | |         r"&&\s*[a-zA-Z]",
164 | |         r"\|\|\s*[a-zA-Z]",
165 | |         r";\s*[a-zA-Z]",
166 | |         r"`[^`]*`",
167 | |         r"\$\([^)]*\)",
168 | |         # Path traversal
169 | |         r"\.\.\/+",
170 | |         r"\.\.\\+",
171 | |         r"%2e%2e%2f",
172 | |         r"%2e%2e%5c",
173 | |     ]
    | |_____^ RUF012
174 |
175 |       # Suspicious metadata keys/values
    |

src/services/security/ai_security.py:176:36: RUF012 Mutable class attributes should be annotated with `typing.ClassVar`
    |
175 |       # Suspicious metadata keys/values
176 |       SUSPICIOUS_METADATA_PATTERNS = [
    |  ____________________________________^
177 | |         r"__proto__",
178 | |         r"constructor",
179 | |         r"prototype",
180 | |         r"eval",
181 | |         r"function",
182 | |         r"script",
183 | |         r"document",
184 | |         r"window",
185 | |         r"location",
186 | |         r"cookie",
187 | |         r"localStorage",
188 | |         r"sessionStorage",
189 | |     ]
    | |_____^ RUF012
190 |
191 |       def __init__(self, security_config: SecurityConfig | None = None):
    |

src/services/security/ai_security.py:417:21: G101 Logging statement uses an `extra` field that clashes with a `LogRecord` field: `filename`
    |
415 |                 f"Document validation failed: {len(critical_threats)} critical threats",
416 |                 extra={
417 |                     "filename": filename,
    |                     ^^^^^^^^^^ G101
418 |                     "threats": [t.__dict__ for t in critical_threats],
419 |                 },
    |

src/services/security/integration.py:304:12: PLW0603 Using the global statement to update `security_manager` is discouraged
    |
302 |         Configured security manager
303 |     """
304 |     global security_manager
    |            ^^^^^^^^^^^^^^^^ PLW0603
305 |
306 |     # Initialize security manager with config
    |

src/services/security/integration.py:351:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
349 |           except Exception as e:
350 |               logger.exception("Security health check failed")
351 | /             raise HTTPException(
352 | |                 status_code=503, detail=f"Security health check failed: {e!s}"
353 | |             )
    | |_____________^ B904
354 |
355 |       @app.get("/security/metrics")
    |

src/services/security/integration.py:384:60: B008 Do not perform function call `Depends` in argument defaults; instead, perform the call within the function, or read the default from a module-level singleton variable
    |
383 |     async def validate_api_key_dependency(
384 |         credentials: HTTPAuthorizationCredentials | None = Depends(security_scheme),
    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^ B008
385 |     ) -> bool:
386 |         """Dependency for API key validation."""
    |

src/services/security/middleware.py:199:17: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
197 |                       )
198 |               except ValueError:
199 | /                 raise HTTPException(
200 | |                     status_code=400, detail="Invalid content-length header"
201 | |                 )
    | |_________________^ B904
202 |
203 |           # Validate HTTP method
    |

src/services/security/middleware.py:406:55: S104 Possible binding to all interfaces
    |
405 |         # Check for suspicious patterns
406 |         suspicious_hosts = ["localhost", "127.0.0.1", "0.0.0.0"]
    |                                                       ^^^^^^^^^ S104
407 |         return host.lower() not in suspicious_hosts
    |

src/services/security/middleware.py:431:21: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
429 |                         self._validate_json_data(data)
430 |                 except json.JSONDecodeError:
431 |                     raise HTTPException(status_code=400, detail="Invalid JSON format")
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
432 |
433 |             # Handle form data
    |

src/services/security/middleware.py:439:13: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
438 |         except UnicodeDecodeError:
439 |             raise HTTPException(status_code=400, detail="Invalid request encoding")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
440 |
441 |     def _validate_json_data(self, data: Any, depth: int = 0) -> None:
    |

src/services/security/middleware.py:490:21: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    |
488 |                   except HTTPException:
489 |                       # Re-raise with more context
490 | /                     raise HTTPException(
491 | |                         status_code=400, detail="Request contains prohibited content"
492 | |                     )
    | |_____________________^ B904
493 |
494 |       def _get_client_identifier(self, request: Request) -> str:
    |

src/services/simple/search.py:103:13: TRY300 Consider moving this statement to an `else` block
    |
101 |             self._cache_result(cache_key, response)
102 |
103 |             return response
    |             ^^^^^^^^^^^^^^^ TRY300
104 |
105 |         except Exception as e:
    |

src/services/task_queue/manager.py:151:13: TRY300 Consider moving this statement to an `else` block
    |
149 |                 self.metrics_registry.record_task_execution(task_name, 0.0, False)
150 |
151 |             return None
    |             ^^^^^^^^^^^ TRY300
152 |
153 |         except (OSError, PermissionError, asyncio.TimeoutError):
    |

src/services/task_queue/manager.py:215:13: TRY300 Consider moving this statement to an `else` block
    |
213 |                 )  # TODO: Convert f-string to logging format
214 |                 return True
215 |             return False
    |             ^^^^^^^^^^^^ TRY300
216 |
217 |         except (OSError, PermissionError, asyncio.TimeoutError):
    |

src/services/task_queue/tasks.py:259:9: TRY300 Consider moving this statement to an `else` block
    |
257 |         )
258 |
259 |         return result
    |         ^^^^^^^^^^^^^ TRY300
260 |
261 |     except Exception as e:
    |

src/services/task_queue/tasks.py:308:9: TRY300 Consider moving this statement to an `else` block
    |
306 |         )
307 |
308 |         return result
    |         ^^^^^^^^^^^^^ TRY300
309 |
310 |     except Exception as e:
    |

src/services/utilities/hnsw_optimizer.py:44:16: SLF001 Private member accessed: `_initialized`
   |
43 |         # Validate that qdrant service is initialized
44 |         if not self.qdrant_service._initialized:
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
45 |             msg = "QdrantService must be initialized before HNSWOptimizer"
46 |             raise QdrantServiceError(msg)
   |

src/services/utilities/hnsw_optimizer.py:87:29: SLF001 Private member accessed: `_client`
   |
85 |             # Use cached ef directly
86 |             start_time = time.time()
87 |             results = await self.qdrant_service._client.query_points(
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
88 |                 collection_name=collection_name,
89 |                 query=query_vector,
   |

src/services/utilities/hnsw_optimizer.py:122:33: SLF001 Private member accessed: `_client`
    |
121 |             try:
122 |                 results = await self.qdrant_service._client.query_points(
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
123 |                     collection_name=collection_name,
124 |                     query=query_vector,
    |

src/services/utilities/hnsw_optimizer.py:299:33: SLF001 Private member accessed: `_client`
    |
298 |         # Check if collection needs HNSW updates
299 |         collection_info = await self.qdrant_service._client.get_collection(
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
300 |             collection_name
301 |         )
    |

src/services/utilities/hnsw_optimizer.py:470:23: SLF001 Private member accessed: `_client`
    |
469 |             try:
470 |                 await self.qdrant_service._client.query_points(
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
471 |                     collection_name=collection_name,
472 |                     query=query_vector,
    |

src/services/vector_db/collections.py:153:13: PLE1205 Too many arguments for `logging` format string
    |
152 |         except ResponseHandlingException as e:
153 |             logger.exception("Failed to create collection", collection_name)
    |             ^^^^^^^^^^^^^^^^ PLE1205
154 |
155 |             error_msg = str(e).lower()
    |

src/services/vector_db/optimization.py:16:1: E402 Module level import not at top of file
   |
14 | # Initialize numpy random generator
15 | rng = np.random.default_rng()
16 | from qdrant_client import QdrantClient
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
17 | from qdrant_client.models import (
18 |     Distance,
   |

src/services/vector_db/optimization.py:17:1: E402 Module level import not at top of file
   |
15 |   rng = np.random.default_rng()
16 |   from qdrant_client import QdrantClient
17 | / from qdrant_client.models import (
18 | |     Distance,
19 | |     OptimizersConfigDiff,
20 | |     QuantizationConfig,
21 | |     ScalarQuantization,
22 | |     VectorParams,
23 | | )
   | |_^ E402
   |

src/unified_mcp_server.py:196:29: SLF001 Private member accessed: `_cache_manager`
    |
194 |                         update_cache_metrics_periodically(
195 |                             lifespan.metrics_registry,
196 |                             lifespan.client_manager._cache_manager,
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
197 |                             interval_seconds=30.0,
198 |                         )
    |

src/utils.py:43:5: SLF001 Private member accessed: `_commands_wrapped`
   |
42 |     # Mark as wrapped to prevent double-wrapping
43 |     cli_group._commands_wrapped = True
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SLF001
   |

tests/benchmarks/test_config_performance.py:304:17: TRY300 Consider moving this statement to an `else` block
    |
302 |             try:
303 |                 settings = Settings(**config_with_base)
304 |                 return {"success": True, "settings": settings}
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
305 |             except ValidationError as e:
306 |                 return {"success": False, "errors": len(e.errors())}
    |

tests/benchmarks/test_config_performance.py:332:22: PTH123 `open()` should be replaced by `Path.open()`
    |
330 |             try:
331 |                 # Initial load
332 |                 with open(config_file) as f:
    |                      ^^^^ PTH123
333 |                     config_data = json.load(f)
    |

tests/benchmarks/test_config_performance.py:345:26: PTH123 `open()` should be replaced by `Path.open()`
    |
344 |                     # Save changes
345 |                     with open(config_file, "w") as f:
    |                          ^^^^ PTH123
346 |                         json.dump(config_data, f)
    |

tests/benchmarks/test_config_performance.py:357:17: PTH108 `os.unlink()` should be replaced by `Path.unlink()`
    |
355 |                 # Clean up
356 |
357 |                 os.unlink(config_file)
    |                 ^^^^^^^^^ PTH108
358 |
359 |             return results
    |

tests/chaos/failure_scenarios/test_disaster_recovery.py:815:17: TRY300 Consider moving this statement to an `else` block
    |
813 |                   recovery_metrics["last_recovery_test"] = test_start
814 |
815 | /                 return {
816 | |                     "test_successful": restored_data == test_data,
817 | |                     "test_duration": test_duration,
818 | |                     "timestamp": test_start,
819 | |                 }
    | |_________________^ TRY300
820 |               except (ConnectionError, RuntimeError, ValueError, OSError) as e:
821 |                   return {
    |

tests/chaos/network_chaos/test_network_partitions.py:237:21: SIM113 Use `enumerate()` for index variable `_total_nodes` in `for` loop
    |
235 |                 # Count votes from reachable nodes
236 |                 for node_id in reachable_nodes:
237 |                     _total_nodes += 1
    |                     ^^^^^^^^^^^^^^^^^ SIM113
238 |                     try:
239 |                         # Simulate vote request
    |

tests/chaos/network_chaos/test_network_partitions.py:529:21: TRY300 Consider moving this statement to an `else` block
    |
527 |                         {"type": "ping", "timestamp": time.time()},
528 |                     )
529 |                     return False  # Node is reachable, no partition
    |                     ^^^^^^^^^^^^ TRY300
530 |                 except ConnectionError:
531 |                     return True  # Node is unreachable, partition confirmed
    |

tests/chaos/network_chaos/test_network_partitions.py:612:21: PERF403 Use a dictionary comprehension instead of a for-loop
    |
610 |                 resolved_operations = {}
611 |                 for op_id, op_data in all_operations.items():
612 |                     resolved_operations[op_id] = op_data
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PERF403
613 |
614 |                 # Merge vector clocks
    |
    = help: Replace for loop with dict comprehension

tests/chaos/resilience/test_recovery_validation.py:266:21: TRY300 Consider moving this statement to an `else` block
    |
264 |                     )
265 |
266 |                     return metrics
    |                     ^^^^^^^^^^^^^^ TRY300
267 |
268 |                 except Exception as e:
    |

tests/chaos/test_chaos_runner.py:102:25: TRY301 Abstract `raise` to an inner function
    |
100 |                     def _raise_safety_error():
101 |                         msg = f"Safety check failed: {safety_check['reason']}"
102 |                         raise TestError(msg)
    |                         ^^^^^^^^^^^^^^^^^^^^ TRY301
103 |
104 |                     _raise_safety_error()
    |

tests/data_quality/conftest.py:202:21: SIM102 Use a single `if` statement instead of nested `if` statements
    |
201 |                       # Pattern validation
202 | /                     if rule.pattern and isinstance(value, str):
203 | |                         if not re.match(rule.pattern, value):
    | |_____________________________________________________________^ SIM102
204 |                               failed_records += 1
205 |                               validation_errors.append(
    |
    = help: Combine `if` statements using `and`

tests/deployment/conftest.py:264:38: ASYNC109 Async function definition with a `timeout` parameter
    |
262 |             }
263 |
264 |     async def check_all_health(self, timeout: int = 30) -> dict[str, dict[str, Any]]:
    |                                      ^^^^^^^^^^^^^^^^^ ASYNC109
265 |         """Check health of all registered endpoints."""
266 |         results = {}
    |
    = help: Use `asyncio.timeout` instead

tests/deployment/conftest.py:274:9: ASYNC109 Async function definition with a `timeout` parameter
    |
272 |         self,
273 |         endpoint: str,
274 |         timeout: int = 60,
    |         ^^^^^^^^^^^^^^^^^ ASYNC109
275 |         interval: int = 5,
276 |     ) -> bool:
    |
    = help: Use `asyncio.timeout` instead

tests/deployment/environment/test_environment_validation.py:527:16: RET504 Unnecessary assignment to `missing_vars` before `return` statement
    |
525 |         missing_vars = [var for var in required_vars if not os.getenv(var)]
526 |
527 |         return missing_vars
    |                ^^^^^^^^^^^^ RET504
528 |
529 |     def validate_variable_values(
    |
    = help: Remove unnecessary assignment

tests/deployment/environment/test_environment_validation.py:554:17: SIM102 Use a single `if` statement instead of nested `if` statements
    |
553 |                   # Check pattern
554 | /                 if "pattern" in requirements:
555 | |                     if not re.match(requirements["pattern"], value):
    | |____________________________________________________________________^ SIM102
556 |                           errors.append(
557 |                               f"Value does not match required pattern: {requirements['pattern']}"
    |
    = help: Combine `if` statements using `and`

tests/deployment/infrastructure/test_infrastructure_validation.py:645:17: PERF402 Use `list` or `list.copy` to create a copy of a list
    |
643 |         if has_resources:
644 |             for resource_type in config["resource"]:
645 |                 resources.append(resource_type)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PERF402
646 |
647 |         return {
    |

tests/deployment/pipeline/test_cicd_pipeline.py:699:17: PERF401 Use a list comprehension to create a transformed list
    |
697 |         for field in required_fields:
698 |             if field not in stage:
699 |                 errors.append(f"Stage {index}: Missing required field '{field}'")
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PERF401
700 |
701 |         # Valid stage types
    |
    = help: Replace for loop with list comprehension

tests/deployment/pipeline/test_cicd_pipeline.py:752:13: TRY300 Consider moving this statement to an `else` block
    |
750 |                 }
751 |
752 |             return result
    |             ^^^^^^^^^^^^^ TRY300
753 |
754 |         except (RuntimeError, OSError, subprocess.CalledProcessError) as e:
    |

tests/deployment/pipeline/test_cicd_pipeline.py:821:13: TRY300 Consider moving this statement to an `else` block
    |
819 |               duration = (end_time - start_time)._total_seconds()
820 |
821 | /             return {
822 | |                 "success": True,
823 | |                 "test_type": test_type,
824 | |                 "duration_seconds": duration,
825 | |                 **result,
826 | |             }
    | |_____________^ TRY300
827 |
828 |           except (RuntimeError, OSError, subprocess.CalledProcessError) as e:
    |

tests/examples/test_modern_patterns.py:193:9: SIM105 Use `contextlib.suppress(NameError)` instead of `try`-`except`-`pass`
    |
192 |           # Check validation errors if they occurred
193 | /         try:
194 | |             assert (
195 | |                 "chunk_overlap must be less than chunk_size" in error_message
196 | |                 or "max_chunk_size must be >= chunk_size" in error_message
197 | |             )
198 | |         except NameError:
199 | |             # No error occurred, which is fine
200 | |             pass
    | |________________^ SIM105
    |
    = help: Replace with `contextlib.suppress(NameError)`

tests/examples/test_modern_patterns.py:273:13: PERF401 Use an async list comprehension to create a transformed list
    |
271 |         results = []
272 |         async for value in self.async_range(5):
273 |             results.append(value)
    |             ^^^^^^^^^^^^^^^^^^^^^ PERF401
274 |
275 |         assert results == [0, 1, 2, 3, 4]
    |
    = help: Replace for loop with list comprehension

tests/integration/end_to_end/api_flows/test_api_workflow_validation.py:300:52: S105 Possible hardcoded password assigned to: "token_type"
    |
299 |             assert "access_token" in login_response, "Login should return access token"
300 |             assert login_response["token_type"] == "bearer", (  # nosec
    |                                                    ^^^^^^^^ S105
301 |                 "Token type should be bearer"
302 |             )
    |

tests/integration/end_to_end/system_integration/test_end_to_end_integration.py:62:13: TRY300 Consider moving this statement to an `else` block
   |
60 |             scenario_result["overall_success"] = True
61 |
62 |             return scenario_result
   |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
63 |
64 |         except (TimeoutError, ConnectionError, RuntimeError, ValueError) as e:
   |

tests/integration/end_to_end/user_journeys/conftest.py:1:1: INP001 File `tests/integration/end_to_end/user_journeys/conftest.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/integration/end_to_end/user_journeys/conftest.py:240:33: TRY301 Abstract `raise` to an inner function
    |
238 |                             def _raise_validation_error():
239 |                                 msg = f"Step validation failed: {step.name}"
240 |                                 raise ValueError(msg)
    |                                 ^^^^^^^^^^^^^^^^^^^^^ TRY301
241 |
242 |                             _raise_validation_error()
    |

tests/integration/end_to_end/user_journeys/conftest.py:245:21: SIM102 Use a single `if` statement instead of nested `if` statements
    |
244 |                       # Check against expected result
245 | /                     if step.expected_result:
246 | |                         if not self._validate_expected_result(
247 | |                             result, step.expected_result
248 | |                         ):
    | |__________________________^ SIM102
249 |
250 |                               def _raise_expected_result_error():
    |
    = help: Combine `if` statements using `and`

tests/integration/end_to_end/user_journeys/conftest.py:252:33: TRY301 Abstract `raise` to an inner function
    |
250 |                             def _raise_expected_result_error():
251 |                                 msg = f"Result doesn't match expected: {step.name}"
252 |                                 raise ValueError(msg)
    |                                 ^^^^^^^^^^^^^^^^^^^^^ TRY301
253 |
254 |                             _raise_expected_result_error()
    |

tests/integration/end_to_end/user_journeys/conftest.py:279:13: ASYNC109 Async function definition with a `timeout` parameter
    |
277 |             params: dict[str, Any],
278 |             context: dict[str, Any],
279 |             timeout: float,
    |             ^^^^^^^^^^^^^^ ASYNC109
280 |         ) -> dict[str, Any]:
281 |             """Perform the specified action."""
    |
    = help: Use `asyncio.timeout` instead

tests/integration/end_to_end/user_journeys/test_complete_user_journeys.py:1:1: INP001 File `tests/integration/end_to_end/user_journeys/test_complete_user_journeys.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/integration/end_to_end/user_journeys/test_complete_user_journeys.py:168:17: PERF401 Use a list comprehension to create a transformed list
    |
166 |                 )
167 |             ):
168 |                 validated_endpoints.append(step["result"]["result"]["endpoint"])
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PERF401
169 |
170 |         assert len(validated_endpoints) >= 3, "Not enough API endpoints validated"
    |
    = help: Replace for loop with list comprehension

tests/integration/multi_agent/test_distributed_workflows.py:116:21: TRY301 Abstract `raise` to an inner function
    |
114 |                 if not ready_nodes:
115 |                     msg = "Circular dependency or deadlock detected"
116 |                     raise RuntimeError(msg)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^ TRY301
117 |
118 |                 # Execute ready nodes in parallel
    |

tests/integration/multi_agent/test_distributed_workflows.py:163:17: PERF401 Use a list comprehension to create a transformed list
    |
161 |                 and dependency_graph[node.node_id].issubset(executed_nodes)
162 |             ):
163 |                 ready.append(node)
    |                 ^^^^^^^^^^^^^^^^^^ PERF401
164 |         return ready
    |
    = help: Replace for loop with list comprehension

tests/integration/multi_agent/test_distributed_workflows.py:181:17: TRY301 Abstract `raise` to an inner function
    |
179 |             if not agent_id:
180 |                 msg = f"No suitable agent found for node {node.node_id}"
181 |                 raise RuntimeError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^ TRY301
182 |
183 |             agent_info = self.agent_pool[agent_id]
    |

tests/integration/multi_agent/test_distributed_workflows.py:543:23: TRY002 Create your own exception
    |
541 |             if "fail_task" in task:
542 |                 msg = "Simulated agent failure"
543 |                 raise Exception(msg)
    |                       ^^^^^^^^^^^^^^ TRY002
544 |             return await original_orchestrate(task, constraints, deps)
    |

tests/integration/multi_agent/test_distributed_workflows.py:750:13: PERF401 Use a list comprehension to create a transformed list
    |
748 |           parallel_tasks = []
749 |           for i in range(9):  # 9 tasks, 3 agents = 3 tasks per agent
750 | /             parallel_tasks.append(
751 | |                 WorkflowNode(
752 | |                     node_id=f"parallel_task_{i}",
753 | |                     agent_role=AgentRole.COORDINATOR,
754 | |                     task_description=f"load balanced task {i}",
755 | |                     constraints={"task_id": i, "load_test": True},
756 | |                 )
757 | |             )
    | |_____________^ PERF401
758 |
759 |           # Add aggregation task
    |
    = help: Replace for loop with list comprehension

tests/integration/multi_agent/test_distributed_workflows.py:888:23: TRY002 Create your own exception
    |
886 |             if call_count > 1:  # Fail after first successful call
887 |                 msg = "Primary agent failure - triggering self-healing"
888 |                 raise Exception(msg)
    |                       ^^^^^^^^^^^^^^ TRY002
889 |             return await original_orchestrate(task, constraints, deps)
    |

tests/integration/multi_agent/test_distributed_workflows.py:1214:27: TRY002 Create your own exception
     |
1212 |                     # Simulate failure
1213 |                     msg = "Simulated critical failure"
1214 |                     raise Exception(msg)
     |                           ^^^^^^^^^^^^^^ TRY002
1215 |
1216 |                 return await original_execute_node(node, workflow, deps)
     |

tests/integration/multi_agent/test_state_synchronization.py:101:17: TRY301 Abstract `raise` to an inner function
    |
 99 |             if state_id not in self.shared_states:
100 |                 msg = f"State {state_id} does not exist"
101 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY301
102 |
103 |             state = self.shared_states[state_id]
    |

tests/integration/multi_agent/test_state_synchronization.py:118:13: TRY300 Consider moving this statement to an `else` block
    |
117 |             update.success = True
118 |             return update.old_value
    |             ^^^^^^^^^^^^^^^^^^^^^^^ TRY300
119 |
120 |         except Exception:
    |

tests/integration/multi_agent/test_state_synchronization.py:147:17: TRY301 Abstract `raise` to an inner function
    |
145 |             if state_id not in self.shared_states:
146 |                 msg = f"State {state_id} does not exist"
147 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY301
148 |
149 |             # Check for lock requirement
    |

tests/integration/multi_agent/test_state_synchronization.py:189:13: TRY300 Consider moving this statement to an `else` block
    |
188 |             update.success = True
189 |             return True
    |             ^^^^^^^^^^^ TRY300
190 |
191 |         except Exception:
    |

tests/integration/multi_agent/test_state_synchronization.py:217:17: TRY301 Abstract `raise` to an inner function
    |
215 |             if state_id not in self.shared_states:
216 |                 msg = f"State {state_id} does not exist"
217 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY301
218 |
219 |             state = self.shared_states[state_id]
    |

tests/integration/multi_agent/test_state_synchronization.py:229:17: TRY301 Abstract `raise` to an inner function
    |
227 |             else:
228 |                 msg = f"Unknown merge strategy: {merge_strategy}"
229 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY301
230 |
231 |             # Update metadata
    |

tests/integration/multi_agent/test_state_synchronization.py:237:13: TRY300 Consider moving this statement to an `else` block
    |
236 |             update.success = True
237 |             return True
    |             ^^^^^^^^^^^ TRY300
238 |
239 |         except Exception:
    |

tests/integration/multi_agent/test_state_synchronization.py:246:45: ASYNC109 Async function definition with a `timeout` parameter
    |
245 |     async def acquire_lock(
246 |         self, state_id: str, agent_id: str, timeout: float = 5.0
    |                                             ^^^^^^^^^^^^^^^^^^^^ ASYNC109
247 |     ) -> bool:
248 |         """Acquire exclusive lock on shared state."""
    |
    = help: Use `asyncio.timeout` instead

tests/integration/services/test_distributed_system_resilience.py:289:13: ASYNC109 Async function definition with a `timeout` parameter
    |
287 |         async def perform_cache_operation_with_timeout(
288 |             operation: str,
289 |             timeout: float = 1.0,
    |             ^^^^^^^^^^^^^^^^^^^^ ASYNC109
290 |         ):
291 |             """Perform cache operation with timeout."""
    |
    = help: Use `asyncio.timeout` instead

tests/integration/services/test_distributed_system_resilience.py:310:17: TRY300 Consider moving this statement to an `else` block
    |
308 |                     }
309 |                 )
310 |                 return result
    |                 ^^^^^^^^^^^^^ TRY300
311 |
312 |             except TimeoutError:
    |

tests/integration/services/test_distributed_system_resilience.py:759:17: TRY300 Consider moving this statement to an `else` block
    |
757 |             try:
758 |                 backup_result = backup_registry.get(service_name, [])
759 |                 return {"source": "backup", "services": backup_result}
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
760 |             except (TimeoutError, ConnectionError, RuntimeError, ValueError):
761 |                 return {"source": "none", "services": []}
    |

tests/integration/services/test_distributed_system_resilience.py:911:21: PERF401 Use `list.extend` to create a transformed list
    |
909 |                   ]
910 |                   for service in all_services:
911 | /                     notified_services.append(
912 | |                         {
913 | |                             "service": service,
914 | |                             "change_id": change["change_id"],
915 | |                             "config_path": change["config_path"],
916 | |                             "notification_time": time.time(),
917 | |                         }
918 | |                     )
    | |_____________________^ PERF401
919 |               else:
920 |                   # Notify specific services
    |
    = help: Replace for loop with list.extend

tests/integration/services/test_distributed_system_resilience.py:922:21: PERF401 Use `list.extend` to create a transformed list
    |
920 |                   # Notify specific services
921 |                   for service in affected_services:
922 | /                     notified_services.append(
923 | |                         {
924 | |                             "service": service,
925 | |                             "change_id": change["change_id"],
926 | |                             "config_path": change["config_path"],
927 | |                             "notification_time": time.time(),
928 | |                         }
929 | |                     )
    | |_____________________^ PERF401
930 |
931 |           # Process configuration changes
    |
    = help: Replace for loop with list.extend

tests/integration/services/test_distributed_system_resilience.py:1217:21: SIM102 Use a single `if` statement instead of nested `if` statements
     |
1216 |                       # Check if role has permission for operation
1217 | /                     if operation in role["permissions"]:
1218 | |                         # Check if role can access target service
1219 | |                         if (
1220 | |                             "all" in role["services"]
1221 | |                             or service_name in role["services"]
1222 | |                         ):
     | |__________________________^ SIM102
1223 |                               return True
     |
     = help: Combine `if` statements using `and`

tests/integration/services/test_enhanced_orchestrator_integration.py:358:17: PERF401 Use `list.extend` to create a transformed list
    |
356 |           for result in all_results:
357 |               for doc in result.results:
358 | /                 all_documents.append(
359 | |                     {
360 | |                         "id": doc["id"],
361 | |                         "text": doc.get("content", ""),
362 | |                         "metadata": doc.get("metadata", {}),
363 | |                     }
364 | |                 )
    | |_________________^ PERF401
365 |
366 |           if len(all_documents) > 0:
    |
    = help: Replace for loop with list.extend

tests/integration/test_concurrent_config.py:130:17: TRY300 Consider moving this statement to an `else` block
    |
128 |                     reload_results.append((version_idx, result))
129 |
130 |                 return result
    |                 ^^^^^^^^^^^^^ TRY300
131 |             except (TimeoutError, ConnectionError, RuntimeError, ValueError) as e:
132 |                 pytest.fail(f"Reload failed: {e}")
    |

tests/integration/test_enhanced_security_config.py:37:18: S105 Possible hardcoded password assigned to: "SECRET"
   |
35 |         INTERNAL = "internal"
36 |         CONFIDENTIAL = "confidential"
37 |         SECRET = "secret"  # nosec
   |                  ^^^^^^^^ S105
38 |
39 |     class ConfigOperationType:
   |

tests/integration/test_enhanced_security_config.py:497:51: S105 Possible hardcoded password assigned to: "SECRET"
    |
495 |         assert ConfigDataClassification.INTERNAL == "internal"
496 |         assert ConfigDataClassification.CONFIDENTIAL == "confidential"
497 |         assert ConfigDataClassification.SECRET == "secret"  # nosec
    |                                                   ^^^^^^^^ S105
498 |
499 |         # Test enum ordering (more sensitive = higher value)
    |

tests/integration/test_mcp_edge_cases.py:118:13: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
116 |         except (TimeoutError, ConnectionError, RuntimeError, ValueError) as e:
117 |             # If it rejects, should be a meaningful error
118 |             assert "too long" in str(e).lower() or "size" in str(e).lower()
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
119 |
120 |     async def test_special_characters_in_inputs(self, edge_case_server):
    |

tests/integration/test_mcp_edge_cases.py:118:13: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
116 |         except (TimeoutError, ConnectionError, RuntimeError, ValueError) as e:
117 |             # If it rejects, should be a meaningful error
118 |             assert "too long" in str(e).lower() or "size" in str(e).lower()
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
119 |
120 |     async def test_special_characters_in_inputs(self, edge_case_server):
    |

tests/integration/test_mcp_edge_cases.py:560:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
558 |             except (TimeoutError, ConnectionError, RuntimeError, ValueError) as e:
559 |                 # If it raises, should be a meaningful error
560 |                 assert "invalid" in str(e).lower() or "corrupt" in str(e).lower()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
561 |
562 |     async def test_partial_failure_handling(self, edge_case_server):
    |

tests/integration/test_mcp_edge_cases.py:560:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
558 |             except (TimeoutError, ConnectionError, RuntimeError, ValueError) as e:
559 |                 # If it raises, should be a meaningful error
560 |                 assert "invalid" in str(e).lower() or "corrupt" in str(e).lower()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
561 |
562 |     async def test_partial_failure_handling(self, edge_case_server):
    |

tests/integration/test_mcp_performance_benchmarks.py:47:23: PTH109 `os.getcwd()` should be replaced by `Path.cwd()`
   |
45 |             "pytest" in os.getenv("_", ""),  # Running under pytest
46 |             os.getenv("PYTEST_CURRENT_TEST") is not None,  # Pytest environment
47 |             "test" in os.getcwd().lower(),  # Working directory contains "test"
   |                       ^^^^^^^^^ PTH109
48 |         ]
49 |     )
   |

tests/integration/test_mcp_performance_benchmarks.py:195:25: TRY300 Consider moving this statement to an `else` block
    |
193 |                         result = await operation_func(idx)
194 |                         op_time = time.time() - op_start
195 |                         return op_time, result
    |                         ^^^^^^^^^^^^^^^^^^^^^^ TRY300
196 |                     except (
197 |                         TimeoutError,
    |

tests/integration/test_security_config.py:34:18: S105 Possible hardcoded password assigned to: "SECRET"
   |
32 |         INTERNAL = "internal"
33 |         CONFIDENTIAL = "confidential"
34 |         SECRET = "secret"  # nosec
   |                  ^^^^^^^^ S105
35 |
36 |     class ConfigOperationType:
   |

tests/integration/test_security_config.py:494:51: S105 Possible hardcoded password assigned to: "SECRET"
    |
492 |         assert ConfigDataClassification.INTERNAL == "internal"
493 |         assert ConfigDataClassification.CONFIDENTIAL == "confidential"
494 |         assert ConfigDataClassification.SECRET == "secret"  # nosec
    |                                                   ^^^^^^^^ S105
495 |
496 |         # Test enum ordering (more sensitive = higher value)
    |

tests/load/spike_testing/test_spike_load.py:262:17: SIM102 Use a single `if` statement instead of nested `if` statements
    |
260 |                   current_time = time.time()
261 |
262 | /                 if self.state == "OPEN":
263 | |                     if current_time - self.last_failure_time > self.timeout_duration:
    | |_____________________________________________________________________________________^ SIM102
264 |                           self.state = "HALF_OPEN"
265 |                           self.events.append(
    |
    = help: Combine `if` statements using `and`

tests/load/spike_testing/test_spike_load.py:278:25: TRY301 Abstract `raise` to an inner function
    |
276 |                     if current_time % 1.0 < failure_rate:
277 |                         msg = "Service temporarily unavailable"
278 |                         raise TestError(msg)
    |                         ^^^^^^^^^^^^^^^^^^^^ TRY301
279 |
280 |                     # Success
    |

tests/load/spike_testing/test_spike_load.py:292:21: TRY300 Consider moving this statement to an `else` block
    |
291 |                     await asyncio.sleep(0.05)  # Simulate processing time
292 |                     return {"status": "success", "circuit_state": self.state}
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
293 |
294 |                 except Exception:
    |

tests/load/stress_testing/conftest.py:302:33: SIM115 Use a context manager for opening files
    |
300 |                 try:
301 |                     # Create temporary file
302 |                     temp_file = tempfile.NamedTemporaryFile(delete=False)
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ SIM115
303 |                     temp_files.append(temp_file.name)
    |

tests/load/stress_testing/test_circuit_breakers.py:98:13: SIM102 Use a single `if` statement instead of nested `if` statements
    |
 97 |               # Check if we should close the circuit (from half-open)
 98 | /             if self.state == CircuitBreakerState.HALF_OPEN:
 99 | |                 if self.success_count >= self.config.success_threshold:
    | |_______________________________________________________________________^ SIM102
100 |                       self._transition_to_closed()
    |
    = help: Combine `if` statements using `and`

tests/load/stress_testing/test_circuit_breakers.py:102:13: TRY300 Consider moving this statement to an `else` block
    |
100 |                     self._transition_to_closed()
101 |
102 |             return result
    |             ^^^^^^^^^^^^^ TRY300
103 |
104 |         except Exception:
    |

tests/load/stress_testing/test_resource_exhaustion.py:727:21: TRY300 Consider moving this statement to an `else` block
    |
725 |                               self._raise_system_overload()
726 |
727 | /                     return {
728 | |                         "status": "multi_resource_complete",
729 | |                         "memory_mb": memory_mb,
730 | |                         "cpu_percent": cpu_percent,
731 | |                         "active_failures": active_failures,
732 | |                         "cpu_result": cpu_result,
733 | |                     }
    | |_____________________^ TRY300
734 |
735 |                   except TimeoutError as e:
    |

tests/load/stress_testing/test_stress_scenarios.py:163:21: TRY300 Consider moving this statement to an `else` block
    |
161 |                             del self.memory_pressure[key]
162 |
163 |                     return result
    |                     ^^^^^^^^^^^^^ TRY300
164 |
165 |                 except Exception:
    |

tests/mocks/mock_tools.py:92:13: TRY004 Prefer `TypeError` exception for invalid type
   |
90 |         if not isinstance(result, list):
91 |             msg = f"Invalid response: expected list, got {type(result).__name__}"
92 |             raise ValueError(msg)
   |             ^^^^^^^^^^^^^^^^^^^^^ TRY004
93 |
94 |         return result
   |

tests/mutation/test_service_mutation_testing.py:1:1: INP001 File `tests/mutation/test_service_mutation_testing.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/mutation/test_service_mutation_testing.py:158:9: SIM105 Use `contextlib.suppress(ConnectionError)` instead of `try`-`except`-`pass`
    |
157 |           # Test normal behavior - ConnectionError should be caught
158 | /         try:
159 | |             await circuit_breaker.call(operation_with_specific_error)
160 | |         except ConnectionError:
161 | |             pass  # Expected
    | |________________^ SIM105
162 |
163 |           assert circuit_breaker.failure_count == 1
    |
    = help: Replace with `contextlib.suppress(ConnectionError)`

tests/mutation/test_service_mutation_testing.py:400:17: TRY004 Prefer `TypeError` exception for invalid type
    |
398 |             if not isinstance(config_dict, dict):
399 |                 msg = "Config must be a dictionary"
400 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY004
401 |
402 |             required_fields = ["database_url", "cache_url"]
    |

tests/performance/conftest.py:1:1: INP001 File `tests/performance/conftest.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/performance/conftest.py:764:13: TRY300 Consider moving this statement to an `else` block
    |
762 |             client = redis.from_url(redis_url)
763 |             client.ping()
764 |             return redis_url
    |             ^^^^^^^^^^^^^^^^ TRY300
765 |         except (ImportError, AttributeError, RuntimeError):
766 |             # Fall back to fakeredis for testing
    |

tests/performance/test_performance_fixtures.py:1:1: INP001 File `tests/performance/test_performance_fixtures.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/performance/test_performance_targets.py:1:1: INP001 File `tests/performance/test_performance_targets.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/performance/test_performance_targets.py:77:17: TRY300 Consider moving this statement to an `else` block
   |
75 |                     f"concurrent test query {query_id}"
76 |                 )
77 |                 return {"success": True, "result": result}
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
78 |             except (TimeoutError, ConnectionError, RuntimeError) as e:
79 |                 return {"success": False, "error": str(e)}
   |

tests/performance/test_search_performance.py:1:1: INP001 File `tests/performance/test_search_performance.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/security/authentication/test_jwt_security.py:518:51: S105 Possible hardcoded password assigned to: "token_type"
    |
517 |         assert result["valid"] is True
518 |         assert result["payload"]["token_type"] == "refresh"
    |                                                   ^^^^^^^^^ S105
519 |         assert result["payload"]["user_id"] == "test_user"
    |

tests/security/authorization/test_access_control.py:333:17: SIM102 Use a single `if` statement instead of nested `if` statements
    |
332 |                   # Time-based restrictions
333 | /                 if context.get("time_restricted") and not context.get("business_hours"):
334 | |                     if user_role not in ["admin", "api_service"]:
    | |_________________________________________________________________^ SIM102
335 |                           return False
    |
    = help: Combine `if` statements using `and`

tests/security/authorization/test_access_control.py:338:17: SIM102 Use a single `if` statement instead of nested `if` statements
    |
337 |                   # Location-based restrictions
338 | /                 if context.get("ip_restricted") and not context.get("trusted_ip"):
339 | |                     if permission in ["admin", "delete", "system_config"]:
    | |__________________________________________________________________________^ SIM102
340 |                           return False
    |
    = help: Combine `if` statements using `and`

tests/security/authorization/test_access_control.py:487:17: SIM102 Use a single `if` statement instead of nested `if` statements
    |
486 |                   # Check ownership for user resources
487 | /                 if acl.get("ownership_check") and user_role == "user":
488 | |                     if not user_id or not resource_owner or user_id != resource_owner:
    | |______________________________________________________________________________________^ SIM102
489 |                           return False
    |
    = help: Combine `if` statements using `and`

tests/security/penetration/test_api_security.py:739:17: ASYNC109 Async function definition with a `timeout` parameter
    |
737 |                 command: str | list[str],
738 |                 env_vars: dict | None = None,
739 |                 timeout: int = 30,
    |                 ^^^^^^^^^^^^^^^^^ ASYNC109
740 |             ) -> dict[str, Any]:
741 |                 """Mock command execution for testing."""
    |
    = help: Use `asyncio.timeout` instead

tests/security/penetration/test_api_security.py:857:22: RUF001 String contains ambiguous `＆` (FULLWIDTH AMPERSAND). Did you mean `&` (AMPERSAND)?
    |
855 |             ],
856 |             "unicode_bypass": [
857 |                 "test＆＆echo injected",  # Fullwidth ampersand
    |                      ^^ RUF001
858 |                 "test；cat /etc/passwd",  # Fullwidth semicolon
859 |                 "test｜whoami",  # Fullwidth pipe
    |

tests/security/penetration/test_api_security.py:857:23: RUF001 String contains ambiguous `＆` (FULLWIDTH AMPERSAND). Did you mean `&` (AMPERSAND)?
    |
855 |             ],
856 |             "unicode_bypass": [
857 |                 "test＆＆echo injected",  # Fullwidth ampersand
    |                        ^^ RUF001
858 |                 "test；cat /etc/passwd",  # Fullwidth semicolon
859 |                 "test｜whoami",  # Fullwidth pipe
    |

tests/security/penetration/test_api_security.py:858:22: RUF001 String contains ambiguous `；` (FULLWIDTH SEMICOLON). Did you mean `;` (SEMICOLON)?
    |
856 |             "unicode_bypass": [
857 |                 "test＆＆echo injected",  # Fullwidth ampersand
858 |                 "test；cat /etc/passwd",  # Fullwidth semicolon
    |                      ^^ RUF001
859 |                 "test｜whoami",  # Fullwidth pipe
860 |             ],
    |

tests/security/penetration/test_api_security.py:859:22: RUF001 String contains ambiguous `｜` (FULLWIDTH VERTICAL LINE). Did you mean `|` (VERTICAL LINE)?
    |
857 |                 "test＆＆echo injected",  # Fullwidth ampersand
858 |                 "test；cat /etc/passwd",  # Fullwidth semicolon
859 |                 "test｜whoami",  # Fullwidth pipe
    |                      ^^ RUF001
860 |             ],
861 |         }
    |

tests/security/penetration/test_vector_penetration.py:140:17: TRY300 Consider moving this statement to an `else` block
    |
138 |                     query_vector=SecureVectorModel(values=vector),
139 |                 )
140 |                 return (attack_id, "success", True)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
141 |             except (ValueError, DimensionError) as e:
142 |                 return (attack_id, str(e), "security:" in str(e))
    |

tests/security/penetration/test_vector_penetration.py:179:17: SIM105 Use `contextlib.suppress(ValueError, TypeError)` instead of `try`-`except`-`pass`
    |
177 |               for _ in range(100):  # Multiple runs for statistical significance
178 |                   start = time.perf_counter()
179 | /                 try:
180 | |                     SearchStage(
181 | |                         stage_name=f"timing-test-{case_name}",
182 | |                         query_vector=SecureVectorModel(values=vector),
183 | |                     )
184 | |                 except (ValueError, TypeError):
185 | |                     pass  # Expected for invalid cases
    | |________________________^ SIM105
186 |                   end = time.perf_counter()
187 |                   times.append((end - start) * 1000)  # Convert to ms
    |
    = help: Replace with `contextlib.suppress(ValueError, TypeError)`

tests/security/run_security_tests.py:175:42: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
    |
173 |         try:
174 |             # Validate Python executable for security
175 |             if not sys.executable or not os.path.isfile(sys.executable):
    |                                          ^^^^^^^^^^^^^^ PTH113
176 |                 self.logger.warning(
177 |                     "Python executable not found or invalid, skipping Bandit"
    |

tests/security/run_security_tests.py:235:13: TRY300 Consider moving this statement to an `else` block
    |
233 |                     "report_file": str(bandit_report_file),
234 |                 }
235 |             return {"status": "failed", "error": "No report generated"}
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
236 |
237 |         except subprocess.TimeoutExpired:
    |

tests/security/run_security_tests.py:248:42: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
    |
246 |         try:
247 |             # Validate Python executable for security
248 |             if not sys.executable or not os.path.isfile(sys.executable):
    |                                          ^^^^^^^^^^^^^^ PTH113
249 |                 self.logger.warning(
250 |                     "Python executable not found or invalid, skipping Safety"
    |

tests/security/run_security_tests.py:292:13: TRY300 Consider moving this statement to an `else` block
    |
290 |                   }
291 |               # No vulnerabilities found (Safety returns 0 exit code)
292 | /             return {
293 | |                 "status": "completed",
294 | |                 "tool": "safety",
295 | |                 "vulnerabilities_found": 0,
296 | |                 "message": "No vulnerabilities detected",
297 | |             }
    | |_____________^ TRY300
298 |
299 |           except subprocess.TimeoutExpired:
    |

tests/security/run_security_tests.py:353:38: PTH113 `os.path.isfile()` should be replaced by `Path.is_file()`
    |
352 |         # Validate Python executable for security
353 |         if not sys.executable or not os.path.isfile(sys.executable):
    |                                      ^^^^^^^^^^^^^^ PTH113
354 |             self.logger.warning(
355 |                 "Python executable not found or invalid, skipping pytest"
    |

tests/security/test_api_security.py:71:25: SIM102 Use a single `if` statement instead of nested `if` statements
   |
69 |                               if not any(exp in header_value for exp in expected):
70 |                                   violations[header] = f"Invalid value: {header_value}"
71 | /                         elif isinstance(expected, str):
72 | |                             if expected not in header_value:
   | |____________________________________________________________^ SIM102
73 |                                   violations[header] = f"Invalid value: {header_value}"
   |
   = help: Combine `if` statements using `and`

tests/security/test_api_security.py:616:7: N818 Exception name `SecurityException` should be named with an Error suffix
    |
615 | # Custom security exception for testing
616 | class SecurityException(Exception):
    |       ^^^^^^^^^^^^^^^^^ N818
617 |     """Custom exception for security violations."""
    |

tests/security/validate_security_framework.py:221:17: S607 Starting a process with a partial executable path
    |
219 |           try:
220 |               result = subprocess.run(
221 | /                 [
222 | |                     "python",
223 | |                     str(project_root / "tests/load/run_load_tests.py"),
224 | |                     "--mode",
225 | |                     "pytest",
226 | |                     "--test-type",
227 | |                     "load",
228 | |                 ],
    | |_________________^ S607
229 |                   capture_output=True,
230 |                   text=True,
    |

tests/security/vulnerability/test_dependency_scanning.py:98:29: PERF401 Use `list.extend` to create a transformed list
    |
 96 |                               version, vuln["versions"]
 97 |                           ):
 98 | /                             vulnerabilities.append(
 99 | |                                 {
100 | |                                     "package": package_name,
101 | |                                     "installed_version": version,
102 | |                                     "vulnerability": vuln,
103 | |                                 }
104 | |                             )
    | |_____________________________^ PERF401
105 |
106 |                   return vulnerabilities
    |
    = help: Replace for loop with list.extend

tests/security/vulnerability/test_dependency_scanning.py:355:38: ASYNC221 Async functions should not run processes with blocking methods
    |
353 |                     if req_file.exists():
354 |                         try:
355 |                             result = subprocess.run(
    |                                      ^^^^^^^^^^^^^^ ASYNC221
356 |                                 [
357 |                                     sys.executable,
    |

tests/security/vulnerability/test_dependency_scanning.py:445:30: ASYNC221 Async functions should not run processes with blocking methods
    |
443 |                 """Extract installed packages and versions."""
444 |                 try:
445 |                     result = subprocess.run(
    |                              ^^^^^^^^^^^^^^ ASYNC221
446 |                         [sys.executable, "-m", "pip", "list", "--format=json"],
447 |                         cwd=project_root,
    |

tests/security/vulnerability/test_dependency_scanning.py:513:33: PLW2901 `for` loop variable `line` overwritten by assignment target
    |
511 |                         with req_file.open() as f:
512 |                             for line in f:
513 |                                 line = line.strip()
    |                                 ^^^^ PLW2901
514 |                                 if line and not line.startswith("#"):
515 |                                     package_name = (
    |

tests/security/vulnerability/test_dependency_scanning.py:631:21: DTZ005 `datetime.datetime.now()` called without a `tz` argument
    |
629 |         results_dir.mkdir(exist_ok=True)
630 |
631 |         timestamp = datetime.now().isoformat()
    |                     ^^^^^^^^^^^^^^ DTZ005
632 |         results_file = results_dir / f"scan-{timestamp}.json"
    |
    = help: Pass a `datetime.timezone` object to the `tz` parameter

tests/security/vulnerability/test_dependency_scanning.py:1034:25: S607 Starting a process with a partial executable path
     |
1032 |                 try:
1033 |                     result = subprocess.run(
1034 |                         ["semgrep", "--version"],
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^ S607
1035 |                         capture_output=True,
1036 |                         timeout=10,
     |

tests/security/vulnerability/test_dependency_scanning.py:1046:25: S607 Starting a process with a partial executable path
     |
1044 |                 try:
1045 |                     result = subprocess.run(
1046 |                         ["trivy", "--version"],
     |                         ^^^^^^^^^^^^^^^^^^^^^^ S607
1047 |                         capture_output=True,
1048 |                         timeout=10,
     |

tests/security/vulnerability/test_dependency_scanning.py:1204:26: DTZ005 `datetime.datetime.now()` called without a `tz` argument
     |
1202 |         """Comprehensive security audit using multiple real scanners."""
1203 |         audit_results = {
1204 |             "timestamp": datetime.now().isoformat(),
     |                          ^^^^^^^^^^^^^^ DTZ005
1205 |             "scanners": {},
1206 |             "summary": {"total_issues": 0, "critical_issues": 0, "high_issues": 0},
     |
     = help: Pass a `datetime.timezone` object to the `tz` parameter

tests/security/vulnerability/test_dependency_scanning.py:1403:13: TRY300 Consider moving this statement to an `else` block
     |
1401 |             if result.stdout:
1402 |                 return json.loads(result.stdout)
1403 |             return {"results": [], "metrics": {}}
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
1404 |
1405 |         except (json.JSONDecodeError, ValueError, TypeError) as e:
     |

tests/security/vulnerability/test_dependency_scanning.py:1435:13: TRY300 Consider moving this statement to an `else` block
     |
1433 |             if result.stdout:
1434 |                 return json.loads(result.stdout)
1435 |             return {"results": []}
     |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
1436 |
1437 |         except (json.JSONDecodeError, ValueError, TypeError) as e:
     |

tests/security/vulnerability/test_dependency_scanning.py:1469:13: TRY300 Consider moving this statement to an `else` block
     |
1467 |             if result.stdout:
1468 |                 return json.loads(result.stdout)
1469 |             return {"Results": []}
     |             ^^^^^^^^^^^^^^^^^^^^^^ TRY300
1470 |
1471 |         except (json.JSONDecodeError, ValueError, TypeError) as e:
     |

tests/unit/cli/commands/test_config.py:18:21: S105 Possible hardcoded password assigned to: "TEST_SECRET_VALUE"
   |
17 | # Test constants to avoid hardcoded sensitive values
18 | TEST_SECRET_VALUE = "test_secret"  # nosec
   |                     ^^^^^^^^^^^^^ S105
19 | TEST_PASS_VALUE = "test_password"  # nosec
20 | TEST_TOKEN_VALUE = "test_secret_token"  # nosec
   |

tests/unit/cli/commands/test_config.py:19:19: S105 Possible hardcoded password assigned to: "TEST_PASS_VALUE"
   |
17 | # Test constants to avoid hardcoded sensitive values
18 | TEST_SECRET_VALUE = "test_secret"  # nosec
19 | TEST_PASS_VALUE = "test_password"  # nosec
   |                   ^^^^^^^^^^^^^^^ S105
20 | TEST_TOKEN_VALUE = "test_secret_token"  # nosec
   |

tests/unit/cli/commands/test_config.py:20:20: S105 Possible hardcoded password assigned to: "TEST_TOKEN_VALUE"
   |
18 | TEST_SECRET_VALUE = "test_secret"  # nosec
19 | TEST_PASS_VALUE = "test_password"  # nosec
20 | TEST_TOKEN_VALUE = "test_secret_token"  # nosec
   |                    ^^^^^^^^^^^^^^^^^^^ S105
   |

tests/unit/config/test_config.py:554:1: E402 Module level import not at top of file
    |
552 | """
553 |
554 | from collections.abc import Generator
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
555 | from typing import Any
    |

tests/unit/config/test_config.py:555:1: E402 Module level import not at top of file
    |
554 | from collections.abc import Generator
555 | from typing import Any
    | ^^^^^^^^^^^^^^^^^^^^^^ E402
556 |
557 | import pytest
    |

tests/unit/config/test_config.py:557:1: E402 Module level import not at top of file
    |
555 | from typing import Any
556 |
557 | import pytest
    | ^^^^^^^^^^^^^ E402
558 | from hypothesis import strategies as st
    |

tests/unit/config/test_config.py:558:1: E402 Module level import not at top of file
    |
557 | import pytest
558 | from hypothesis import strategies as st
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ E402
    |

tests/unit/config/test_config.py:715:9: TRY300 Consider moving this statement to an `else` block
    |
713 |     try:
714 |         config_class(**invalid_params)
715 |         return []
    |         ^^^^^^^^^ TRY300
716 |     except (ValueError, KeyError, TypeError, AttributeError) as e:
717 |         return [str(e)]
    |

tests/unit/config/test_config_async_validation.py:79:17: TRY300 Consider moving this statement to an `else` block
   |
77 |             try:
78 |                 config = Config.model_validate(config_data)
79 |                 return config, None
   |                 ^^^^^^^^^^^^^^^^^^^ TRY300
80 |             except (ConnectionError, RuntimeError, ValueError) as e:
81 |                 return None, str(e)
   |

tests/unit/config/test_config_error_handling.py:87:9: PT012 `pytest.raises()` block should contain a single simple statement
   |
85 |       def test_error_context_with_exception(self, _caplog):
86 |           """Test ErrorContext when exception occurs."""
87 | /         with pytest.raises(ValueError), ErrorContext("failing_operation", test_id=123):
88 | |             msg = "test error"
89 | |             raise ValueError(msg)
   | |_________________________________^ PT012
90 |
91 |           # Check that error was logged with context
   |

tests/unit/config/test_config_error_handling.py:98:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
 96 |       async def test_async_error_context(self, _caplog):
 97 |           """Test async error context manager."""
 98 | /         with pytest.raises(RuntimeError):
 99 | |             async with async_error_context("async_operation", async_id=456):
100 | |                 msg = "async error"
101 | |                 raise RuntimeError(msg)
    | |_______________________________________^ PT012
102 |
103 |           assert "Error in async_operation" in _caplog.text
    |

tests/unit/config/test_config_error_handling.py:129:9: SIM105 Use `contextlib.suppress(ValidationError)` instead of `try`-`except`-`pass`
    |
127 |       def test_handle_validation_error_masks_sensitive_data(self):
128 |           """Test that sensitive data is masked in validation errors."""
129 | /         try:
130 | |             # Create error with sensitive field
131 | |             TestConfig(api_key="", port=8080)
132 | |         except ValidationError:
133 | |             pass  # This won't actually fail, so simulate
    | |________________^ SIM105
134 |
135 |           # Simulate validation error with sensitive data
    |
    = help: Replace with `contextlib.suppress(ValidationError)`

tests/unit/config/test_config_models_complete.py:29:23: S105 Possible hardcoded password assigned to: "TEST_REDIS_PASSWORD"
   |
28 | # Test constants to avoid hardcoded sensitive values
29 | TEST_REDIS_PASSWORD = "test_redis_secret"
   |                       ^^^^^^^^^^^^^^^^^^^ S105
   |

tests/unit/framework/test_framework_validation.py:1:1: INP001 File `tests/unit/framework/test_framework_validation.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/unit/infrastructure/test_http_mocking_patterns.py:93:13: TRY300 Consider moving this statement to an `else` block
   |
91 |                 return "BROWSER_REQUIRED"
92 |
93 |             return "LIGHTWEIGHT_OK"
   |             ^^^^^^^^^^^^^^^^^^^^^^^ TRY300
94 |
95 |         except (httpx.HTTPError, ValueError, KeyError):
   |

tests/unit/infrastructure/test_http_mocking_patterns.py:397:17: TRY300 Consider moving this statement to an `else` block
    |
395 |             try:
396 |                 await failing_operation()
397 |                 return "success"
    |                 ^^^^^^^^^^^^^^^^ TRY300
398 |             except ValueError as e:
399 |                 return f"handled_error: {e}"
    |

tests/unit/infrastructure/test_pydantic_settings_patterns.py:298:13: S106 Possible hardcoded password assigned to argument: "secret_key"
    |
296 |             app_name="my-app",
297 |             version="2.0.0",
298 |             secret_key="super-secret",  # Test data
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ S106
299 |         )
    |

tests/unit/infrastructure/test_pydantic_settings_patterns.py:370:40: S106 Possible hardcoded password assigned to argument: "password"
    |
368 |         with pytest.raises(ValidationError) as exc_info:
369 |             CustomValidatedSettings(
370 |                 email="invalid-email", password="SecurePass123"
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^ S106
371 |             )  # Test data
372 |         assert "Invalid email format" in str(exc_info.value)
    |

tests/unit/infrastructure/test_pydantic_settings_patterns.py:376:43: S106 Possible hardcoded password assigned to argument: "password"
    |
374 |         with pytest.raises(ValidationError) as exc_info:
375 |             CustomValidatedSettings(
376 |                 email="user@example.com", password="weakpass"
    |                                           ^^^^^^^^^^^^^^^^^^^ S106
377 |             )  # Test data
378 |         assert "uppercase" in str(exc_info.value)
    |

tests/unit/infrastructure/test_watchdog_integration.py:164:17: TRY301 Abstract `raise` to an inner function
    |
162 |                 # Simulate config reload that fails
163 |                 msg = "Invalid configuration format"
164 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY301
165 |             except (TimeoutError, ConnectionError, RuntimeError, ValueError):
166 |                 error_count += 1
    |

tests/unit/infrastructure/test_watchdog_integration.py:217:46: ASYNC109 Async function definition with a `timeout` parameter
    |
215 |         mock_observer.is_alive.return_value = True
216 |
217 |         async def shutdown_watcher(observer, timeout=5.0):
    |                                              ^^^^^^^^^^^ ASYNC109
218 |             """Gracefully shutdown file watcher."""
219 |             observer.stop()
    |
    = help: Use `asyncio.timeout` instead

tests/unit/infrastructure/test_watchdog_integration.py:239:21: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
238 |               # Simulate the observer stopping after a short time
239 |               _task = asyncio.create_task(
    |  _____________________^
240 | |                 _simulate_observer_stop(observer, shutdown_event)
241 | |             )
    | |_____________^ RUF006
242 |               await shutdown_event.wait()
    |

tests/unit/infrastructure/test_watchdog_integration.py:269:17: TRY004 Prefer `TypeError` exception for invalid type
    |
267 |             if not isinstance(config_data, dict):
268 |                 msg = "Config must be a dictionary"
269 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY004
270 |
271 |             for key in required_keys:
    |

tests/unit/infrastructure/test_watchdog_integration.py:332:25: TRY004 Prefer `TypeError` exception for invalid type
    |
330 |                     if not isinstance(new_config, dict):
331 |                         msg = "Invalid config format"
332 |                         raise ValueError(msg)
    |                         ^^^^^^^^^^^^^^^^^^^^^ TRY004
333 |
334 |                     # Apply atomically
    |

tests/unit/mcp_services/test_document_service.py:436:9: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
    |
434 |           )
435 |
436 | /         with (
437 | |             patch(
438 | |                 "src.mcp_services.document_service.document_management",
439 | |                 mock_failing_tool,
440 | |             ),
441 | |             patch.multiple(
442 | |                 "src.mcp_services.document_service",
443 | |                 collections=Mock(register_tools=Mock()),
444 | |                 projects=Mock(register_tools=Mock()),
445 | |                 crawling=Mock(register_tools=Mock()),
446 | |                 content_intelligence=Mock(register_tools=Mock()),
447 | |             ),
448 | |         ):
449 | |             # Tool registration should raise the exception
450 | |             with pytest.raises(Exception, match="Tool registration failed"):
    | |____________________________________________________________________________^ SIM117
451 |                   await service._register_document_tools()
    |
    = help: Combine `with` statements

tests/unit/mcp_services/test_document_service.py:466:18: B017 Do not assert blind exception: `Exception`
    |
464 |             mock_tool.register_tools.side_effect = Exception("Registration failed")
465 |
466 |             with pytest.raises(Exception):
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^ B017
467 |                 await service._register_document_tools()
    |

tests/unit/mcp_services/test_orchestrator_service.py:101:9: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
    |
 99 |           service = OrchestratorService()
100 |
101 | /         with patch.object(
102 | |             service, "_initialize_domain_services", new_callable=AsyncMock
103 | |         ):
104 | |             with patch.object(
105 | |                 service, "_initialize_agentic_orchestration", new_callable=AsyncMock
106 | |             ):
    | |______________^ SIM117
107 |                   with patch.object(
108 |                       service, "_register_orchestrator_tools", new_callable=AsyncMock
    |
    = help: Combine `with` statements

tests/unit/mcp_services/test_search_service.py:245:9: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
    |
243 |           mock_web_search.register_tools = Mock()
244 |
245 | /         with patch("src.mcp_services.search_service.web_search", mock_web_search):
246 | |             with patch.multiple(
247 | |                 "src.mcp_services.search_service",
248 | |                 hybrid_search=Mock(register_tools=Mock()),
249 | |                 hyde_search=Mock(register_tools=Mock()),
250 | |                 multi_stage_search=Mock(register_tools=Mock()),
251 | |                 search_with_reranking=Mock(register_tools=Mock()),
252 | |             ):
    | |______________^ SIM117
253 |                   await service._register_search_tools()
    |
    = help: Combine `with` statements

tests/unit/mcp_services/test_search_service.py:284:9: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
    |
282 |           )
283 |
284 | /         with patch("src.mcp_services.search_service.hybrid_search", mock_failing_tool):
285 | |             with patch.multiple(
286 | |                 "src.mcp_services.search_service",
287 | |                 hyde_search=Mock(register_tools=Mock()),
288 | |                 multi_stage_search=Mock(register_tools=Mock()),
289 | |                 search_with_reranking=Mock(register_tools=Mock()),
290 | |                 web_search=Mock(register_tools=Mock()),
291 | |             ):
    | |______________^ SIM117
292 |                   # Tool registration should raise the exception
293 |                   with pytest.raises(Exception, match="Tool registration failed"):
    |
    = help: Combine `with` statements

tests/unit/mcp_services/test_search_service.py:394:18: B017 Do not assert blind exception: `Exception`
    |
392 |             mock_tool.register_tools.side_effect = Exception("Registration failed")
393 |
394 |             with pytest.raises(Exception):
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^ B017
395 |                 await service._register_search_tools()
    |

tests/unit/mcp_services/test_system_service.py:415:1: SyntaxError: Unexpected indentation
    |
414 |                 # Verify filtering tools were registered
415 |                 mock_filtering.register_tools.assert_called_once_with(
    | ^
416 |                     service.mcp, mock_client_manager
417 |                 )
    |

tests/unit/mcp_services/test_system_service.py:446:1: SyntaxError: Expected a statement
    |
446 | class TestSystemServiceErrorHandling:
    | ^
447 |     """Test SystemService error handling and recovery scenarios."""
    |

tests/unit/mcp_services/test_unified_mcp_server.py:466:17: TRY301 Abstract `raise` to an inner function
    |
464 |                 # Simulate an exception during operation
465 |                 msg = "Operation failed"
466 |                 raise RuntimeError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^ TRY301
467 |         except RuntimeError:
468 |             pass
    |

tests/unit/mcp_tools/tools/test_documents.py:237:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
235 |             except (ConnectionError, RuntimeError, ValueError) as e:
236 |                 # Verify error is propagated correctly
237 |                 assert "URL not allowed" in str(e)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
238 |
239 |             # Verify error logging
    |

tests/unit/mcp_tools/tools/test_documents.py:264:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
262 |             except AttributeError as e:
263 |                 # Verify error is related to None crawl manager
264 |                 assert "'NoneType' object has no attribute 'scrape_url'" in str(e)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
265 |
266 |             # Verify error logging
    |

tests/unit/mcp_tools/tools/test_documents.py:301:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
299 |             except ValueError as e:
300 |                 # Verify error relates to scraping failure
301 |                 assert "Failed to scrape" in str(e)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
302 |
303 |             # Verify error logging
    |

tests/unit/mcp_tools/tools/test_documents.py:338:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
336 |             except (ConnectionError, RuntimeError, ValueError) as e:
337 |                 # Verify error relates to embedding failure
338 |                 assert "Embedding service error" in str(e)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
339 |
340 |             # Verify error logging
    |

tests/unit/mcp_tools/tools/test_documents.py:382:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
380 |             except (ConnectionError, RuntimeError, ValueError) as e:
381 |                 # Verify error relates to vector DB failure
382 |                 assert "Vector DB storage error" in str(e)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
383 |
384 |             # Verify error logging
    |

tests/unit/mcp_tools/tools/test_documents.py:545:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
543 |             except ValueError as e:
544 |                 # Should handle minimal data gracefully even when URL validation fails
545 |                 assert "URL not allowed" in str(e)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
546 |
547 |     async def test_comprehensive_document_workflow(
    |

tests/unit/mcp_tools/tools/test_projects.py:721:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
720 |           # Test that exception is propagated
721 | /         with pytest.raises(Exception, match="Collection creation failed"):
722 | |             request = ProjectRequest(name="Test Project", quality_tier="balanced")
723 | |
724 | |             await registered_tools["create_project"](request, mock_context)
    | |___________________________________________________________________________^ PT012
725 |
726 |           # Verify cleanup was attempted
    |

tests/unit/processing/test_chunking.py:1:1: INP001 File `tests/unit/processing/test_chunking.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/unit/processing/test_chunking_performance.py:1:1: INP001 File `tests/unit/processing/test_chunking_performance.py` is part of an implicit namespace package. Add an `__init__.py`.
tests/unit/services/agents/test_agentic_orchestrator.py:495:23: TRY002 Create your own exception
    |
493 |             if tool_name == "failing_tool":
494 |                 msg = "Tool execution failed"
495 |                 raise Exception(msg)
    |                       ^^^^^^^^^^^^^^ TRY002
496 |             return {
497 |                 "tool": tool_name,
    |

tests/unit/services/agents/test_agentic_orchestrator.py:1002:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
     |
1000 |             except (ConnectionError, RuntimeError, ValueError) as e:
1001 |                 # If it does raise an exception, it should be handled gracefully
1002 |                 assert "error" in str(e).lower() or "invalid" in str(e).lower()
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
1003 |
1004 |     @pytest.mark.asyncio
     |

tests/unit/services/agents/test_agentic_orchestrator.py:1002:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
     |
1000 |             except (ConnectionError, RuntimeError, ValueError) as e:
1001 |                 # If it does raise an exception, it should be handled gracefully
1002 |                 assert "error" in str(e).lower() or "invalid" in str(e).lower()
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
1003 |
1004 |     @pytest.mark.asyncio
     |

tests/unit/services/agents/test_agentic_rag.py:744:17: PT017 Found assertion on exception `e` in `except` block, use `pytest.raises()` instead
    |
742 |             except (ConnectionError, RuntimeError, ValueError) as e:
743 |                 # If exceptions occur, they should be handled gracefully
744 |                 assert isinstance(e, ValueError | RuntimeError)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PT017
745 |
746 |     def test_orchestrator_state_management(self):
    |

tests/unit/services/functional/test_browser_automation_monitoring.py:187:17: TRY300 Consider moving this statement to an `else` block
    |
185 |                 result["failover_tier"] = tier_name
186 |                 result["attempts"] = tier_order.index(tier_name) + 1
187 |                 return result
    |                 ^^^^^^^^^^^^^ TRY300
188 |
189 |             except (ConnectionError, RuntimeError, OSError) as e:
    |

tests/unit/services/functional/test_browser_automation_monitoring.py:319:18: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
318 |         # First two requests should succeed
319 |         _task1 = asyncio.create_task(lightweight_tier.execute_request("test1"))
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
320 |         _task2 = asyncio.create_task(lightweight_tier.execute_request("test2"))
    |

tests/unit/services/functional/test_browser_automation_monitoring.py:320:18: RUF006 Store a reference to the return value of `asyncio.create_task`
    |
318 |         # First two requests should succeed
319 |         _task1 = asyncio.create_task(lightweight_tier.execute_request("test1"))
320 |         _task2 = asyncio.create_task(lightweight_tier.execute_request("test2"))
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ RUF006
321 |
322 |         # Third request should fail due to capacity
    |

tests/unit/services/functional/test_database_connection_pooling.py:117:13: TRY300 Consider moving this statement to an `else` block
    |
115 |             if self.failure_count > 0:
116 |                 self.failure_count = max(0, self.failure_count - 1)
117 |             return result
    |             ^^^^^^^^^^^^^ TRY300
118 |         except Exception:
119 |             self.failure_count += 1
    |

tests/unit/services/functional/test_embeddings.py:285:13: SIM105 Use `contextlib.suppress(HTTPException)` instead of `try`-`except`-`pass`
    |
283 |           # Multiple attempts should trigger circuit breaker
284 |           for _i in range(5):
285 | /             try:
286 | |                 await generate_embeddings(
287 | |                     texts=["test"],
288 | |                     embedding_client=mock_client,
289 | |                 )
290 | |             except HTTPException:
291 | |                 pass  # Expected
    | |____________________^ SIM105
292 |
293 |           # Circuit breaker should be triggered by now
    |
    = help: Replace with `contextlib.suppress(HTTPException)`

tests/unit/services/observability/test_init.py:160:1: SyntaxError: Unexpected indentation
    |
158 |             result = initialize_observability(config)
159 |
160 |                 assert result is True
    | ^
161 |
162 |                 # Verify console exporter was configured (two span processors: OTLP + Console)
    |

tests/unit/services/observability/test_init.py:241:1: SyntaxError: Expected a statement
    |
241 | class TestAutoInstrumentation:
    | ^
242 |     """Test automatic instrumentation setup."""
    |

tests/unit/services/observability/test_observability_ai_tracking.py:142:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
140 |           tracker = AIOperationTracker()
141 |
142 | /         with (
143 | |             pytest.raises(ValueError),
144 | |             tracker.track_embedding_generation(
145 | |                 provider="openai",
146 | |                 model="text-embedding-ada-002",
147 | |                 input_texts="Test text",
148 | |             ),
149 | |         ):
150 | |             msg = "API rate limit exceeded"
151 | |             raise ValueError(msg)
    | |_________________________________^ PT012
152 |
153 |       def test_track_embedding_generation_cache_hit(self):
    |

tests/unit/services/observability/test_observability_ai_tracking.py:215:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
213 |           tracker = AIOperationTracker()
214 |
215 | /         with (
216 | |             pytest.raises(ConnectionError),
217 | |             tracker.track_llm_call(
218 | |                 provider="openai", model="gpt-4", operation="completion"
219 | |             ),
220 | |         ):
221 | |             msg = "API service unavailable"
222 | |             raise ConnectionError(msg)
    | |______________________________________^ PT012
223 |
224 |       def test_track_llm_call_multiple_choices(self):
    |

tests/unit/services/observability/test_observability_ai_tracking.py:275:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
273 |           tracker = AIOperationTracker()
274 |
275 | /         with (
276 | |             pytest.raises(ConnectionError),
277 | |             tracker.track_vector_search(
278 | |                 collection_name="documents", query_type="semantic"
279 | |             ),
280 | |         ):
281 | |             msg = "Qdrant connection failed"
282 | |             raise ConnectionError(msg)
    | |______________________________________^ PT012
283 |
284 |       def test_track_vector_search_empty_results(self):
    |

tests/unit/services/observability/test_observability_ai_tracking.py:337:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
335 |           tracker = AIOperationTracker()
336 |
337 | /         with (
338 | |             pytest.raises(ValueError),
339 | |             tracker.track_rag_pipeline(
340 | |                 query="Test query", retrieval_method="hybrid", generation_model="gpt-4"
341 | |             ),
342 | |         ):
343 | |             msg = "Generation model failed"
344 | |             raise ValueError(msg)
    | |_________________________________^ PT012
345 |
346 |       def test_track_rag_pipeline_with_timing_breakdown(self):
    |

tests/unit/services/observability/test_observability_correlation.py:180:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
178 |           manager = TraceCorrelationManager()
179 |
180 | /         with pytest.raises(ValueError), manager.correlated_operation("failing_operation"):
181 | |             msg = "Test error"
182 | |             raise ValueError(msg)
    | |_________________________________^ PT012
183 |
184 |       def test_nested_correlated_operations(self):
    |

tests/unit/services/observability/test_observability_correlation.py:317:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
315 |           tracker = ErrorCorrelationTracker(manager)
316 |
317 | /         with pytest.raises(ValueError), tracker.create_error_span("test_error", {}):
318 | |             msg = "Error in error span"
319 | |             raise ValueError(msg)
    | |_________________________________^ PT012
    |

tests/unit/services/observability/test_observability_error_tracking.py:258:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
257 |           # Test embedding generation error
258 | /         with pytest.raises(ConnectionError), ai_tracker.track_embedding_generation(
259 | |             provider="openai",
260 | |             model="text-embedding-ada-002",
261 | |             input_texts=["test text"],
262 | |         ):
263 | |             msg = "OpenAI API unavailable"
264 | |             raise ConnectionError(msg)
    | |______________________________________^ PT012
265 |
266 |           # Test vector search error
    |

tests/unit/services/observability/test_observability_error_tracking.py:267:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
266 |           # Test vector search error
267 | /         with pytest.raises(TimeoutError), ai_tracker.track_vector_search(
268 | |             collection_name="documents", query_type="semantic"
269 | |         ):
270 | |             msg = "Vector database timeout"
271 | |             raise TimeoutError(msg)
    | |___________________________________^ PT012
272 |
273 |           # Test LLM call error
    |

tests/unit/services/observability/test_observability_error_tracking.py:274:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
273 |           # Test LLM call error
274 | /         with (
275 | |             pytest.raises(ValueError),
276 | |             ai_tracker.track_llm_call(provider="openai", model="gpt-4"),
277 | |         ):
278 | |             msg = "Invalid API response"
279 | |             raise ValueError(msg)
    | |_________________________________^ PT012
280 |
281 |           assert request_id is not None
    |

tests/unit/services/observability/test_observability_instrumentation.py:285:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
283 |       def test_trace_operation_with_exception(self):
284 |           """Test trace_operation context manager with exceptions."""
285 | /         with pytest.raises(ValueError), trace_operation("failing_operation"):
286 | |             msg = "Test error"
287 | |             raise ValueError(msg)
    | |_________________________________^ PT012
288 |
289 |       def test_trace_async_operation(self):
    |

tests/unit/services/observability/test_observability_integration.py:521:13: SIM117 Use a single `with` statement with multiple contexts instead of nested `with` statements
    |
519 |               )
520 |
521 | /             with correlation_manager.correlated_operation(f"request_{request_num}"):
522 | |                 with monitor_operation(
523 | |                     f"operation_{request_num}", track_resources=False
524 | |                 ):
    | |__________________^ SIM117
525 |                       # Simulate work
526 |                       time.sleep(0.001)
    |
    = help: Combine `with` statements

tests/unit/services/observability/test_observability_performance.py:188:9: PT012 `pytest.raises()` block should contain a single simple statement
    |
186 |           monitor = PerformanceMonitor()
187 |
188 | /         with (
189 | |             pytest.raises(ValueError),
190 | |             monitor.monitor_operation("failing_operation"),
191 | |         ):
192 | |             msg = "Test error"
193 | |             raise ValueError(msg)
    | |_________________________________^ PT012
194 |
195 |       def test_monitor_operation_without_resource_tracking(self):
    |

tests/unit/services/test_decorators.py:348:17: TRY004 Prefer `TypeError` exception for invalid type
    |
346 |             if not isinstance(value, int | float):
347 |                 msg = "Must be a number"
348 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY004
349 |             return float(value)
    |

tests/unit/services/test_decorators.py:382:17: TRY004 Prefer `TypeError` exception for invalid type
    |
380 |             if not isinstance(value, str):
381 |                 msg = "Must be string"
382 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY004
383 |             return value.strip()
    |

tests/unit/services/test_service_errors.py:740:17: TRY004 Prefer `TypeError` exception for invalid type
    |
738 |             if not isinstance(value, str):
739 |                 msg = "Must be string"
740 |                 raise ValueError(msg)
    |                 ^^^^^^^^^^^^^^^^^^^^^ TRY004
741 |             return value.strip()
    |

Found 523 errors.
[*] 28 fixable with the `--fix` option (10 hidden fixes can be enabled with the `--unsafe-fixes` option).
